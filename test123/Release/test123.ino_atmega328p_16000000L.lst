
C:\Users\dlcks\AppData\Local\Temp\VMBuilds\test123\uno\Release/test123.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__ctors_end>
       4:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
       8:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
       c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      10:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      14:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      18:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      1c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      20:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      24:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      28:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      2c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      30:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      34:	0c 94 4a 03 	jmp	0x694	; 0x694 <__vector_13>
      38:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      3c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      40:	0c 94 00 03 	jmp	0x600	; 0x600 <__vector_16>
      44:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      48:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__vector_18>
      4c:	0c 94 a8 02 	jmp	0x550	; 0x550 <__vector_19>
      50:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      54:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      58:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      5c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      60:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      64:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
      68:	08 00       	.word	0x0008	; ????
      6a:	00 00       	nop
      6c:	be 92       	st	-X, r11
      6e:	24 49       	sbci	r18, 0x94	; 148
      70:	12 3e       	cpi	r17, 0xE2	; 226
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
      78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
      7a:	4c 3e       	cpi	r20, 0xEC	; 236
      7c:	00 00       	nop
      7e:	00 80       	ld	r0, Z
      80:	be ab       	std	Y+54, r27	; 0x36
      82:	aa aa       	std	Y+50, r10	; 0x32
      84:	aa 3e       	cpi	r26, 0xEA	; 234
      86:	00 00       	nop
      88:	00 00       	nop
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	00 00       	nop
      92:	00 00       	nop
      94:	00 08       	sbc	r0, r0
      96:	41 78       	andi	r20, 0x81	; 129
      98:	d3 bb       	out	0x13, r29	; 19
      9a:	43 87       	std	Z+11, r20	; 0x0b
      9c:	d1 13       	cpse	r29, r17
      9e:	3d 19       	sub	r19, r13
      a0:	0e 3c       	cpi	r16, 0xCE	; 206
      a2:	c3 bd       	out	0x23, r28	; 35
      a4:	42 82       	std	Z+2, r4	; 0x02
      a6:	ad 2b       	or	r26, r29
      a8:	3e 68       	ori	r19, 0x8E	; 142
      aa:	ec 82       	std	Y+4, r14	; 0x04
      ac:	76 be       	out	0x36, r7	; 54
      ae:	d9 8f       	std	Y+25, r29	; 0x19
      b0:	e1 a9       	ldd	r30, Z+49	; 0x31
      b2:	3e 4c       	sbci	r19, 0xCE	; 206
      b4:	80 ef       	ldi	r24, 0xF0	; 240
      b6:	ff be       	out	0x3f, r15	; 63
      b8:	01 c4       	rjmp	.+2050   	; 0x8bc <main+0x1da>
      ba:	ff 7f       	andi	r31, 0xFF	; 255
      bc:	3f 00       	.word	0x003f	; ????
      be:	00 00       	nop
	...

000000c2 <__ctors_start>:
__trampolines_start():
      c2:	28 0c       	add	r2, r8

000000c4 <__ctors_end>:
__dtors_end():
      c4:	11 24       	eor	r1, r1
      c6:	1f be       	out	0x3f, r1	; 63
      c8:	cf ef       	ldi	r28, 0xFF	; 255
      ca:	d8 e0       	ldi	r29, 0x08	; 8
      cc:	de bf       	out	0x3e, r29	; 62
      ce:	cd bf       	out	0x3d, r28	; 61

000000d0 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
      d0:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
      d2:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
      d4:	b1 e0       	ldi	r27, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
      d6:	ea e2       	ldi	r30, 0x2A	; 42
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
      d8:	ff e1       	ldi	r31, 0x1F	; 31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
      da:	02 c0       	rjmp	.+4      	; 0xe0 <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
      dc:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
      de:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
      e0:	a4 31       	cpi	r26, 0x14	; 20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
      e2:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
      e4:	d9 f7       	brne	.-10     	; 0xdc <__do_copy_data+0xc>

000000e6 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
      e6:	22 e0       	ldi	r18, 0x02	; 2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
      e8:	a4 e1       	ldi	r26, 0x14	; 20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
      ea:	b1 e0       	ldi	r27, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
      ec:	01 c0       	rjmp	.+2      	; 0xf0 <.do_clear_bss_start>

000000ee <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
      ee:	1d 92       	st	X+, r1

000000f0 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
      f0:	a2 30       	cpi	r26, 0x02	; 2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
      f2:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
      f4:	e1 f7       	brne	.-8      	; 0xee <.do_clear_bss_loop>

000000f6 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
      f6:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
      f8:	c2 e6       	ldi	r28, 0x62	; 98
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
      fa:	d0 e0       	ldi	r29, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
      fc:	04 c0       	rjmp	.+8      	; 0x106 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
      fe:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     100:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     102:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     106:	c1 36       	cpi	r28, 0x61	; 97
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     108:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     10a:	c9 f7       	brne	.-14     	; 0xfe <__do_global_ctors+0x8>
     10c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <main>
     110:	0c 94 93 0f 	jmp	0x1f26	; 0x1f26 <_exit>

00000114 <__bad_interrupt>:
__vector_22():
     114:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000118 <Set_timeSegment(int, int) [clone .constprop.7]>:
Set_timeSegment():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:172
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 1: PORTB = (1 << SG1) | (0 << SG2) | (1 << SG6) | (1 << SG7) | (1 << SG8); // 1
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 2: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8); // 2
     118:	8a 30       	cpi	r24, 0x0A	; 10
     11a:	91 05       	cpc	r25, r1
     11c:	d8 f4       	brcc	.+54     	; 0x154 <Set_timeSegment(int, int) [clone .constprop.7]+0x3c>
     11e:	fc 01       	movw	r30, r24
     120:	ec 56       	subi	r30, 0x6C	; 108
     122:	ff 4f       	sbci	r31, 0xFF	; 255
     124:	0c 94 79 0f 	jmp	0x1ef2	; 0x1ef2 <__tablejump2__>
     128:	9e 00       	.word	0x009e	; ????
     12a:	a2 00       	.word	0x00a2	; ????
     12c:	a6 00       	.word	0x00a6	; ????
     12e:	ab 00       	.word	0x00ab	; ????
     130:	af 00       	.word	0x00af	; ????
     132:	b1 00       	.word	0x00b1	; ????
     134:	b3 00       	.word	0x00b3	; ????
     136:	b5 00       	.word	0x00b5	; ????
     138:	b7 00       	.word	0x00b7	; ????
     13a:	b9 00       	.word	0x00b9	; ????
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:174
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (1 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     13c:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:198
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 9
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
		}
		case 3:
		switch(number)
     13e:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:199
		{
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	07 c0       	rjmp	.+14     	; 0x152 <Set_timeSegment(int, int) [clone .constprop.7]+0x3a>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:177
			case 2: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8); // 2
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (1 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 3: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8); // 3
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     144:	87 e4       	ldi	r24, 0x47	; 71
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:195
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 8
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 9
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     146:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:196
		}
     148:	88 ec       	ldi	r24, 0xC8	; 200
     14a:	03 c0       	rjmp	.+6      	; 0x152 <Set_timeSegment(int, int) [clone .constprop.7]+0x3a>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:180
			case 3: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8); // 3
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 4: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 4
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     14c:	85 e0       	ldi	r24, 0x05	; 5
     14e:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:181
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 5
     150:	88 e2       	ldi	r24, 0x28	; 40
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:202
		case 3:
		switch(number)
		{
			case 12: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// H
			PORTD = (0 << SG3) | (1 << SG4) | (0 << SG5) | (1 << GR1d) | (0 << GR2d) | (0 << GR3d);
			break;
     152:	8b b9       	out	0x0b, r24	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:213
	switch(digit)
	{
		case 0:
		switch(number)
		{
			case 0: PORTD = (0 << GR1d) | (0 << GR2d) | (0 << GR3d); break;
     154:	08 95       	ret
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:183
			case 4: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 4
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 5
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     156:	85 e0       	ldi	r24, 0x05	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:201
		}
		case 3:
		switch(number)
		{
			case 12: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// H
			PORTD = (0 << SG3) | (1 << SG4) | (0 << SG5) | (1 << GR1d) | (0 << GR2d) | (0 << GR3d);
     158:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:202
			break;
     15a:	88 e8       	ldi	r24, 0x88	; 136
     15c:	fa cf       	rjmp	.-12     	; 0x152 <Set_timeSegment(int, int) [clone .constprop.7]+0x3a>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:186
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 5
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 6: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 6
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     15e:	84 e4       	ldi	r24, 0x44	; 68
     160:	f2 cf       	rjmp	.-28     	; 0x146 <Set_timeSegment(int, int) [clone .constprop.7]+0x2e>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:189
			case 7: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (1 << SG8);// 7
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     162:	84 e8       	ldi	r24, 0x84	; 132
     164:	f9 cf       	rjmp	.-14     	; 0x158 <Set_timeSegment(int, int) [clone .constprop.7]+0x40>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:192
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 8
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     166:	84 e8       	ldi	r24, 0x84	; 132
     168:	ea cf       	rjmp	.-44     	; 0x13e <Set_timeSegment(int, int) [clone .constprop.7]+0x26>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:195
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 9
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     16a:	86 e0       	ldi	r24, 0x06	; 6
     16c:	ec cf       	rjmp	.-40     	; 0x146 <Set_timeSegment(int, int) [clone .constprop.7]+0x2e>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:198
		}
		case 3:
		switch(number)
     16e:	84 e0       	ldi	r24, 0x04	; 4
     170:	e6 cf       	rjmp	.-52     	; 0x13e <Set_timeSegment(int, int) [clone .constprop.7]+0x26>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:201
		{
			case 12: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// H
			PORTD = (0 << SG3) | (1 << SG4) | (0 << SG5) | (1 << GR1d) | (0 << GR2d) | (0 << GR3d);
     172:	84 e0       	ldi	r24, 0x04	; 4
     174:	f1 cf       	rjmp	.-30     	; 0x158 <Set_timeSegment(int, int) [clone .constprop.7]+0x40>

00000176 <Print::write(unsigned char const*, unsigned int)>:
write():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/Print.cpp:35

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     176:	af 92       	push	r10
     178:	bf 92       	push	r11
     17a:	cf 92       	push	r12
     17c:	df 92       	push	r13
     17e:	ef 92       	push	r14
     180:	ff 92       	push	r15
     182:	0f 93       	push	r16
     184:	1f 93       	push	r17
     186:	cf 93       	push	r28
     188:	df 93       	push	r29
     18a:	6c 01       	movw	r12, r24
     18c:	7b 01       	movw	r14, r22
     18e:	8b 01       	movw	r16, r22
     190:	04 0f       	add	r16, r20
     192:	15 1f       	adc	r17, r21
     194:	eb 01       	movw	r28, r22
     196:	5e 01       	movw	r10, r28
     198:	ae 18       	sub	r10, r14
     19a:	bf 08       	sbc	r11, r15
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/Print.cpp:37
  size_t n = 0;
  while (size--) {
     19c:	c0 17       	cp	r28, r16
     19e:	d1 07       	cpc	r29, r17
     1a0:	59 f0       	breq	.+22     	; 0x1b8 <Print::write(unsigned char const*, unsigned int)+0x42>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/Print.cpp:38
    if (write(*buffer++)) n++;
     1a2:	69 91       	ld	r22, Y+
     1a4:	d6 01       	movw	r26, r12
     1a6:	ed 91       	ld	r30, X+
     1a8:	fc 91       	ld	r31, X
     1aa:	01 90       	ld	r0, Z+
     1ac:	f0 81       	ld	r31, Z
     1ae:	e0 2d       	mov	r30, r0
     1b0:	c6 01       	movw	r24, r12
     1b2:	09 95       	icall
     1b4:	89 2b       	or	r24, r25
     1b6:	79 f7       	brne	.-34     	; 0x196 <Print::write(unsigned char const*, unsigned int)+0x20>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/Print.cpp:42
    else break;
  }
  return n;
}
     1b8:	c5 01       	movw	r24, r10
     1ba:	df 91       	pop	r29
     1bc:	cf 91       	pop	r28
     1be:	1f 91       	pop	r17
     1c0:	0f 91       	pop	r16
     1c2:	ff 90       	pop	r15
     1c4:	ef 90       	pop	r14
     1c6:	df 90       	pop	r13
     1c8:	cf 90       	pop	r12
     1ca:	bf 90       	pop	r11
     1cc:	af 90       	pop	r10
     1ce:	08 95       	ret

000001d0 <HardwareSerial::availableForWrite()>:
availableForWrite():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:198
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
     1d0:	fc 01       	movw	r30, r24
     1d2:	53 8d       	ldd	r21, Z+27	; 0x1b
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:199
    tail = _tx_buffer_tail;
     1d4:	44 8d       	ldd	r20, Z+28	; 0x1c
     1d6:	25 2f       	mov	r18, r21
     1d8:	30 e0       	ldi	r19, 0x00	; 0
     1da:	84 2f       	mov	r24, r20
     1dc:	90 e0       	ldi	r25, 0x00	; 0
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:201
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     1de:	82 1b       	sub	r24, r18
     1e0:	93 0b       	sbc	r25, r19
     1e2:	54 17       	cp	r21, r20
     1e4:	10 f0       	brcs	.+4      	; 0x1ea <HardwareSerial::availableForWrite()+0x1a>
     1e6:	cf 96       	adiw	r24, 0x3f	; 63
     1e8:	08 95       	ret
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:202
  return tail - head - 1;
     1ea:	01 97       	sbiw	r24, 0x01	; 1
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:203
}
     1ec:	08 95       	ret

000001ee <HardwareSerial::read()>:
read():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:181
    return _rx_buffer[_rx_buffer_tail];
  }
}

int HardwareSerial::read(void)
{
     1ee:	fc 01       	movw	r30, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:183
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
     1f0:	91 8d       	ldd	r25, Z+25	; 0x19
     1f2:	82 8d       	ldd	r24, Z+26	; 0x1a
     1f4:	98 17       	cp	r25, r24
     1f6:	61 f0       	breq	.+24     	; 0x210 <HardwareSerial::read()+0x22>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:186
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     1f8:	a2 8d       	ldd	r26, Z+26	; 0x1a
     1fa:	ae 0f       	add	r26, r30
     1fc:	bf 2f       	mov	r27, r31
     1fe:	b1 1d       	adc	r27, r1
     200:	5d 96       	adiw	r26, 0x1d	; 29
     202:	8c 91       	ld	r24, X
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:187
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     204:	92 8d       	ldd	r25, Z+26	; 0x1a
     206:	9f 5f       	subi	r25, 0xFF	; 255
     208:	9f 73       	andi	r25, 0x3F	; 63
     20a:	92 8f       	std	Z+26, r25	; 0x1a
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:188
    return c;
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	08 95       	ret
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:184

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
     210:	8f ef       	ldi	r24, 0xFF	; 255
     212:	9f ef       	ldi	r25, 0xFF	; 255
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:190
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     214:	08 95       	ret

00000216 <HardwareSerial::peek()>:
peek():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:172
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int HardwareSerial::peek(void)
{
     216:	fc 01       	movw	r30, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:173
  if (_rx_buffer_head == _rx_buffer_tail) {
     218:	91 8d       	ldd	r25, Z+25	; 0x19
     21a:	82 8d       	ldd	r24, Z+26	; 0x1a
     21c:	98 17       	cp	r25, r24
     21e:	31 f0       	breq	.+12     	; 0x22c <HardwareSerial::peek()+0x16>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:176
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
     220:	82 8d       	ldd	r24, Z+26	; 0x1a
     222:	e8 0f       	add	r30, r24
     224:	f1 1d       	adc	r31, r1
     226:	85 8d       	ldd	r24, Z+29	; 0x1d
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	08 95       	ret
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:174
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
     22c:	8f ef       	ldi	r24, 0xFF	; 255
     22e:	9f ef       	ldi	r25, 0xFF	; 255
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:178
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     230:	08 95       	ret

00000232 <HardwareSerial::available()>:
available():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:167
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
     232:	fc 01       	movw	r30, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:168
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     234:	91 8d       	ldd	r25, Z+25	; 0x19
     236:	22 8d       	ldd	r18, Z+26	; 0x1a
     238:	89 2f       	mov	r24, r25
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	80 5c       	subi	r24, 0xC0	; 192
     23e:	9f 4f       	sbci	r25, 0xFF	; 255
     240:	82 1b       	sub	r24, r18
     242:	91 09       	sbc	r25, r1
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:169
}
     244:	8f 73       	andi	r24, 0x3F	; 63
     246:	99 27       	eor	r25, r25
     248:	08 95       	ret

0000024a <Serial0_available()>:
Serial0_available():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial0.cpp:76
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
     24a:	84 e2       	ldi	r24, 0x24	; 36
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	0e 94 19 01 	call	0x232	; 0x232 <HardwareSerial::available()>
     252:	21 e0       	ldi	r18, 0x01	; 1
     254:	89 2b       	or	r24, r25
     256:	09 f4       	brne	.+2      	; 0x25a <Serial0_available()+0x10>
     258:	20 e0       	ldi	r18, 0x00	; 0
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial0.cpp:77
}
     25a:	82 2f       	mov	r24, r18
     25c:	08 95       	ret

0000025e <serialEventRun()>:
serialEventRun():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:67
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	89 2b       	or	r24, r25
     264:	29 f0       	breq	.+10     	; 0x270 <serialEventRun()+0x12>
     266:	0e 94 25 01 	call	0x24a	; 0x24a <Serial0_available()>
     26a:	81 11       	cpse	r24, r1
     26c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:78
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
#endif
}
     270:	08 95       	ret

00000272 <HardwareSerial::_tx_udr_empty_irq()>:
_tx_udr_empty_irq():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:90
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
     272:	fc 01       	movw	r30, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:93
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     274:	a4 8d       	ldd	r26, Z+28	; 0x1c
     276:	a8 0f       	add	r26, r24
     278:	b9 2f       	mov	r27, r25
     27a:	b1 1d       	adc	r27, r1
     27c:	a3 5a       	subi	r26, 0xA3	; 163
     27e:	bf 4f       	sbci	r27, 0xFF	; 255
     280:	2c 91       	ld	r18, X
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:94
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     282:	84 8d       	ldd	r24, Z+28	; 0x1c
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	01 96       	adiw	r24, 0x01	; 1
     288:	8f 73       	andi	r24, 0x3F	; 63
     28a:	99 27       	eor	r25, r25
     28c:	84 8f       	std	Z+28, r24	; 0x1c
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:96

  *_udr = c;
     28e:	a6 89       	ldd	r26, Z+22	; 0x16
     290:	b7 89       	ldd	r27, Z+23	; 0x17
     292:	2c 93       	st	X, r18
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:104
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
     294:	a0 89       	ldd	r26, Z+16	; 0x10
     296:	b1 89       	ldd	r27, Z+17	; 0x11
     298:	8c 91       	ld	r24, X
     29a:	83 70       	andi	r24, 0x03	; 3
     29c:	80 64       	ori	r24, 0x40	; 64
     29e:	8c 93       	st	X, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:109
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
     2a0:	93 8d       	ldd	r25, Z+27	; 0x1b
     2a2:	84 8d       	ldd	r24, Z+28	; 0x1c
     2a4:	98 13       	cpse	r25, r24
     2a6:	06 c0       	rjmp	.+12     	; 0x2b4 <HardwareSerial::_tx_udr_empty_irq()+0x42>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:111
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
     2a8:	02 88       	ldd	r0, Z+18	; 0x12
     2aa:	f3 89       	ldd	r31, Z+19	; 0x13
     2ac:	e0 2d       	mov	r30, r0
     2ae:	80 81       	ld	r24, Z
     2b0:	8f 7d       	andi	r24, 0xDF	; 223
     2b2:	80 83       	st	Z, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:113
  }
}
     2b4:	08 95       	ret

000002b6 <HardwareSerial::write(unsigned char)>:
write():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:226
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
     2b6:	ef 92       	push	r14
     2b8:	ff 92       	push	r15
     2ba:	0f 93       	push	r16
     2bc:	1f 93       	push	r17
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	ec 01       	movw	r28, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:227
  _written = true;
     2c4:	81 e0       	ldi	r24, 0x01	; 1
     2c6:	88 8f       	std	Y+24, r24	; 0x18
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:232
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
     2c8:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2ca:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2cc:	98 13       	cpse	r25, r24
     2ce:	1a c0       	rjmp	.+52     	; 0x304 <HardwareSerial::write(unsigned char)+0x4e>
     2d0:	e8 89       	ldd	r30, Y+16	; 0x10
     2d2:	f9 89       	ldd	r31, Y+17	; 0x11
     2d4:	80 81       	ld	r24, Z
     2d6:	85 ff       	sbrs	r24, 5
     2d8:	15 c0       	rjmp	.+42     	; 0x304 <HardwareSerial::write(unsigned char)+0x4e>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:241
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     2da:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     2dc:	f8 94       	cli
write():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:242
      *_udr = c;
     2de:	ee 89       	ldd	r30, Y+22	; 0x16
     2e0:	ff 89       	ldd	r31, Y+23	; 0x17
     2e2:	60 83       	st	Z, r22
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:244
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
     2e4:	e8 89       	ldd	r30, Y+16	; 0x10
     2e6:	f9 89       	ldd	r31, Y+17	; 0x11
     2e8:	80 81       	ld	r24, Z
     2ea:	83 70       	andi	r24, 0x03	; 3
     2ec:	80 64       	ori	r24, 0x40	; 64
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:275
  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
     2ee:	80 83       	st	Z, r24
__iRestore():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     2f0:	9f bf       	out	0x3f, r25	; 63
write():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:279
  }
  
  return 1;
}
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	df 91       	pop	r29
     2f8:	cf 91       	pop	r28
     2fa:	1f 91       	pop	r17
     2fc:	0f 91       	pop	r16
     2fe:	ff 90       	pop	r15
     300:	ef 90       	pop	r14
     302:	08 95       	ret
     304:	f6 2e       	mov	r15, r22
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:251
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     306:	0b 8d       	ldd	r16, Y+27	; 0x1b
     308:	10 e0       	ldi	r17, 0x00	; 0
     30a:	0f 5f       	subi	r16, 0xFF	; 255
     30c:	1f 4f       	sbci	r17, 0xFF	; 255
     30e:	0f 73       	andi	r16, 0x3F	; 63
     310:	11 27       	eor	r17, r17
     312:	e0 2e       	mov	r14, r16
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:255
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
     314:	8c 8d       	ldd	r24, Y+28	; 0x1c
     316:	8e 11       	cpse	r24, r14
     318:	0c c0       	rjmp	.+24     	; 0x332 <HardwareSerial::write(unsigned char)+0x7c>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:256
    if (bit_is_clear(SREG, SREG_I)) {
     31a:	0f b6       	in	r0, 0x3f	; 63
     31c:	07 fc       	sbrc	r0, 7
     31e:	fa cf       	rjmp	.-12     	; 0x314 <HardwareSerial::write(unsigned char)+0x5e>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:261
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
     320:	e8 89       	ldd	r30, Y+16	; 0x10
     322:	f9 89       	ldd	r31, Y+17	; 0x11
     324:	80 81       	ld	r24, Z
     326:	85 ff       	sbrs	r24, 5
     328:	f5 cf       	rjmp	.-22     	; 0x314 <HardwareSerial::write(unsigned char)+0x5e>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:262
	_tx_udr_empty_irq();
     32a:	ce 01       	movw	r24, r28
     32c:	0e 94 39 01 	call	0x272	; 0x272 <HardwareSerial::_tx_udr_empty_irq()>
     330:	f1 cf       	rjmp	.-30     	; 0x314 <HardwareSerial::write(unsigned char)+0x5e>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:268
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
     332:	eb 8d       	ldd	r30, Y+27	; 0x1b
     334:	ec 0f       	add	r30, r28
     336:	fd 2f       	mov	r31, r29
     338:	f1 1d       	adc	r31, r1
     33a:	e3 5a       	subi	r30, 0xA3	; 163
     33c:	ff 4f       	sbci	r31, 0xFF	; 255
     33e:	f0 82       	st	Z, r15
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:273

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     340:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     342:	f8 94       	cli
write():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:274
    _tx_buffer_head = i;
     344:	0b 8f       	std	Y+27, r16	; 0x1b
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:275
    sbi(*_ucsrb, UDRIE0);
     346:	ea 89       	ldd	r30, Y+18	; 0x12
     348:	fb 89       	ldd	r31, Y+19	; 0x13
     34a:	80 81       	ld	r24, Z
     34c:	80 62       	ori	r24, 0x20	; 32
     34e:	cf cf       	rjmp	.-98     	; 0x2ee <HardwareSerial::write(unsigned char)+0x38>

00000350 <HardwareSerial::flush()>:
flush():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:206
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
     350:	cf 93       	push	r28
     352:	df 93       	push	r29
     354:	ec 01       	movw	r28, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:210
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     356:	88 8d       	ldd	r24, Y+24	; 0x18
     358:	88 23       	and	r24, r24
     35a:	b9 f0       	breq	.+46     	; 0x38a <HardwareSerial::flush()+0x3a>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:213
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
     35c:	aa 89       	ldd	r26, Y+18	; 0x12
     35e:	bb 89       	ldd	r27, Y+19	; 0x13
     360:	e8 89       	ldd	r30, Y+16	; 0x10
     362:	f9 89       	ldd	r31, Y+17	; 0x11
     364:	8c 91       	ld	r24, X
     366:	85 fd       	sbrc	r24, 5
     368:	03 c0       	rjmp	.+6      	; 0x370 <HardwareSerial::flush()+0x20>
     36a:	80 81       	ld	r24, Z
     36c:	86 fd       	sbrc	r24, 6
     36e:	0d c0       	rjmp	.+26     	; 0x38a <HardwareSerial::flush()+0x3a>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:214
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	07 fc       	sbrc	r0, 7
     374:	f7 cf       	rjmp	.-18     	; 0x364 <HardwareSerial::flush()+0x14>
     376:	8c 91       	ld	r24, X
     378:	85 ff       	sbrs	r24, 5
     37a:	f2 cf       	rjmp	.-28     	; 0x360 <HardwareSerial::flush()+0x10>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:218
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
     37c:	80 81       	ld	r24, Z
     37e:	85 ff       	sbrs	r24, 5
     380:	ed cf       	rjmp	.-38     	; 0x35c <HardwareSerial::flush()+0xc>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:219
	  _tx_udr_empty_irq();
     382:	ce 01       	movw	r24, r28
     384:	0e 94 39 01 	call	0x272	; 0x272 <HardwareSerial::_tx_udr_empty_irq()>
     388:	e9 cf       	rjmp	.-46     	; 0x35c <HardwareSerial::flush()+0xc>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:223
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
     38a:	df 91       	pop	r29
     38c:	cf 91       	pop	r28
     38e:	08 95       	ret

00000390 <analogRead>:
analogRead():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring_analog.c:54
#elif defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#elif defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)
	if (pin >= 24) pin -= 24; // allow for channel or pin numbers
#else
	if (pin >= 14) pin -= 14; // allow for channel or pin numbers
     390:	8e 50       	subi	r24, 0x0E	; 14
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring_analog.c:70
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
     392:	80 64       	ori	r24, 0x40	; 64
     394:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring_analog.c:79
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
     398:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     39c:	80 64       	ori	r24, 0x40	; 64
     39e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring_analog.c:82

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
     3a2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     3a6:	86 fd       	sbrc	r24, 6
     3a8:	fc cf       	rjmp	.-8      	; 0x3a2 <analogRead+0x12>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring_analog.c:88

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
     3aa:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring_analog.c:89
	high = ADCH;
     3ae:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring_analog.c:98
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
}
     3b2:	08 95       	ret

000003b4 <timeisr()>:
timeisr():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1057
		flag |= FLAG_PwrSwith_bm;
		if(sys_mode == ON)
		{
			flag |= FLAG_Time_bm;
			flag |= FLAG_ModeSwith_bm;
			flag |= FLAG_DownSwith_bm;
     3b4:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     3b8:	80 68       	ori	r24, 0x80	; 128
     3ba:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1058
			flag |= FLAG_UpSwitch_bm;
     3be:	60 91 f6 01 	lds	r22, 0x01F6	; 0x8001f6 <Volt_Detect>
     3c2:	70 91 f7 01 	lds	r23, 0x01F7	; 0x8001f7 <Volt_Detect+0x1>
     3c6:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <Volt_Detect+0x2>
     3ca:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <Volt_Detect+0x3>
     3ce:	20 e0       	ldi	r18, 0x00	; 0
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	48 e1       	ldi	r20, 0x18	; 24
     3d4:	51 e4       	ldi	r21, 0x41	; 65
     3d6:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <__gesf2>
     3da:	87 fd       	sbrc	r24, 7
     3dc:	22 c0       	rjmp	.+68     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1060
			flag_Swith |= FLAG_Time_bm;
		}
     3de:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     3e2:	80 62       	ori	r24, 0x20	; 32
     3e4:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1061
	}
     3e8:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <sys_mode>
     3ec:	81 30       	cpi	r24, 0x01	; 1
     3ee:	c9 f4       	brne	.+50     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1063
     3f0:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     3f4:	82 60       	ori	r24, 0x02	; 2
     3f6:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1064
     3fa:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     3fe:	80 61       	ori	r24, 0x10	; 16
     400:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1065
     404:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     408:	88 60       	ori	r24, 0x08	; 8
     40a:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1066
     40e:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     412:	84 60       	ori	r24, 0x04	; 4
     414:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1067
     418:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
     41c:	82 60       	ori	r24, 0x02	; 2
     41e:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1070
     422:	08 95       	ret

00000424 <Set_7segment(int, int)>:
Set_7segment():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:215
		case 0:
		switch(number)
		{
			case 0: PORTD = (0 << GR1d) | (0 << GR2d) | (0 << GR3d); break;
			case 10: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // HT
			PORTD = (0 << SG3) | (1 << SG4) | (0 << SG5) | (0 << GR1d) | (1 << GR2d) | (0 << GR3d);
     424:	fb 01       	movw	r30, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:216
			
     426:	82 30       	cpi	r24, 0x02	; 2
     428:	91 05       	cpc	r25, r1
     42a:	91 f1       	breq	.+100    	; 0x490 <Set_7segment(int, int)+0x6c>
     42c:	03 97       	sbiw	r24, 0x03	; 3
     42e:	09 f4       	brne	.+2      	; 0x432 <Set_7segment(int, int)+0xe>
     430:	5c c0       	rjmp	.+184    	; 0x4ea <Set_7segment(int, int)+0xc6>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:238
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 1: PORTB = (1 << SG1) | (0 << SG2) | (1 << SG6) | (1 << SG7) | (1 << SG8); // 1
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 2: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8); // 2
     432:	6a 30       	cpi	r22, 0x0A	; 10
     434:	71 05       	cpc	r23, r1
     436:	d0 f4       	brcc	.+52     	; 0x46c <Set_7segment(int, int)+0x48>
     438:	e0 5e       	subi	r30, 0xE0	; 224
     43a:	fd 4f       	sbci	r31, 0xFD	; 253
     43c:	0c 94 79 0f 	jmp	0x1ef2	; 0x1ef2 <__tablejump2__>
     440:	2a 02       	muls	r18, r26
     442:	2e 02       	muls	r18, r30
     444:	32 02       	muls	r19, r18
     446:	37 02       	muls	r19, r23
     448:	3b 02       	muls	r19, r27
     44a:	3d 02       	muls	r19, r29
     44c:	40 02       	muls	r20, r16
     44e:	42 02       	muls	r20, r18
     450:	44 02       	muls	r20, r20
     452:	46 02       	muls	r20, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:240
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (1 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     454:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:258
			case 7: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (1 << SG8);// 7
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 8
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     456:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:259
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 9
     458:	84 e0       	ldi	r24, 0x04	; 4
     45a:	07 c0       	rjmp	.+14     	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:243
			case 2: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8); // 2
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (1 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 3: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8); // 3
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     45c:	87 e4       	ldi	r24, 0x47	; 71
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:261
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 8
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 9
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;			
     45e:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:262
		}
     460:	84 ec       	ldi	r24, 0xC4	; 196
     462:	03 c0       	rjmp	.+6      	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:246
			case 3: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8); // 3
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 4: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 4
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     464:	85 e0       	ldi	r24, 0x05	; 5
     466:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:247
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 5
     468:	84 e2       	ldi	r24, 0x24	; 36
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:343
		break;
	}
	return;
}

void setup()
     46a:	8b b9       	out	0x0b, r24	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:349
{
	DDRB |= (1<<PB6) | (1<<PB7) | (1<<PB2) | (1<<PB0) | (1<<PB1) | (1<<PB3);
	DDRC |= (1<<PC0) | (0<<PC1);        
	DDRD |= (1<<PD2) | (1<<PD3) | (1<<PD4) | (1<<PD5) | (1<<PD6) | (1<<PD7); //GR -> 1 << LED on SG -> 0 << LED on
	//       GR3         GR2        GR1         SG3         SG4      SG5
	PORTC |= (1<<LAMP_OUT); // LAMP_OUT = PC0
     46c:	08 95       	ret
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:249
			case 4: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 4
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 5
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     46e:	85 e0       	ldi	r24, 0x05	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:267
		}
		break;
		
		case 2:
		switch(number)
		{
     470:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:268
			case 0: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (0 << SG8);
     472:	84 e8       	ldi	r24, 0x84	; 132
     474:	fa cf       	rjmp	.-12     	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:252
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // 5
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 6: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 6
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     476:	84 e4       	ldi	r24, 0x44	; 68
     478:	f2 cf       	rjmp	.-28     	; 0x45e <Set_7segment(int, int)+0x3a>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:255
			case 7: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (1 << SG8);// 7
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     47a:	84 e8       	ldi	r24, 0x84	; 132
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:264
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 9
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;			
		}
		break;
		
     47c:	85 b9       	out	0x05, r24	; 5
     47e:	f5 cf       	rjmp	.-22     	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:258
			case 7: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (1 << SG8);// 7
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 8
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     480:	84 e8       	ldi	r24, 0x84	; 132
     482:	e9 cf       	rjmp	.-46     	; 0x456 <Set_7segment(int, int)+0x32>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:261
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);// 9
			PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;			
     484:	86 e0       	ldi	r24, 0x06	; 6
     486:	eb cf       	rjmp	.-42     	; 0x45e <Set_7segment(int, int)+0x3a>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:264
		}
		break;
		
     488:	84 e0       	ldi	r24, 0x04	; 4
     48a:	f8 cf       	rjmp	.-16     	; 0x47c <Set_7segment(int, int)+0x58>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:267
		case 2:
		switch(number)
		{
     48c:	84 e0       	ldi	r24, 0x04	; 4
     48e:	f0 cf       	rjmp	.-32     	; 0x470 <Set_7segment(int, int)+0x4c>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:274
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 1: PORTB = (1 << SG1) | (0 << SG2) | (1 << SG6) | (1 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 2: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (0 << SG8);
     490:	6a 30       	cpi	r22, 0x0A	; 10
     492:	71 05       	cpc	r23, r1
     494:	58 f7       	brcc	.-42     	; 0x46c <Set_7segment(int, int)+0x48>
     496:	e1 5b       	subi	r30, 0xB1	; 177
     498:	fd 4f       	sbci	r31, 0xFD	; 253
     49a:	0c 94 79 0f 	jmp	0x1ef2	; 0x1ef2 <__tablejump2__>
     49e:	59 02       	muls	r21, r25
     4a0:	5d 02       	muls	r21, r29
     4a2:	61 02       	muls	r22, r17
     4a4:	65 02       	muls	r22, r21
     4a6:	69 02       	muls	r22, r25
     4a8:	6b 02       	muls	r22, r27
     4aa:	6d 02       	muls	r22, r29
     4ac:	6f 02       	muls	r22, r31
     4ae:	71 02       	muls	r23, r17
     4b0:	73 02       	muls	r23, r19
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:276
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (1 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     4b2:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:294
			case 7: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     4b4:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:301
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
		}
		break;
		
		case 3:
     4b6:	88 e0       	ldi	r24, 0x08	; 8
     4b8:	d8 cf       	rjmp	.-80     	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:279
			case 2: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (1 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 3: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     4ba:	83 e4       	ldi	r24, 0x43	; 67
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:297
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     4bc:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:298
		}
     4be:	88 ec       	ldi	r24, 0xC8	; 200
     4c0:	d4 cf       	rjmp	.-88     	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:282
			case 3: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 4: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:283
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
     4c6:	88 e2       	ldi	r24, 0x28	; 40
     4c8:	d0 cf       	rjmp	.-96     	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:285
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     4ca:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:291
			case 6: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 7: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     4cc:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:304
		break;
		
		case 3:
		switch(number)
		{
			case 0: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (1 << SG8);
     4ce:	88 e8       	ldi	r24, 0x88	; 136
     4d0:	cc cf       	rjmp	.-104    	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:288
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 6: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     4d2:	80 e4       	ldi	r24, 0x40	; 64
     4d4:	f3 cf       	rjmp	.-26     	; 0x4bc <Set_7segment(int, int)+0x98>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:291
			case 7: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     4d6:	80 e8       	ldi	r24, 0x80	; 128
     4d8:	f9 cf       	rjmp	.-14     	; 0x4cc <Set_7segment(int, int)+0xa8>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:294
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     4da:	80 e8       	ldi	r24, 0x80	; 128
     4dc:	eb cf       	rjmp	.-42     	; 0x4b4 <Set_7segment(int, int)+0x90>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:297
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (0 << SG8);
			PORTD = (0 << GR1d) | (1 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     4de:	82 e0       	ldi	r24, 0x02	; 2
     4e0:	ed cf       	rjmp	.-38     	; 0x4bc <Set_7segment(int, int)+0x98>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:300
		}
		break;
		
     4e2:	15 b8       	out	0x05, r1	; 5
     4e4:	e8 cf       	rjmp	.-48     	; 0x4b6 <Set_7segment(int, int)+0x92>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:303
		case 3:
		switch(number)
		{
     4e6:	15 b8       	out	0x05, r1	; 5
     4e8:	f2 cf       	rjmp	.-28     	; 0x4ce <Set_7segment(int, int)+0xaa>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:310
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 1: PORTB = (1 << SG1) | (0 << SG2) | (1 << SG6) | (1 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
			case 2: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8);
     4ea:	6b 30       	cpi	r22, 0x0B	; 11
     4ec:	71 05       	cpc	r23, r1
     4ee:	08 f0       	brcs	.+2      	; 0x4f2 <Set_7segment(int, int)+0xce>
     4f0:	bd cf       	rjmp	.-134    	; 0x46c <Set_7segment(int, int)+0x48>
     4f2:	e3 58       	subi	r30, 0x83	; 131
     4f4:	fd 4f       	sbci	r31, 0xFD	; 253
     4f6:	0c 94 79 0f 	jmp	0x1ef2	; 0x1ef2 <__tablejump2__>
     4fa:	88 02       	muls	r24, r24
     4fc:	8c 02       	muls	r24, r28
     4fe:	90 02       	muls	r25, r16
     500:	94 02       	muls	r25, r20
     502:	98 02       	muls	r25, r24
     504:	9a 02       	muls	r25, r26
     506:	9c 02       	muls	r25, r28
     508:	9e 02       	muls	r25, r30
     50a:	a0 02       	muls	r26, r16
     50c:	a2 02       	muls	r26, r18
     50e:	a4 02       	muls	r26, r20
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:312
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (1 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     510:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:336
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 10: PORTB = (1 << SG1) | (1 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8);// -
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (1 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     512:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:337
		}
     514:	80 e1       	ldi	r24, 0x10	; 16
     516:	a9 cf       	rjmp	.-174    	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:315
			case 2: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (1 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 3: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     518:	87 e4       	ldi	r24, 0x47	; 71
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:333
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     51a:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:334
			case 10: PORTB = (1 << SG1) | (1 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8);// -
     51c:	80 ed       	ldi	r24, 0xD0	; 208
     51e:	a5 cf       	rjmp	.-182    	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:318
			case 3: PORTB = (0 << SG1) | (0 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 4: PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     520:	85 e0       	ldi	r24, 0x05	; 5
     522:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:319
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
     524:	80 e3       	ldi	r24, 0x30	; 48
     526:	a1 cf       	rjmp	.-190    	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:321
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     528:	85 e0       	ldi	r24, 0x05	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:339
			case 10: PORTB = (1 << SG1) | (1 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8);// -
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (1 << SG3) | (1 << SG4) | (1 << SG5);
			break;
		}
		break;
	}
     52a:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:340
	return;
     52c:	80 e9       	ldi	r24, 0x90	; 144
     52e:	9d cf       	rjmp	.-198    	; 0x46a <Set_7segment(int, int)+0x46>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:324
			case 5: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
			case 6: PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     530:	84 e4       	ldi	r24, 0x44	; 68
     532:	f3 cf       	rjmp	.-26     	; 0x51a <Set_7segment(int, int)+0xf6>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:327
			case 7: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (1 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     534:	84 e8       	ldi	r24, 0x84	; 132
     536:	f9 cf       	rjmp	.-14     	; 0x52a <Set_7segment(int, int)+0x106>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:330
			case 8: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
			break;
     538:	84 e8       	ldi	r24, 0x84	; 132
     53a:	eb cf       	rjmp	.-42     	; 0x512 <Set_7segment(int, int)+0xee>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:333
			case 9: PORTB = (0 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8);
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (0 << SG3) | (0 << SG4) | (1 << SG5);
			break;
     53c:	86 e0       	ldi	r24, 0x06	; 6
     53e:	ed cf       	rjmp	.-38     	; 0x51a <Set_7segment(int, int)+0xf6>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:336
			case 10: PORTB = (1 << SG1) | (1 << SG2) | (1 << SG6) | (0 << SG7) | (1 << SG8);// -
			PORTD = (0 << GR1d) | (0 << GR2d) | (1 << GR3d) | (1 << SG3) | (1 << SG4) | (1 << SG5);
			break;
     540:	84 e0       	ldi	r24, 0x04	; 4
     542:	e7 cf       	rjmp	.-50     	; 0x512 <Set_7segment(int, int)+0xee>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:339
		}
		break;
	}
     544:	84 e0       	ldi	r24, 0x04	; 4
     546:	f1 cf       	rjmp	.-30     	; 0x52a <Set_7segment(int, int)+0x106>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:342
	return;
}

     548:	85 ec       	ldi	r24, 0xC5	; 197
     54a:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:343
void setup()
     54c:	80 ef       	ldi	r24, 0xF0	; 240
     54e:	8d cf       	rjmp	.-230    	; 0x46a <Set_7segment(int, int)+0x46>

00000550 <__vector_19>:
__vector_19():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial0.cpp:63
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
     550:	1f 92       	push	r1
     552:	0f 92       	push	r0
     554:	0f b6       	in	r0, 0x3f	; 63
     556:	0f 92       	push	r0
     558:	11 24       	eor	r1, r1
     55a:	2f 93       	push	r18
     55c:	3f 93       	push	r19
     55e:	4f 93       	push	r20
     560:	5f 93       	push	r21
     562:	6f 93       	push	r22
     564:	7f 93       	push	r23
     566:	8f 93       	push	r24
     568:	9f 93       	push	r25
     56a:	af 93       	push	r26
     56c:	bf 93       	push	r27
     56e:	ef 93       	push	r30
     570:	ff 93       	push	r31
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial0.cpp:64
  Serial._tx_udr_empty_irq();
     572:	84 e2       	ldi	r24, 0x24	; 36
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	0e 94 39 01 	call	0x272	; 0x272 <HardwareSerial::_tx_udr_empty_irq()>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial0.cpp:65
}
     57a:	ff 91       	pop	r31
     57c:	ef 91       	pop	r30
     57e:	bf 91       	pop	r27
     580:	af 91       	pop	r26
     582:	9f 91       	pop	r25
     584:	8f 91       	pop	r24
     586:	7f 91       	pop	r23
     588:	6f 91       	pop	r22
     58a:	5f 91       	pop	r21
     58c:	4f 91       	pop	r20
     58e:	3f 91       	pop	r19
     590:	2f 91       	pop	r18
     592:	0f 90       	pop	r0
     594:	0f be       	out	0x3f, r0	; 63
     596:	0f 90       	pop	r0
     598:	1f 90       	pop	r1
     59a:	18 95       	reti

0000059c <__vector_18>:
__vector_18():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial0.cpp:48
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
     59c:	1f 92       	push	r1
     59e:	0f 92       	push	r0
     5a0:	0f b6       	in	r0, 0x3f	; 63
     5a2:	0f 92       	push	r0
     5a4:	11 24       	eor	r1, r1
     5a6:	2f 93       	push	r18
     5a8:	8f 93       	push	r24
     5aa:	9f 93       	push	r25
     5ac:	ef 93       	push	r30
     5ae:	ff 93       	push	r31
_rx_complete_irq():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial_private.h:103

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
     5b0:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <Serial+0x10>
     5b4:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <Serial+0x11>
     5b8:	80 81       	ld	r24, Z
     5ba:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <Serial+0x16>
     5be:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <Serial+0x17>
     5c2:	82 fd       	sbrc	r24, 2
     5c4:	1b c0       	rjmp	.+54     	; 0x5fc <__vector_18+0x60>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial_private.h:106
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
     5c6:	90 81       	ld	r25, Z
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial_private.h:107
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
     5c8:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <Serial+0x19>
     5cc:	8f 5f       	subi	r24, 0xFF	; 255
     5ce:	8f 73       	andi	r24, 0x3F	; 63
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial_private.h:113

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
     5d0:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <Serial+0x1a>
     5d4:	82 17       	cp	r24, r18
     5d6:	41 f0       	breq	.+16     	; 0x5e8 <__vector_18+0x4c>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial_private.h:114
      _rx_buffer[_rx_buffer_head] = c;
     5d8:	e0 91 3d 01 	lds	r30, 0x013D	; 0x80013d <Serial+0x19>
     5dc:	f0 e0       	ldi	r31, 0x00	; 0
     5de:	ec 5d       	subi	r30, 0xDC	; 220
     5e0:	fe 4f       	sbci	r31, 0xFE	; 254
     5e2:	95 8f       	std	Z+29, r25	; 0x1d
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial_private.h:115
      _rx_buffer_head = i;
     5e4:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <Serial+0x19>
__vector_18():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial0.cpp:50
    Serial._rx_complete_irq();
  }
     5e8:	ff 91       	pop	r31
     5ea:	ef 91       	pop	r30
     5ec:	9f 91       	pop	r25
     5ee:	8f 91       	pop	r24
     5f0:	2f 91       	pop	r18
     5f2:	0f 90       	pop	r0
     5f4:	0f be       	out	0x3f, r0	; 63
     5f6:	0f 90       	pop	r0
     5f8:	1f 90       	pop	r1
     5fa:	18 95       	reti
_rx_complete_irq():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial_private.h:119
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
     5fc:	80 81       	ld	r24, Z
     5fe:	f4 cf       	rjmp	.-24     	; 0x5e8 <__vector_18+0x4c>

00000600 <__vector_16>:
__vector_16():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:47
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
     600:	1f 92       	push	r1
     602:	0f 92       	push	r0
     604:	0f b6       	in	r0, 0x3f	; 63
     606:	0f 92       	push	r0
     608:	11 24       	eor	r1, r1
     60a:	2f 93       	push	r18
     60c:	3f 93       	push	r19
     60e:	8f 93       	push	r24
     610:	9f 93       	push	r25
     612:	af 93       	push	r26
     614:	bf 93       	push	r27
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:50
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
     616:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <timer0_millis>
     61a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <timer0_millis+0x1>
     61e:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <timer0_millis+0x2>
     622:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <timer0_millis+0x3>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:51
	unsigned char f = timer0_fract;
     626:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <timer0_fract>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:54

	m += MILLIS_INC;
	f += FRACT_INC;
     62a:	23 e0       	ldi	r18, 0x03	; 3
     62c:	23 0f       	add	r18, r19
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:55
	if (f >= FRACT_MAX) {
     62e:	2d 37       	cpi	r18, 0x7D	; 125
     630:	58 f5       	brcc	.+86     	; 0x688 <__vector_16+0x88>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:53
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
     632:	01 96       	adiw	r24, 0x01	; 1
     634:	a1 1d       	adc	r26, r1
     636:	b1 1d       	adc	r27, r1
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:60
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
		m += 1;
	}

	timer0_fract = f;
     638:	20 93 1d 01 	sts	0x011D, r18	; 0x80011d <timer0_fract>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:61
	timer0_millis = m;
     63c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timer0_millis>
     640:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timer0_millis+0x1>
     644:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timer0_millis+0x2>
     648:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timer0_millis+0x3>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:62
	timer0_overflow_count++;
     64c:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <timer0_overflow_count>
     650:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <timer0_overflow_count+0x1>
     654:	a0 91 1b 01 	lds	r26, 0x011B	; 0x80011b <timer0_overflow_count+0x2>
     658:	b0 91 1c 01 	lds	r27, 0x011C	; 0x80011c <timer0_overflow_count+0x3>
     65c:	01 96       	adiw	r24, 0x01	; 1
     65e:	a1 1d       	adc	r26, r1
     660:	b1 1d       	adc	r27, r1
     662:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <timer0_overflow_count>
     666:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <timer0_overflow_count+0x1>
     66a:	a0 93 1b 01 	sts	0x011B, r26	; 0x80011b <timer0_overflow_count+0x2>
     66e:	b0 93 1c 01 	sts	0x011C, r27	; 0x80011c <timer0_overflow_count+0x3>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:63
}
     672:	bf 91       	pop	r27
     674:	af 91       	pop	r26
     676:	9f 91       	pop	r25
     678:	8f 91       	pop	r24
     67a:	3f 91       	pop	r19
     67c:	2f 91       	pop	r18
     67e:	0f 90       	pop	r0
     680:	0f be       	out	0x3f, r0	; 63
     682:	0f 90       	pop	r0
     684:	1f 90       	pop	r1
     686:	18 95       	reti
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:56
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
     688:	26 e8       	ldi	r18, 0x86	; 134
     68a:	23 0f       	add	r18, r19
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:57
		m += 1;
     68c:	02 96       	adiw	r24, 0x02	; 2
     68e:	a1 1d       	adc	r26, r1
     690:	b1 1d       	adc	r27, r1
     692:	d2 cf       	rjmp	.-92     	; 0x638 <__vector_16+0x38>

00000694 <__vector_13>:
__vector_13():
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:44
#include "TimerOne.h"

TimerOne Timer1;              // preinstatiate

ISR(TIMER1_OVF_vect)          // interrupt service routine that wraps a user defined function supplied by attachInterrupt
{
     694:	1f 92       	push	r1
     696:	0f 92       	push	r0
     698:	0f b6       	in	r0, 0x3f	; 63
     69a:	0f 92       	push	r0
     69c:	11 24       	eor	r1, r1
     69e:	2f 93       	push	r18
     6a0:	3f 93       	push	r19
     6a2:	4f 93       	push	r20
     6a4:	5f 93       	push	r21
     6a6:	6f 93       	push	r22
     6a8:	7f 93       	push	r23
     6aa:	8f 93       	push	r24
     6ac:	9f 93       	push	r25
     6ae:	af 93       	push	r26
     6b0:	bf 93       	push	r27
     6b2:	ef 93       	push	r30
     6b4:	ff 93       	push	r31
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:45
  Timer1.isrCallback();
     6b6:	e0 91 c5 01 	lds	r30, 0x01C5	; 0x8001c5 <Timer1+0x4>
     6ba:	f0 91 c6 01 	lds	r31, 0x01C6	; 0x8001c6 <Timer1+0x5>
     6be:	09 95       	icall
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:46
}
     6c0:	ff 91       	pop	r31
     6c2:	ef 91       	pop	r30
     6c4:	bf 91       	pop	r27
     6c6:	af 91       	pop	r26
     6c8:	9f 91       	pop	r25
     6ca:	8f 91       	pop	r24
     6cc:	7f 91       	pop	r23
     6ce:	6f 91       	pop	r22
     6d0:	5f 91       	pop	r21
     6d2:	4f 91       	pop	r20
     6d4:	3f 91       	pop	r19
     6d6:	2f 91       	pop	r18
     6d8:	0f 90       	pop	r0
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	0f 90       	pop	r0
     6de:	1f 90       	pop	r1
     6e0:	18 95       	reti

000006e2 <main>:
init():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:245

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
     6e2:	78 94       	sei
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:251
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
     6e4:	84 b5       	in	r24, 0x24	; 36
     6e6:	82 60       	ori	r24, 0x02	; 2
     6e8:	84 bd       	out	0x24, r24	; 36
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:252
	sbi(TCCR0A, WGM00);
     6ea:	84 b5       	in	r24, 0x24	; 36
     6ec:	81 60       	ori	r24, 0x01	; 1
     6ee:	84 bd       	out	0x24, r24	; 36
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:265
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
     6f0:	85 b5       	in	r24, 0x25	; 37
     6f2:	82 60       	ori	r24, 0x02	; 2
     6f4:	85 bd       	out	0x25, r24	; 37
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:266
	sbi(TCCR0B, CS00);
     6f6:	85 b5       	in	r24, 0x25	; 37
     6f8:	81 60       	ori	r24, 0x01	; 1
     6fa:	85 bd       	out	0x25, r24	; 37
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:279

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
     6fc:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
     700:	81 60       	ori	r24, 0x01	; 1
     702:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:290
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
     706:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:293

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
     70a:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     70e:	82 60       	ori	r24, 0x02	; 2
     710:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:295
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
     714:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     718:	81 60       	ori	r24, 0x01	; 1
     71a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:305
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
     71e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     722:	81 60       	ori	r24, 0x01	; 1
     724:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:312

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
     728:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
     72c:	84 60       	ori	r24, 0x04	; 4
     72e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:321

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
     732:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
     736:	81 60       	ori	r24, 0x01	; 1
     738:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:356
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
     73c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     740:	84 60       	ori	r24, 0x04	; 4
     742:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:357
		sbi(ADCSRA, ADPS1);
     746:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     74a:	82 60       	ori	r24, 0x02	; 2
     74c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:358
		sbi(ADCSRA, ADPS0);
     750:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     754:	81 60       	ori	r24, 0x01	; 1
     756:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:381
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
     75a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     75e:	80 68       	ori	r24, 0x80	; 128
     760:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/wiring.c:390
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
     764:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
setup():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:353
	//       GR3         GR2        GR1         SG3         SG4      SG5
	PORTC |= (1<<LAMP_OUT); // LAMP_OUT = PC0
	PORTD |= (0<<PD2) | (0<<PD3) | (0<<PD4);
	
	Timer1.initialize(INTERVAL);
	Timer1.attachInterrupt(timeisr);
     768:	84 b1       	in	r24, 0x04	; 4
     76a:	8f 6c       	ori	r24, 0xCF	; 207
     76c:	84 b9       	out	0x04, r24	; 4
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:354
	Serial.begin(9600);	
     76e:	38 9a       	sbi	0x07, 0	; 7
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:355
	
     770:	8a b1       	in	r24, 0x0a	; 10
     772:	8c 6f       	ori	r24, 0xFC	; 252
     774:	8a b9       	out	0x0a, r24	; 10
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:357
	Vo = analogRead(A7);
	tem = analogRead(A1);
     776:	40 9a       	sbi	0x08, 0	; 8
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:358
	
     778:	8b b1       	in	r24, 0x0b	; 11
     77a:	8b b9       	out	0x0b, r24	; 11
initialize():
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:51


void TimerOne::initialize(long microseconds)
{
  TCCR1A = 0;                 // clear control register A 
     77c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:52
  TCCR1B = _BV(WGM13);        // set mode 8: phase and frequency correct pwm, stop the timer
     780:	80 e1       	ldi	r24, 0x10	; 16
     782:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
setPeriod():
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:62
void TimerOne::setPeriod(long microseconds)		// AR modified for atomic access
{
  
  long cycles = (F_CPU / 2000000) * microseconds;                                // the counter runs backwards after TOP, interrupt is at BOTTOM so divide microseconds by 2
  if(cycles < RESOLUTION)              clockSelectBits = _BV(CS10);              // no prescale, full xtal
  else if((cycles >>= 3) < RESOLUTION) clockSelectBits = _BV(CS11);              // prescale by /8
     786:	22 e0       	ldi	r18, 0x02	; 2
     788:	20 93 c3 01 	sts	0x01C3, r18	; 0x8001c3 <Timer1+0x2>
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:68
  else if((cycles >>= 3) < RESOLUTION) clockSelectBits = _BV(CS11) | _BV(CS10);  // prescale by /64
  else if((cycles >>= 2) < RESOLUTION) clockSelectBits = _BV(CS12);              // prescale by /256
  else if((cycles >>= 2) < RESOLUTION) clockSelectBits = _BV(CS12) | _BV(CS10);  // prescale by /1024
  else        cycles = RESOLUTION - 1, clockSelectBits = _BV(CS12) | _BV(CS10);  // request was out of bounds, set as maximum
  
  oldSREG = SREG;				
     78c:	8f b7       	in	r24, 0x3f	; 63
     78e:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <Timer1+0x3>
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:69
  cli();							// Disable interrupts for 16 bit register access
     792:	f8 94       	cli
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:70
  ICR1 = pwmPeriod = cycles;                                          // ICR1 is TOP in p & f correct pwm mode
     794:	88 ec       	ldi	r24, 0xC8	; 200
     796:	92 e3       	ldi	r25, 0x32	; 50
     798:	90 93 c2 01 	sts	0x01C2, r25	; 0x8001c2 <Timer1+0x1>
     79c:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <Timer1>
     7a0:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
     7a4:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:71
  SREG = oldSREG;
     7a8:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <Timer1+0x3>
     7ac:	8f bf       	out	0x3f, r24	; 63
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:73
  
  TCCR1B &= ~(_BV(CS10) | _BV(CS11) | _BV(CS12));
     7ae:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     7b2:	88 7f       	andi	r24, 0xF8	; 248
     7b4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:74
  TCCR1B |= clockSelectBits;                                          // reset clock select register, and starts the clock
     7b8:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     7bc:	30 91 c3 01 	lds	r19, 0x01C3	; 0x8001c3 <Timer1+0x2>
     7c0:	93 2b       	or	r25, r19
     7c2:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
attachInterrupt():
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:116
}

void TimerOne::attachInterrupt(void (*isr)(), long microseconds)
{
  if(microseconds > 0) setPeriod(microseconds);
  isrCallback = isr;                                       // register the user's callback with the real ISR
     7c6:	8a ed       	ldi	r24, 0xDA	; 218
     7c8:	91 e0       	ldi	r25, 0x01	; 1
     7ca:	90 93 c6 01 	sts	0x01C6, r25	; 0x8001c6 <Timer1+0x5>
     7ce:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <Timer1+0x4>
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:117
  TIMSK1 = _BV(TOIE1);                                     // sets the timer overflow interrupt enable bit
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
resume():
C:\Users\dlcks\Documents\Arduino\libraries\TimerOne-r11/TimerOne.cpp:131
															// timer continues to count without calling the isr
}

void TimerOne::resume()				// AR suggested
{ 
  TCCR1B |= clockSelectBits;
     7d8:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     7dc:	83 2b       	or	r24, r19
     7de:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
begin():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:121

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
     7e2:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <Serial+0x10>
     7e6:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <Serial+0x11>
     7ea:	20 83       	st	Z, r18
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:135
    *_ucsra = 0;
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
     7ec:	e0 91 30 01 	lds	r30, 0x0130	; 0x800130 <Serial+0xc>
     7f0:	f0 91 31 01 	lds	r31, 0x0131	; 0x800131 <Serial+0xd>
     7f4:	10 82       	st	Z, r1
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:136
  *_ubrrl = baud_setting;
     7f6:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <Serial+0xe>
     7fa:	f0 91 33 01 	lds	r31, 0x0133	; 0x800133 <Serial+0xf>
     7fe:	8f ec       	ldi	r24, 0xCF	; 207
     800:	80 83       	st	Z, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:138

  _written = false;
     802:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <Serial+0x18>
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:144

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
     806:	e0 91 38 01 	lds	r30, 0x0138	; 0x800138 <Serial+0x14>
     80a:	f0 91 39 01 	lds	r31, 0x0139	; 0x800139 <Serial+0x15>
     80e:	86 e0       	ldi	r24, 0x06	; 6
     810:	80 83       	st	Z, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:146
  
  sbi(*_ucsrb, RXEN0);
     812:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <Serial+0x12>
     816:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <Serial+0x13>
     81a:	80 81       	ld	r24, Z
     81c:	80 61       	ori	r24, 0x10	; 16
     81e:	80 83       	st	Z, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:147
  sbi(*_ucsrb, TXEN0);
     820:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <Serial+0x12>
     824:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <Serial+0x13>
     828:	80 81       	ld	r24, Z
     82a:	88 60       	ori	r24, 0x08	; 8
     82c:	80 83       	st	Z, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:148
  sbi(*_ucsrb, RXCIE0);
     82e:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <Serial+0x12>
     832:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <Serial+0x13>
     836:	80 81       	ld	r24, Z
     838:	80 68       	ori	r24, 0x80	; 128
     83a:	80 83       	st	Z, r24
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:149
  cbi(*_ucsrb, UDRIE0);
     83c:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <Serial+0x12>
     840:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <Serial+0x13>
     844:	80 81       	ld	r24, Z
     846:	8f 7d       	andi	r24, 0xDF	; 223
     848:	80 83       	st	Z, r24
setup():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:364
	Volt_Detect = tem * 5.0 / 1024.0/ 0.2;
	
	float R1 = 10000;
	float logR2, R2, T;
	float c1 = 0.8697898208e-03, c2 = 2.587589263e-04, c3 = 1.292290871e-07;
	R2 = R1 * (1024.0 / (float)Vo - 1.0);
     84a:	85 e1       	ldi	r24, 0x15	; 21
     84c:	0e 94 c8 01 	call	0x390	; 0x390 <analogRead>
     850:	bc 01       	movw	r22, r24
     852:	99 0f       	add	r25, r25
     854:	88 0b       	sbc	r24, r24
     856:	99 0b       	sbc	r25, r25
     858:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__floatsisf>
     85c:	60 93 fe 01 	sts	0x01FE, r22	; 0x8001fe <Vo>
     860:	70 93 ff 01 	sts	0x01FF, r23	; 0x8001ff <Vo+0x1>
     864:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <Vo+0x2>
     868:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <Vo+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:365
	logR2 = log(R2);
     86c:	8f e0       	ldi	r24, 0x0F	; 15
     86e:	0e 94 c8 01 	call	0x390	; 0x390 <analogRead>
     872:	bc 01       	movw	r22, r24
     874:	99 0f       	add	r25, r25
     876:	88 0b       	sbc	r24, r24
     878:	99 0b       	sbc	r25, r25
     87a:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__floatsisf>
     87e:	60 93 fa 01 	sts	0x01FA, r22	; 0x8001fa <tem>
     882:	70 93 fb 01 	sts	0x01FB, r23	; 0x8001fb <tem+0x1>
     886:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <tem+0x2>
     88a:	90 93 fd 01 	sts	0x01FD, r25	; 0x8001fd <tem+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:367
	T = (1.0 / (c1 + c2*logR2 + c3*logR2*logR2*logR2));
	CurrentTemperature = T - 273.15;
     88e:	60 91 fa 01 	lds	r22, 0x01FA	; 0x8001fa <tem>
     892:	70 91 fb 01 	lds	r23, 0x01FB	; 0x8001fb <tem+0x1>
     896:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <tem+0x2>
     89a:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <tem+0x3>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	40 ea       	ldi	r20, 0xA0	; 160
     8a4:	50 e4       	ldi	r21, 0x40	; 64
     8a6:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     8aa:	20 e0       	ldi	r18, 0x00	; 0
     8ac:	30 e0       	ldi	r19, 0x00	; 0
     8ae:	40 e8       	ldi	r20, 0x80	; 128
     8b0:	5a e3       	ldi	r21, 0x3A	; 58
     8b2:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     8b6:	2d ec       	ldi	r18, 0xCD	; 205
     8b8:	3c ec       	ldi	r19, 0xCC	; 204
     8ba:	4c e4       	ldi	r20, 0x4C	; 76
     8bc:	5e e3       	ldi	r21, 0x3E	; 62
     8be:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__divsf3>
     8c2:	60 93 f6 01 	sts	0x01F6, r22	; 0x8001f6 <Volt_Detect>
     8c6:	70 93 f7 01 	sts	0x01F7, r23	; 0x8001f7 <Volt_Detect+0x1>
     8ca:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <Volt_Detect+0x2>
     8ce:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <Volt_Detect+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:372
	
	hightemper = eeprom_read_word(HighTaddr);
	lowtemper = eeprom_read_word(HighTaddr);
	timesetvalue = eeprom_read_word(timeTaddr);
	EEPROMtmp = eeprom_read_word(EEPROMaddr);
     8d2:	20 91 fe 01 	lds	r18, 0x01FE	; 0x8001fe <Vo>
     8d6:	30 91 ff 01 	lds	r19, 0x01FF	; 0x8001ff <Vo+0x1>
     8da:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <Vo+0x2>
     8de:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <Vo+0x3>
     8e2:	60 e0       	ldi	r22, 0x00	; 0
     8e4:	70 e0       	ldi	r23, 0x00	; 0
     8e6:	80 e8       	ldi	r24, 0x80	; 128
     8e8:	94 e4       	ldi	r25, 0x44	; 68
     8ea:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__divsf3>
     8ee:	20 e0       	ldi	r18, 0x00	; 0
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	40 e8       	ldi	r20, 0x80	; 128
     8f4:	5f e3       	ldi	r21, 0x3F	; 63
     8f6:	0e 94 96 0c 	call	0x192c	; 0x192c <__subsf3>
     8fa:	20 e0       	ldi	r18, 0x00	; 0
     8fc:	30 e4       	ldi	r19, 0x40	; 64
     8fe:	4c e1       	ldi	r20, 0x1C	; 28
     900:	56 e4       	ldi	r21, 0x46	; 70
     902:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:373
	
     906:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <log>
     90a:	6b 01       	movw	r12, r22
     90c:	7c 01       	movw	r14, r24
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:374
	if(EEPROMtmp != 1)
     90e:	29 e3       	ldi	r18, 0x39	; 57
     910:	32 ec       	ldi	r19, 0xC2	; 194
     912:	4a e0       	ldi	r20, 0x0A	; 10
     914:	54 e3       	ldi	r21, 0x34	; 52
     916:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     91a:	a7 01       	movw	r20, r14
     91c:	96 01       	movw	r18, r12
     91e:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     922:	a7 01       	movw	r20, r14
     924:	96 01       	movw	r18, r12
     926:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     92a:	4b 01       	movw	r8, r22
     92c:	5c 01       	movw	r10, r24
     92e:	29 e0       	ldi	r18, 0x09	; 9
     930:	3a ea       	ldi	r19, 0xAA	; 170
     932:	47 e8       	ldi	r20, 0x87	; 135
     934:	59 e3       	ldi	r21, 0x39	; 57
     936:	c7 01       	movw	r24, r14
     938:	b6 01       	movw	r22, r12
     93a:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     93e:	2b e9       	ldi	r18, 0x9B	; 155
     940:	32 e0       	ldi	r19, 0x02	; 2
     942:	44 e6       	ldi	r20, 0x64	; 100
     944:	5a e3       	ldi	r21, 0x3A	; 58
     946:	0e 94 97 0c 	call	0x192e	; 0x192e <__addsf3>
     94a:	9b 01       	movw	r18, r22
     94c:	ac 01       	movw	r20, r24
     94e:	c5 01       	movw	r24, r10
     950:	b4 01       	movw	r22, r8
     952:	0e 94 97 0c 	call	0x192e	; 0x192e <__addsf3>
     956:	9b 01       	movw	r18, r22
     958:	ac 01       	movw	r20, r24
     95a:	60 e0       	ldi	r22, 0x00	; 0
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	80 e8       	ldi	r24, 0x80	; 128
     960:	9f e3       	ldi	r25, 0x3F	; 63
     962:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__divsf3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:375
	{
     966:	23 e3       	ldi	r18, 0x33	; 51
     968:	33 e9       	ldi	r19, 0x93	; 147
     96a:	48 e8       	ldi	r20, 0x88	; 136
     96c:	53 e4       	ldi	r21, 0x43	; 67
     96e:	0e 94 96 0c 	call	0x192c	; 0x192c <__subsf3>
     972:	60 93 f0 01 	sts	0x01F0, r22	; 0x8001f0 <CurrentTemperature>
     976:	70 93 f1 01 	sts	0x01F1, r23	; 0x8001f1 <CurrentTemperature+0x1>
     97a:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <CurrentTemperature+0x2>
     97e:	90 93 f3 01 	sts	0x01F3, r25	; 0x8001f3 <CurrentTemperature+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:377
		hightemper = 750;
		lowtemper = 745;
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
     98a:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
     98e:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:378
		timesetvalue = 9;
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
     99a:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
     99e:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:379
		EEPROMtmp = 1;
     9a2:	84 e1       	ldi	r24, 0x14	; 20
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
     9aa:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <timesetvalue+0x1>
     9ae:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:380
		
     9b2:	8e e1       	ldi	r24, 0x1E	; 30
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
     9ba:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <EEPROMtmp+0x1>
     9be:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <EEPROMtmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:382
		eeprom_write_word(HighTaddr,hightemper);
		eeprom_write_word(lowTaddr,lowtemper);
     9c2:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <EEPROMtmp>
     9c6:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <EEPROMtmp+0x1>
     9ca:	01 97       	sbiw	r24, 0x01	; 1
     9cc:	b1 f1       	breq	.+108    	; 0xa3a <__stack+0x13b>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:384
		eeprom_write_word(timeTaddr,timesetvalue);
		eeprom_write_word(EEPROMaddr,EEPROMtmp);
     9ce:	8e ee       	ldi	r24, 0xEE	; 238
     9d0:	92 e0       	ldi	r25, 0x02	; 2
     9d2:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
     9d6:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:385
	}
     9da:	89 ee       	ldi	r24, 0xE9	; 233
     9dc:	92 e0       	ldi	r25, 0x02	; 2
     9de:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
     9e2:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:386
	
     9e6:	89 e0       	ldi	r24, 0x09	; 9
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <timesetvalue+0x1>
     9ee:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:387
}
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <EEPROMtmp+0x1>
     9fa:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <EEPROMtmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:389

void loop()
     9fe:	60 91 eb 01 	lds	r22, 0x01EB	; 0x8001eb <hightemper>
     a02:	70 91 ec 01 	lds	r23, 0x01EC	; 0x8001ec <hightemper+0x1>
     a06:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <eeprom_write_word>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:390
{
     a0a:	60 91 e9 01 	lds	r22, 0x01E9	; 0x8001e9 <lowtemper>
     a0e:	70 91 ea 01 	lds	r23, 0x01EA	; 0x8001ea <lowtemper+0x1>
     a12:	8a e0       	ldi	r24, 0x0A	; 10
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <eeprom_write_word>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:391
	Vo = analogRead(A7);
     a1a:	60 91 e7 01 	lds	r22, 0x01E7	; 0x8001e7 <timesetvalue>
     a1e:	70 91 e8 01 	lds	r23, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
     a22:	84 e1       	ldi	r24, 0x14	; 20
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <eeprom_write_word>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:392
	tem = analogRead(A1);
     a2a:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <EEPROMtmp>
     a2e:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <EEPROMtmp+0x1>
     a32:	8e e1       	ldi	r24, 0x1E	; 30
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <eeprom_write_word>
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:415
				{
					PORTB = (1 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8) | (1 << PB3);
					PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
				}
				else
				Set_7segment(1,m % 10);
     a3a:	38 ee       	ldi	r19, 0xE8	; 232
     a3c:	c3 2e       	mov	r12, r19
     a3e:	33 e0       	ldi	r19, 0x03	; 3
     a40:	d3 2e       	mov	r13, r19
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:430
				Set_7segment(3,m % 10);
				_delay_ms(1);
			}
			else 
			{
				PORTD &= ~(1<<PD2);
     a42:	04 e6       	ldi	r16, 0x64	; 100
     a44:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:425
				Set_7segment(2,m % 10);
				_delay_ms(1);
				m /= 10;
				if(bz_mode == BZON) PORTD = (0<<GR3d);
				else
				Set_7segment(3,m % 10);
     a46:	ca e0       	ldi	r28, 0x0A	; 10
     a48:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:470
		
	if(segment_mode == Appear_HighTemper)
	{
		if(flag & FLAG_Modename_bm )
		{
			if(++modename_Doing > N_modename_period) 
     a4a:	77 24       	eor	r7, r7
     a4c:	73 94       	inc	r7
Set_7segment():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:342
		}
		break;
	}
	return;
}

     a4e:	25 ec       	ldi	r18, 0xC5	; 197
     a50:	62 2e       	mov	r6, r18
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:399
	
	if(segment_mode == Appear_off)
		{
			bz_mode = BZOFF;
			PORTD &= ~(1<<PD2);
			PORTD &= ~(1<<PD3);
     a52:	85 e1       	ldi	r24, 0x15	; 21
     a54:	0e 94 c8 01 	call	0x390	; 0x390 <analogRead>
     a58:	bc 01       	movw	r22, r24
     a5a:	99 0f       	add	r25, r25
     a5c:	88 0b       	sbc	r24, r24
     a5e:	99 0b       	sbc	r25, r25
     a60:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__floatsisf>
     a64:	60 93 fe 01 	sts	0x01FE, r22	; 0x8001fe <Vo>
     a68:	70 93 ff 01 	sts	0x01FF, r23	; 0x8001ff <Vo+0x1>
     a6c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <Vo+0x2>
     a70:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <Vo+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:400
			PORTD &= ~(1<<PD4);
     a74:	8f e0       	ldi	r24, 0x0F	; 15
     a76:	0e 94 c8 01 	call	0x390	; 0x390 <analogRead>
     a7a:	bc 01       	movw	r22, r24
     a7c:	99 0f       	add	r25, r25
     a7e:	88 0b       	sbc	r24, r24
     a80:	99 0b       	sbc	r25, r25
     a82:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__floatsisf>
     a86:	60 93 fa 01 	sts	0x01FA, r22	; 0x8001fa <tem>
     a8a:	70 93 fb 01 	sts	0x01FB, r23	; 0x8001fb <tem+0x1>
     a8e:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <tem+0x2>
     a92:	90 93 fd 01 	sts	0x01FD, r25	; 0x8001fd <tem+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:401
		}
     a96:	60 91 f6 01 	lds	r22, 0x01F6	; 0x8001f6 <Volt_Detect>
     a9a:	70 91 f7 01 	lds	r23, 0x01F7	; 0x8001f7 <Volt_Detect+0x1>
     a9e:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <Volt_Detect+0x2>
     aa2:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <Volt_Detect+0x3>
     aa6:	20 e0       	ldi	r18, 0x00	; 0
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	40 e2       	ldi	r20, 0x20	; 32
     aac:	51 e4       	ldi	r21, 0x41	; 65
     aae:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
     ab2:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__fixsfsi>
     ab6:	7b 01       	movw	r14, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:403
		
	if(segment_mode == volt)
     ab8:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
     abc:	81 11       	cpse	r24, r1
     abe:	05 c0       	rjmp	.+10     	; 0xaca <__stack+0x1cb>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:405
		{
			if(segmentdo)
     ac0:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <bz_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:406
			{	
     ac4:	5a 98       	cbi	0x0b, 2	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:407
				int m = volt_tmp % 1000;
     ac6:	5b 98       	cbi	0x0b, 3	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:408
		
     ac8:	5c 98       	cbi	0x0b, 4	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:411
				if(bz_mode == BZON)
				{
					PORTB = (1 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8) | (1 << PB3);
     aca:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
     ace:	81 30       	cpi	r24, 0x01	; 1
     ad0:	89 f5       	brne	.+98     	; 0xb34 <__stack+0x235>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:413
					PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
				}
     ad2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ad6:	88 23       	and	r24, r24
     ad8:	09 f4       	brne	.+2      	; 0xadc <__stack+0x1dd>
     ada:	cf c0       	rjmp	.+414    	; 0xc7a <__stack+0x37b>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:415
				else
				Set_7segment(1,m % 10);
     adc:	c7 01       	movw	r24, r14
     ade:	b6 01       	movw	r22, r12
     ae0:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     ae4:	5c 01       	movw	r10, r24
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:417
				_delay_ms(1);
				m /= 10;
     ae6:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <bz_mode>
     aea:	81 30       	cpi	r24, 0x01	; 1
     aec:	09 f0       	breq	.+2      	; 0xaf0 <__stack+0x1f1>
     aee:	a4 c0       	rjmp	.+328    	; 0xc38 <__stack+0x339>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:419
				if(bz_mode == BZON) PORTD = (0<<GR2d);
				else
     af0:	2c ec       	ldi	r18, 0xCC	; 204
     af2:	25 b9       	out	0x05, r18	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:420
				Set_7segment(2,m % 10);
     af4:	84 e0       	ldi	r24, 0x04	; 4
     af6:	8b b9       	out	0x0b, r24	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     af8:	ef e9       	ldi	r30, 0x9F	; 159
     afa:	ff e0       	ldi	r31, 0x0F	; 15
     afc:	31 97       	sbiw	r30, 0x01	; 1
     afe:	f1 f7       	brne	.-4      	; 0xafc <__stack+0x1fd>
     b00:	00 c0       	rjmp	.+0      	; 0xb02 <__stack+0x203>
     b02:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:426
				_delay_ms(1);
				m /= 10;
				if(bz_mode == BZON) PORTD = (0<<GR3d);
				else
				Set_7segment(3,m % 10);
				_delay_ms(1);
     b04:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <bz_mode>
     b08:	81 30       	cpi	r24, 0x01	; 1
     b0a:	09 f0       	breq	.+2      	; 0xb0e <__stack+0x20f>
     b0c:	9f c0       	rjmp	.+318    	; 0xc4c <__stack+0x34d>
     b0e:	1b b8       	out	0x0b, r1	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     b10:	8f e9       	ldi	r24, 0x9F	; 159
     b12:	9f e0       	ldi	r25, 0x0F	; 15
     b14:	01 97       	sbiw	r24, 0x01	; 1
     b16:	f1 f7       	brne	.-4      	; 0xb14 <__stack+0x215>
     b18:	00 c0       	rjmp	.+0      	; 0xb1a <__stack+0x21b>
     b1a:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:431
			}
			else 
			{
				PORTD &= ~(1<<PD2);
				PORTD &= ~(1<<PD3);
     b1c:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <bz_mode>
     b20:	81 30       	cpi	r24, 0x01	; 1
     b22:	09 f0       	breq	.+2      	; 0xb26 <__stack+0x227>
     b24:	a1 c0       	rjmp	.+322    	; 0xc68 <__stack+0x369>
     b26:	1b b8       	out	0x0b, r1	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     b28:	ef e9       	ldi	r30, 0x9F	; 159
     b2a:	ff e0       	ldi	r31, 0x0F	; 15
     b2c:	31 97       	sbiw	r30, 0x01	; 1
     b2e:	f1 f7       	brne	.-4      	; 0xb2c <__stack+0x22d>
     b30:	00 c0       	rjmp	.+0      	; 0xb32 <__stack+0x233>
     b32:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:444
			{
				float Tempertmp = CurrentTemperature * 10.0;
				int Tm = (int)Tempertmp % 1000;
			
				if(bz_mode == BZON)
				{
     b34:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
     b38:	82 30       	cpi	r24, 0x02	; 2
     b3a:	09 f0       	breq	.+2      	; 0xb3e <__stack+0x23f>
     b3c:	4c c0       	rjmp	.+152    	; 0xbd6 <__stack+0x2d7>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:446
					PORTB = (1 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8) | (1 << PB3);
					PORTD = (1 << GR1d) | (0 << GR2d) | (0 << GR3d) | (0 << SG3) | (0 << SG4) | (0 << SG5);
     b3e:	60 91 fe 01 	lds	r22, 0x01FE	; 0x8001fe <Vo>
     b42:	70 91 ff 01 	lds	r23, 0x01FF	; 0x8001ff <Vo+0x1>
     b46:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Vo+0x2>
     b4a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Vo+0x3>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	a9 01       	movw	r20, r18
     b54:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__cmpsf2>
     b58:	88 23       	and	r24, r24
     b5a:	09 f4       	brne	.+2      	; 0xb5e <__stack+0x25f>
     b5c:	b3 c0       	rjmp	.+358    	; 0xcc4 <__stack+0x3c5>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:448
				}
				else Set_7segment(1,Tm % 10);
     b5e:	60 91 f0 01 	lds	r22, 0x01F0	; 0x8001f0 <CurrentTemperature>
     b62:	70 91 f1 01 	lds	r23, 0x01F1	; 0x8001f1 <CurrentTemperature+0x1>
     b66:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <CurrentTemperature+0x2>
     b6a:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <CurrentTemperature+0x3>
     b6e:	20 e0       	ldi	r18, 0x00	; 0
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	40 e2       	ldi	r20, 0x20	; 32
     b74:	51 e4       	ldi	r21, 0x41	; 65
     b76:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:449
				Tm /= 10;
     b7a:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__fixsfsi>
     b7e:	cb 01       	movw	r24, r22
     b80:	b6 01       	movw	r22, r12
     b82:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     b86:	5c 01       	movw	r10, r24
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:451
				_delay_ms(1);
				if(bz_mode == BZON) PORTD = (0<<GR2d);
     b88:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <bz_mode>
     b8c:	81 30       	cpi	r24, 0x01	; 1
     b8e:	09 f0       	breq	.+2      	; 0xb92 <__stack+0x293>
     b90:	78 c0       	rjmp	.+240    	; 0xc82 <__stack+0x383>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:453
				else Set_7segment(2,Tm % 10);
				Tm /= 10;
     b92:	fc ec       	ldi	r31, 0xCC	; 204
     b94:	f5 b9       	out	0x05, r31	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:454
				_delay_ms(1);
     b96:	24 e0       	ldi	r18, 0x04	; 4
     b98:	2b b9       	out	0x0b, r18	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     b9a:	8f e9       	ldi	r24, 0x9F	; 159
     b9c:	9f e0       	ldi	r25, 0x0F	; 15
     b9e:	01 97       	sbiw	r24, 0x01	; 1
     ba0:	f1 f7       	brne	.-4      	; 0xb9e <__stack+0x29f>
     ba2:	00 c0       	rjmp	.+0      	; 0xba4 <__stack+0x2a5>
     ba4:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:459
				if(bz_mode == BZON) PORTD = (0<<GR3d);
				else Set_7segment(3,Tm % 10);
				_delay_ms(1);
			}
			else 
     ba6:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <bz_mode>
     baa:	81 30       	cpi	r24, 0x01	; 1
     bac:	09 f0       	breq	.+2      	; 0xbb0 <__stack+0x2b1>
     bae:	73 c0       	rjmp	.+230    	; 0xc96 <__stack+0x397>
     bb0:	1b b8       	out	0x0b, r1	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     bb2:	ef e9       	ldi	r30, 0x9F	; 159
     bb4:	ff e0       	ldi	r31, 0x0F	; 15
     bb6:	31 97       	sbiw	r30, 0x01	; 1
     bb8:	f1 f7       	brne	.-4      	; 0xbb6 <__stack+0x2b7>
     bba:	00 c0       	rjmp	.+0      	; 0xbbc <__stack+0x2bd>
     bbc:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:463
			{
				PORTD = (0<<GR1d) | (0<<GR2d) | (0<<GR3d);
				PORTC = (1<<LAMP_OUT);
			}
     bbe:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <bz_mode>
     bc2:	81 30       	cpi	r24, 0x01	; 1
     bc4:	09 f0       	breq	.+2      	; 0xbc8 <__stack+0x2c9>
     bc6:	75 c0       	rjmp	.+234    	; 0xcb2 <__stack+0x3b3>
     bc8:	1b b8       	out	0x0b, r1	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     bca:	8f e9       	ldi	r24, 0x9F	; 159
     bcc:	9f e0       	ldi	r25, 0x0F	; 15
     bce:	01 97       	sbiw	r24, 0x01	; 1
     bd0:	f1 f7       	brne	.-4      	; 0xbce <__stack+0x2cf>
     bd2:	00 c0       	rjmp	.+0      	; 0xbd4 <__stack+0x2d5>
     bd4:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:474
		{
			if(++modename_Doing > N_modename_period) 
			{
				flag &= ~(FLAG_Modename_bm);
				modename_Doing = 0;
			}
     bd6:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
     bda:	83 30       	cpi	r24, 0x03	; 3
     bdc:	09 f0       	breq	.+2      	; 0xbe0 <__stack+0x2e1>
     bde:	af c0       	rjmp	.+350    	; 0xd3e <__stack+0x43f>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:476
			PORTB = (1 << SG1) | (0 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // H
			PORTD = (0 << SG3) | (1 << SG4) | (0 << SG5) | (0 << GR1d) | (1 << GR2d) | (0 << GR3d);
     be0:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     be4:	86 ff       	sbrs	r24, 6
     be6:	71 c0       	rjmp	.+226    	; 0xcca <__stack+0x3cb>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:478
			_delay_ms(1);
			PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // E
     be8:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <modename_Doing>
     bec:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <modename_Doing+0x1>
     bf0:	01 96       	adiw	r24, 0x01	; 1
     bf2:	90 93 ee 01 	sts	0x01EE, r25	; 0x8001ee <modename_Doing+0x1>
     bf6:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <modename_Doing>
     bfa:	89 37       	cpi	r24, 0x79	; 121
     bfc:	91 05       	cpc	r25, r1
     bfe:	48 f0       	brcs	.+18     	; 0xc12 <__stack+0x313>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:480
			PORTD = (1 << SG3) | (0 << SG4) | (0 << SG5) | (1 << GR1d) | (0 << GR2d) | (0 << GR3d);
			_delay_ms(1);
     c00:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     c04:	8f 7b       	andi	r24, 0xBF	; 191
     c06:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:481
		}
     c0a:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <modename_Doing+0x1>
     c0e:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <modename_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:483
		else
		{
     c12:	84 e4       	ldi	r24, 0x44	; 68
     c14:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:484
			int tmp = hightemper;
     c16:	88 e4       	ldi	r24, 0x48	; 72
     c18:	8b b9       	out	0x0b, r24	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     c1a:	ef e9       	ldi	r30, 0x9F	; 159
     c1c:	ff e0       	ldi	r31, 0x0F	; 15
     c1e:	31 97       	sbiw	r30, 0x01	; 1
     c20:	f1 f7       	brne	.-4      	; 0xc1e <__stack+0x31f>
     c22:	00 c0       	rjmp	.+0      	; 0xc24 <__stack+0x325>
     c24:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:486
			tmp = tmp - 200;
			if(tmp < 0)
     c26:	84 e8       	ldi	r24, 0x84	; 132
     c28:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:487
			{
     c2a:	84 e2       	ldi	r24, 0x24	; 36
     c2c:	8b b9       	out	0x0b, r24	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     c2e:	8f e9       	ldi	r24, 0x9F	; 159
     c30:	9f e0       	ldi	r25, 0x0F	; 15
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	f1 f7       	brne	.-4      	; 0xc32 <__stack+0x333>
     c36:	81 c0       	rjmp	.+258    	; 0xd3a <__stack+0x43b>
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:423
				if(bz_mode == BZON) PORTD = (0<<GR2d);
				else
				Set_7segment(2,m % 10);
				_delay_ms(1);
				m /= 10;
				if(bz_mode == BZON) PORTD = (0<<GR3d);
     c38:	c5 01       	movw	r24, r10
     c3a:	be 01       	movw	r22, r28
     c3c:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     c40:	bc 01       	movw	r22, r24
     c42:	81 e0       	ldi	r24, 0x01	; 1
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
     c4a:	56 cf       	rjmp	.-340    	; 0xaf8 <__stack+0x1f9>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:425
				else
				Set_7segment(3,m % 10);
     c4c:	c5 01       	movw	r24, r10
     c4e:	be 01       	movw	r22, r28
     c50:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     c54:	cb 01       	movw	r24, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:428
				_delay_ms(1);
			}
			else 
     c56:	be 01       	movw	r22, r28
     c58:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     c5c:	bc 01       	movw	r22, r24
     c5e:	82 e0       	ldi	r24, 0x02	; 2
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
     c66:	54 cf       	rjmp	.-344    	; 0xb10 <__stack+0x211>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:430
			{
				PORTD &= ~(1<<PD2);
     c68:	c5 01       	movw	r24, r10
     c6a:	b8 01       	movw	r22, r16
     c6c:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:433
				PORTD &= ~(1<<PD3);
				PORTD &= ~(1<<PD4);
			}
     c70:	83 e0       	ldi	r24, 0x03	; 3
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
     c78:	57 cf       	rjmp	.-338    	; 0xb28 <__stack+0x229>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:438
		}
		
	if(segment_mode == Appear_CurrentTemper)
		{
			if(Vo != 0)
     c7a:	5a 98       	cbi	0x0b, 2	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:439
			{
     c7c:	5b 98       	cbi	0x0b, 3	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:440
				float Tempertmp = CurrentTemperature * 10.0;
     c7e:	5c 98       	cbi	0x0b, 4	; 11
     c80:	59 cf       	rjmp	.-334    	; 0xb34 <__stack+0x235>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:456
				if(bz_mode == BZON) PORTD = (0<<GR2d);
				else Set_7segment(2,Tm % 10);
				Tm /= 10;
				_delay_ms(1);
				if(bz_mode == BZON) PORTD = (0<<GR3d);
				else Set_7segment(3,Tm % 10);
     c82:	c5 01       	movw	r24, r10
     c84:	be 01       	movw	r22, r28
     c86:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     c8a:	bc 01       	movw	r22, r24
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
     c94:	82 cf       	rjmp	.-252    	; 0xb9a <__stack+0x29b>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:457
				_delay_ms(1);
     c96:	c5 01       	movw	r24, r10
     c98:	be 01       	movw	r22, r28
     c9a:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     c9e:	cb 01       	movw	r24, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:460
			}
			else 
			{
     ca0:	be 01       	movw	r22, r28
     ca2:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     ca6:	bc 01       	movw	r22, r24
     ca8:	82 e0       	ldi	r24, 0x02	; 2
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
     cb0:	80 cf       	rjmp	.-256    	; 0xbb2 <__stack+0x2b3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:461
				PORTD = (0<<GR1d) | (0<<GR2d) | (0<<GR3d);
     cb2:	c5 01       	movw	r24, r10
     cb4:	b8 01       	movw	r22, r16
     cb6:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:464
				PORTC = (1<<LAMP_OUT);
			}
		}
     cba:	83 e0       	ldi	r24, 0x03	; 3
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
     cc2:	83 cf       	rjmp	.-250    	; 0xbca <__stack+0x2cb>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:469
		
	if(segment_mode == Appear_HighTemper)
	{
		if(flag & FLAG_Modename_bm )
		{
     cc4:	1b b8       	out	0x0b, r1	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:470
			if(++modename_Doing > N_modename_period) 
     cc6:	78 b8       	out	0x08, r7	; 8
     cc8:	86 cf       	rjmp	.-244    	; 0xbd6 <__stack+0x2d7>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:492
			{
				tmp = -1 * tmp;
				Set_7segment(3,10);
				tmp /= 10;
				_delay_ms(1);
				Set_7segment(1,tmp % 10);
     cca:	20 91 eb 01 	lds	r18, 0x01EB	; 0x8001eb <hightemper>
     cce:	30 91 ec 01 	lds	r19, 0x01EC	; 0x8001ec <hightemper+0x1>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:493
				_delay_ms(1);
     cd2:	c9 01       	movw	r24, r18
     cd4:	88 5c       	subi	r24, 0xC8	; 200
     cd6:	91 09       	sbc	r25, r1
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:494
				tmp /= 10;
     cd8:	97 ff       	sbrs	r25, 7
     cda:	62 c0       	rjmp	.+196    	; 0xda0 <__stack+0x4a1>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:496
				Set_timeSegment(2,tmp % 10);
				_delay_ms(1);
     cdc:	98 ec       	ldi	r25, 0xC8	; 200
     cde:	a9 2e       	mov	r10, r25
     ce0:	b1 2c       	mov	r11, r1
     ce2:	a2 1a       	sub	r10, r18
     ce4:	b3 0a       	sbc	r11, r19
Set_7segment():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:342
		}
		break;
	}
	return;
}

     ce6:	65 b8       	out	0x05, r6	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:343
void setup()
     ce8:	80 ef       	ldi	r24, 0xF0	; 240
     cea:	8b b9       	out	0x0b, r24	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     cec:	ef e9       	ldi	r30, 0x9F	; 159
     cee:	ff e0       	ldi	r31, 0x0F	; 15
     cf0:	31 97       	sbiw	r30, 0x01	; 1
     cf2:	f1 f7       	brne	.-4      	; 0xcf0 <__stack+0x3f1>
     cf4:	00 c0       	rjmp	.+0      	; 0xcf6 <__stack+0x3f7>
     cf6:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:498
				_delay_ms(1);
				tmp /= 10;
				Set_timeSegment(2,tmp % 10);
				_delay_ms(1);
			}
			else
     cf8:	c5 01       	movw	r24, r10
     cfa:	be 01       	movw	r22, r28
     cfc:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     d00:	cb 01       	movw	r24, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:500
			{
				tmp = tmp % 1000;
     d02:	be 01       	movw	r22, r28
     d04:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     d08:	bc 01       	movw	r22, r24
     d0a:	81 e0       	ldi	r24, 0x01	; 1
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     d12:	8f e9       	ldi	r24, 0x9F	; 159
     d14:	9f e0       	ldi	r25, 0x0F	; 15
     d16:	01 97       	sbiw	r24, 0x01	; 1
     d18:	f1 f7       	brne	.-4      	; 0xd16 <__stack+0x417>
     d1a:	00 c0       	rjmp	.+0      	; 0xd1c <__stack+0x41d>
     d1c:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:502
				Set_7segment(1,tmp % 10);
				_delay_ms(1);
     d1e:	c5 01       	movw	r24, r10
     d20:	b8 01       	movw	r22, r16
     d22:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     d26:	cb 01       	movw	r24, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:503
				tmp /= 10;
     d28:	be 01       	movw	r22, r28
     d2a:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     d2e:	0e 94 8c 00 	call	0x118	; 0x118 <Set_timeSegment(int, int) [clone .constprop.7]>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     d32:	ef e9       	ldi	r30, 0x9F	; 159
     d34:	ff e0       	ldi	r31, 0x0F	; 15
     d36:	31 97       	sbiw	r30, 0x01	; 1
     d38:	f1 f7       	brne	.-4      	; 0xd36 <__stack+0x437>
     d3a:	00 c0       	rjmp	.+0      	; 0xd3c <__stack+0x43d>
     d3c:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:521
		{
			if(++modename_Doing > N_modename_period)
			{
				flag &= ~(FLAG_Modename_bm);
				modename_Doing = 0;
			}
     d3e:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
     d42:	84 30       	cpi	r24, 0x04	; 4
     d44:	09 f0       	breq	.+2      	; 0xd48 <__stack+0x449>
     d46:	91 c0       	rjmp	.+290    	; 0xe6a <__stack+0x56b>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:523
			PORTB = (1 << SG1) | (1 << SG2) | (0 << SG6) | (1 << SG7) | (1 << SG8); // L
			PORTD = (1 << SG3) | (0 << SG4) | (0 << SG5) | (0 << GR1d) | (1 << GR2d) | (0 << GR3d);
     d48:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     d4c:	86 ff       	sbrs	r24, 6
     d4e:	53 c0       	rjmp	.+166    	; 0xdf6 <__stack+0x4f7>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:525
			_delay_ms(1);
			PORTB = (0 << SG1) | (1 << SG2) | (0 << SG6) | (0 << SG7) | (1 << SG8); // E
     d50:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <modename_Doing>
     d54:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <modename_Doing+0x1>
     d58:	01 96       	adiw	r24, 0x01	; 1
     d5a:	90 93 ee 01 	sts	0x01EE, r25	; 0x8001ee <modename_Doing+0x1>
     d5e:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <modename_Doing>
     d62:	89 37       	cpi	r24, 0x79	; 121
     d64:	91 05       	cpc	r25, r1
     d66:	48 f0       	brcs	.+18     	; 0xd7a <__stack+0x47b>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:527
			PORTD = (1 << SG3) | (0 << SG4) | (0 << SG5) | (1 << GR1d) | (0 << GR2d) | (0 << GR3d);
			_delay_ms(1);
     d68:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     d6c:	8f 7b       	andi	r24, 0xBF	; 191
     d6e:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:528
		}
     d72:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <modename_Doing+0x1>
     d76:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <modename_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:530
		else
		{
     d7a:	86 ec       	ldi	r24, 0xC6	; 198
     d7c:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:531
			int tmpL = lowtemper;
     d7e:	88 e2       	ldi	r24, 0x28	; 40
     d80:	8b b9       	out	0x0b, r24	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     d82:	ef e9       	ldi	r30, 0x9F	; 159
     d84:	ff e0       	ldi	r31, 0x0F	; 15
     d86:	31 97       	sbiw	r30, 0x01	; 1
     d88:	f1 f7       	brne	.-4      	; 0xd86 <__stack+0x487>
     d8a:	00 c0       	rjmp	.+0      	; 0xd8c <__stack+0x48d>
     d8c:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:533
			tmpL = tmpL - 200;
			if(tmpL < 0)
     d8e:	84 e8       	ldi	r24, 0x84	; 132
     d90:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:534
			{
     d92:	84 e2       	ldi	r24, 0x24	; 36
     d94:	8b b9       	out	0x0b, r24	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     d96:	8f e9       	ldi	r24, 0x9F	; 159
     d98:	9f e0       	ldi	r25, 0x0F	; 15
     d9a:	01 97       	sbiw	r24, 0x01	; 1
     d9c:	f1 f7       	brne	.-4      	; 0xd9a <__stack+0x49b>
     d9e:	63 c0       	rjmp	.+198    	; 0xe66 <__stack+0x567>
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:508
				tmp /= 10;
				Set_7segment(2,tmp % 10);
				_delay_ms(1);
				tmp /= 10;
				Set_7segment(3,tmp % 10);
				_delay_ms(1);
     da0:	b6 01       	movw	r22, r12
     da2:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     da6:	4c 01       	movw	r8, r24
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:509
			}
     da8:	be 01       	movw	r22, r28
     daa:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     dae:	5b 01       	movw	r10, r22
     db0:	bc 01       	movw	r22, r24
     db2:	81 e0       	ldi	r24, 0x01	; 1
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     dba:	8f e9       	ldi	r24, 0x9F	; 159
     dbc:	9f e0       	ldi	r25, 0x0F	; 15
     dbe:	01 97       	sbiw	r24, 0x01	; 1
     dc0:	f1 f7       	brne	.-4      	; 0xdbe <__stack+0x4bf>
     dc2:	00 c0       	rjmp	.+0      	; 0xdc4 <__stack+0x4c5>
     dc4:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:512
		}
	}
	
     dc6:	c5 01       	movw	r24, r10
     dc8:	be 01       	movw	r22, r28
     dca:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     dce:	bc 01       	movw	r22, r24
     dd0:	82 e0       	ldi	r24, 0x02	; 2
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     dd8:	ef e9       	ldi	r30, 0x9F	; 159
     dda:	ff e0       	ldi	r31, 0x0F	; 15
     ddc:	31 97       	sbiw	r30, 0x01	; 1
     dde:	f1 f7       	brne	.-4      	; 0xddc <__stack+0x4dd>
     de0:	00 c0       	rjmp	.+0      	; 0xde2 <__stack+0x4e3>
     de2:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:514
	if(segment_mode == Appear_LowTemper)
	{
     de4:	c4 01       	movw	r24, r8
     de6:	b8 01       	movw	r22, r16
     de8:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:515
		if(flag & FLAG_Modename_bm)
     dec:	83 e0       	ldi	r24, 0x03	; 3
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
     df4:	1c cf       	rjmp	.-456    	; 0xc2e <__stack+0x32f>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:539
			{
				tmpL = -1 * tmpL;
				Set_7segment(3,10);
				tmpL /= 10;
				_delay_ms(1);
				Set_7segment(1,tmpL % 10);
     df6:	20 91 e9 01 	lds	r18, 0x01E9	; 0x8001e9 <lowtemper>
     dfa:	30 91 ea 01 	lds	r19, 0x01EA	; 0x8001ea <lowtemper+0x1>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:540
				_delay_ms(1);
     dfe:	c9 01       	movw	r24, r18
     e00:	88 5c       	subi	r24, 0xC8	; 200
     e02:	91 09       	sbc	r25, r1
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:541
				tmpL /= 10;
     e04:	97 ff       	sbrs	r25, 7
     e06:	1d c3       	rjmp	.+1594   	; 0x1442 <__stack+0xb43>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:543
				Set_timeSegment(2,tmpL % 10);
				_delay_ms(1);
     e08:	88 ec       	ldi	r24, 0xC8	; 200
     e0a:	a8 2e       	mov	r10, r24
     e0c:	b1 2c       	mov	r11, r1
     e0e:	a2 1a       	sub	r10, r18
     e10:	b3 0a       	sbc	r11, r19
Set_7segment():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:342
		}
		break;
	}
	return;
}

     e12:	65 b8       	out	0x05, r6	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:343
void setup()
     e14:	80 ef       	ldi	r24, 0xF0	; 240
     e16:	8b b9       	out	0x0b, r24	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     e18:	ef e9       	ldi	r30, 0x9F	; 159
     e1a:	ff e0       	ldi	r31, 0x0F	; 15
     e1c:	31 97       	sbiw	r30, 0x01	; 1
     e1e:	f1 f7       	brne	.-4      	; 0xe1c <__stack+0x51d>
     e20:	00 c0       	rjmp	.+0      	; 0xe22 <__stack+0x523>
     e22:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:545
				_delay_ms(1);
				tmpL /= 10;
				Set_timeSegment(2,tmpL % 10);
				_delay_ms(1);
			}
			else
     e24:	c5 01       	movw	r24, r10
     e26:	be 01       	movw	r22, r28
     e28:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     e2c:	cb 01       	movw	r24, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:547
			{
				tmpL = tmpL % 1000;
     e2e:	be 01       	movw	r22, r28
     e30:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     e34:	bc 01       	movw	r22, r24
     e36:	81 e0       	ldi	r24, 0x01	; 1
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     e3e:	8f e9       	ldi	r24, 0x9F	; 159
     e40:	9f e0       	ldi	r25, 0x0F	; 15
     e42:	01 97       	sbiw	r24, 0x01	; 1
     e44:	f1 f7       	brne	.-4      	; 0xe42 <__stack+0x543>
     e46:	00 c0       	rjmp	.+0      	; 0xe48 <__stack+0x549>
     e48:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:549
				Set_7segment(1,tmpL % 10);
				_delay_ms(1);
     e4a:	c5 01       	movw	r24, r10
     e4c:	b8 01       	movw	r22, r16
     e4e:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     e52:	cb 01       	movw	r24, r22
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:550
				tmpL /= 10;
     e54:	be 01       	movw	r22, r28
     e56:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
     e5a:	0e 94 8c 00 	call	0x118	; 0x118 <Set_timeSegment(int, int) [clone .constprop.7]>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     e5e:	ef e9       	ldi	r30, 0x9F	; 159
     e60:	ff e0       	ldi	r31, 0x0F	; 15
     e62:	31 97       	sbiw	r30, 0x01	; 1
     e64:	f1 f7       	brne	.-4      	; 0xe62 <__stack+0x563>
     e66:	00 c0       	rjmp	.+0      	; 0xe68 <__stack+0x569>
     e68:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:568
		Set_timeSegment(3,12);//1 2 3
		_delay_ms(1);
		Set_timeSegment(2,tmpT % 10);
		_delay_ms(1);
		tmpT /= 10;
		Set_7segment(3,tmpT);// 3 2 1
     e6a:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
     e6e:	85 30       	cpi	r24, 0x05	; 5
     e70:	41 f5       	brne	.+80     	; 0xec2 <__stack+0x5c3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:570
		_delay_ms(1);
	}
     e72:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <timesetvalue>
     e76:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
     e7a:	8f 5f       	subi	r24, 0xFF	; 255
Set_timeSegment():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:208
		}// H(12)
	}
}
void Set_7segment(int digit,int number) // 0 -> HT(10),LT(11) 1 -> -(10) 3 2 1
{
	switch(digit)
     e7c:	94 e4       	ldi	r25, 0x44	; 68
     e7e:	95 b9       	out	0x05, r25	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:209
	{
     e80:	9b b9       	out	0x0b, r25	; 11
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     e82:	ef e9       	ldi	r30, 0x9F	; 159
     e84:	ff e0       	ldi	r31, 0x0F	; 15
     e86:	31 97       	sbiw	r30, 0x01	; 1
     e88:	f1 f7       	brne	.-4      	; 0xe86 <__stack+0x587>
     e8a:	00 c0       	rjmp	.+0      	; 0xe8c <__stack+0x58d>
     e8c:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:573
		Set_7segment(3,tmpT);// 3 2 1
		_delay_ms(1);
	}
	
	if(volt_tmp >= 97 )
	{
     e8e:	6a e0       	ldi	r22, 0x0A	; 10
     e90:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <__udivmodqi4>
     e94:	b8 2e       	mov	r11, r24
     e96:	89 2f       	mov	r24, r25
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 8c 00 	call	0x118	; 0x118 <Set_timeSegment(int, int) [clone .constprop.7]>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     e9e:	8f e9       	ldi	r24, 0x9F	; 159
     ea0:	9f e0       	ldi	r25, 0x0F	; 15
     ea2:	01 97       	sbiw	r24, 0x01	; 1
     ea4:	f1 f7       	brne	.-4      	; 0xea2 <__stack+0x5a3>
     ea6:	00 c0       	rjmp	.+0      	; 0xea8 <__stack+0x5a9>
     ea8:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:576
		 BZ_Point = 0;
		 //bz_mode = BZOFF;
	}
     eaa:	6b 2d       	mov	r22, r11
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	83 e0       	ldi	r24, 0x03	; 3
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
     eb6:	ef e9       	ldi	r30, 0x9F	; 159
     eb8:	ff e0       	ldi	r31, 0x0F	; 15
     eba:	31 97       	sbiw	r30, 0x01	; 1
     ebc:	f1 f7       	brne	.-4      	; 0xeba <__stack+0x5bb>
     ebe:	00 c0       	rjmp	.+0      	; 0xec0 <__stack+0x5c1>
     ec0:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:580
	else if(volt_tmp < 96 && volt_tmp >= 95 && BZ_Point == 0) bz_mode = BZON;
	 
	 else if(volt_tmp < 95) 
	 {
     ec2:	f1 e6       	ldi	r31, 0x61	; 97
     ec4:	ef 16       	cp	r14, r31
     ec6:	f1 04       	cpc	r15, r1
     ec8:	0c f4       	brge	.+2      	; 0xecc <__stack+0x5cd>
     eca:	e6 c2       	rjmp	.+1484   	; 0x1498 <__stack+0xb99>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:582
		 PORTD &= ~(1<<PD2);
		 PORTD &= ~(1<<PD3);
     ecc:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <BZ_Point>
BZ_Control():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:700
	switch(bz_mode)
	{
		case BZOFF: PORTB &= ~(1<<PB3);
		break;
		case BZON:
			if(BZ_Point == 0)
     ed0:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     ed4:	87 ff       	sbrs	r24, 7
     ed6:	0d c0       	rjmp	.+26     	; 0xef2 <__stack+0x5f3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:701
			{
     ed8:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     edc:	8f 77       	andi	r24, 0x7F	; 127
     ede:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:703
				PORTB |= (1<<PB3); //bz
				if(++BZ_Doing > N_BZ_period)
     ee2:	20 91 f4 01 	lds	r18, 0x01F4	; 0x8001f4 <bz_mode>
     ee6:	22 23       	and	r18, r18
     ee8:	09 f4       	brne	.+2      	; 0xeec <__stack+0x5ed>
     eea:	f3 c2       	rjmp	.+1510   	; 0x14d2 <__stack+0xbd3>
     eec:	21 30       	cpi	r18, 0x01	; 1
     eee:	09 f4       	brne	.+2      	; 0xef2 <__stack+0x5f3>
     ef0:	f2 c2       	rjmp	.+1508   	; 0x14d6 <__stack+0xbd7>
HandleTouchKeyInput():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:742
	
		touch_curr = PINC & (1<<PWR_TOUCH_IN);
			if(touch_curr == touch_prev)
			{
					if(++touch_chat > N_CHAT_THRESH )
				   {	
     ef2:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     ef6:	85 ff       	sbrs	r24, 5
     ef8:	41 c0       	rjmp	.+130    	; 0xf7c <__stack+0x67d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:744
						touch_chat = 0;
				
     efa:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     efe:	8f 7d       	andi	r24, 0xDF	; 223
     f00:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:746
						if( !(touch_prev & (1<<PWR_TOUCH_IN)) )
						{
     f04:	86 b1       	in	r24, 0x06	; 6
     f06:	84 70       	andi	r24, 0x04	; 4
     f08:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <touch_curr>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:747
							if( !(flag_Swith & FLAG_PwrSwith_bm) )
     f0c:	90 91 d6 01 	lds	r25, 0x01D6	; 0x8001d6 <touch_curr>
     f10:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <touch_prev>
     f14:	98 13       	cpse	r25, r24
     f16:	0e c3       	rjmp	.+1564   	; 0x1534 <__stack+0xc35>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:749
							{
								flag_Swith |= FLAG_PwrSwith_bm;
     f18:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <touch_chat>
     f1c:	8f 5f       	subi	r24, 0xFF	; 255
     f1e:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <touch_chat>
     f22:	88 23       	and	r24, r24
     f24:	59 f1       	breq	.+86     	; 0xf7c <__stack+0x67d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:751
									tim_base = 0; // clear sleep-timer while key is pressed.
						
     f26:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <touch_chat>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:753
									if( ++sys_mode > ON ) sys_mode = OFF;
									switch(sys_mode)
     f2a:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <touch_prev>
     f2e:	82 fd       	sbrc	r24, 2
     f30:	fb c2       	rjmp	.+1526   	; 0x1528 <__stack+0xc29>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:755
									{
										case ON:
     f32:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
     f36:	85 fd       	sbrc	r24, 5
     f38:	21 c0       	rjmp	.+66     	; 0xf7c <__stack+0x67d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:757
										segment_mode = volt;
										Time_tmp = 0;
     f3a:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
     f3e:	80 62       	ori	r24, 0x20	; 32
     f40:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:758
										time_Check = 0;
     f44:	10 92 d3 01 	sts	0x01D3, r1	; 0x8001d3 <tim_base>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:760
										time_Doing = 0;
										break;
     f48:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <sys_mode>
     f4c:	8f 5f       	subi	r24, 0xFF	; 255
     f4e:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <sys_mode>
     f52:	82 30       	cpi	r24, 0x02	; 2
     f54:	10 f0       	brcs	.+4      	; 0xf5a <__stack+0x65b>
     f56:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <sys_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:761
										
     f5a:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <sys_mode>
     f5e:	88 23       	and	r24, r24
     f60:	09 f4       	brne	.+2      	; 0xf64 <__stack+0x665>
     f62:	d5 c2       	rjmp	.+1450   	; 0x150e <__stack+0xc0f>
     f64:	81 30       	cpi	r24, 0x01	; 1
     f66:	51 f4       	brne	.+20     	; 0xf7c <__stack+0x67d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:764
										case OFF:
										BZ_Point = 0;
										segment_mode = Appear_off;
     f68:	80 93 f5 01 	sts	0x01F5, r24	; 0x8001f5 <segment_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:765
										bz_mode = BZOFF;
     f6c:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <Time_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:766
										PORTC |= (1<<LAMP_OUT);
     f70:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <time_Check>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:767
										segmentdo = 1;
     f74:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <time_Doing+0x1>
     f78:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <time_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:804
		
		mode_touch_curr = PINC & (1<<MODE_TOUCH_IN);
		if(mode_touch_curr == mode_touch_prev)
		{
			if(++mode_touch_chat > N_CHAT_THRESH )
			{
     f7c:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     f80:	84 ff       	sbrs	r24, 4
     f82:	3d c0       	rjmp	.+122    	; 0xffe <__stack+0x6ff>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:806
				mode_touch_chat = 0;
				
     f84:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
     f88:	8f 7e       	andi	r24, 0xEF	; 239
     f8a:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:808
				if( !(mode_touch_prev & (1<<MODE_TOUCH_IN)) )
				{
     f8e:	86 b1       	in	r24, 0x06	; 6
     f90:	88 70       	andi	r24, 0x08	; 8
     f92:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <mode_touch_curr>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:809
					if( !(flag_Swith & FLAG_ModeSwith_bm) )
     f96:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <mode_touch_curr>
     f9a:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <mode_touch_prev>
     f9e:	98 13       	cpse	r25, r24
     fa0:	f0 c2       	rjmp	.+1504   	; 0x1582 <__stack+0xc83>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:811
					{
						flag_Swith |= FLAG_ModeSwith_bm;
     fa2:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <mode_touch_chat>
     fa6:	8f 5f       	subi	r24, 0xFF	; 255
     fa8:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <mode_touch_chat>
     fac:	88 23       	and	r24, r24
     fae:	39 f1       	breq	.+78     	; 0xffe <__stack+0x6ff>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:813
						mode_tim_base = 0; // clear sleep-timer while key is pressed.
						
     fb0:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <mode_touch_chat>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:815
						if( ++segment_mode > Appear_Time ) segment_mode = volt;
						switch(segment_mode)
     fb4:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <mode_touch_prev>
     fb8:	83 fd       	sbrc	r24, 3
     fba:	dd c2       	rjmp	.+1466   	; 0x1576 <__stack+0xc77>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:817
						{
							case volt:
     fbc:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
     fc0:	84 fd       	sbrc	r24, 4
     fc2:	1d c0       	rjmp	.+58     	; 0xffe <__stack+0x6ff>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:819
								flag &= ~FLAG_Modename_bm;
								PORTD &= ~(1<<PD2);
     fc4:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
     fc8:	80 61       	ori	r24, 0x10	; 16
     fca:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:820
								PORTD &= ~(1<<PD3);
     fce:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <mode_tim_base>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:822
								PORTD &= ~(1<<PD4);
							break;
     fd2:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
     fd6:	8f 5f       	subi	r24, 0xFF	; 255
     fd8:	80 93 f5 01 	sts	0x01F5, r24	; 0x8001f5 <segment_mode>
     fdc:	86 30       	cpi	r24, 0x06	; 6
     fde:	10 f0       	brcs	.+4      	; 0xfe4 <__stack+0x6e5>
     fe0:	70 92 f5 01 	sts	0x01F5, r7	; 0x8001f5 <segment_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:823
							
     fe4:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
     fe8:	83 30       	cpi	r24, 0x03	; 3
     fea:	09 f4       	brne	.+2      	; 0xfee <__stack+0x6ef>
     fec:	bc c2       	rjmp	.+1400   	; 0x1566 <__stack+0xc67>
     fee:	08 f0       	brcs	.+2      	; 0xff2 <__stack+0x6f3>
     ff0:	a8 c2       	rjmp	.+1360   	; 0x1542 <__stack+0xc43>
     ff2:	81 30       	cpi	r24, 0x01	; 1
     ff4:	09 f4       	brne	.+2      	; 0xff8 <__stack+0x6f9>
     ff6:	ae c2       	rjmp	.+1372   	; 0x1554 <__stack+0xc55>
     ff8:	82 30       	cpi	r24, 0x02	; 2
     ffa:	09 f4       	brne	.+2      	; 0xffe <__stack+0x6ff>
     ffc:	ab c2       	rjmp	.+1366   	; 0x1554 <__stack+0xc55>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:884
		
		up_touch_curr = PINC & (1<<UP_TOUCH_IN);
		if(up_touch_curr == up_touch_prev)
		{
			if(++up_touch_chat > N_CHAT_THRESH )
			{
     ffe:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    1002:	82 ff       	sbrs	r24, 2
    1004:	63 c0       	rjmp	.+198    	; 0x10cc <__stack+0x7cd>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:886
				up_touch_chat = 0;
				
    1006:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    100a:	8b 7f       	andi	r24, 0xFB	; 251
    100c:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:888
				if( !(up_touch_prev & (1<<UP_TOUCH_IN)) )
				{
    1010:	86 b1       	in	r24, 0x06	; 6
    1012:	80 71       	andi	r24, 0x10	; 16
    1014:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <up_touch_curr>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:889
					if(++up_tim_base > N_button_push)
    1018:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <up_touch_curr>
    101c:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <up_touch_prev>
    1020:	98 13       	cpse	r25, r24
    1022:	2f c3       	rjmp	.+1630   	; 0x1682 <__stack+0xd83>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:891
						{
							up_tim_base = 0;
    1024:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <up_touch_chat>
    1028:	8f 5f       	subi	r24, 0xFF	; 255
    102a:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <up_touch_chat>
    102e:	88 23       	and	r24, r24
    1030:	09 f4       	brne	.+2      	; 0x1034 <__stack+0x735>
    1032:	4c c0       	rjmp	.+152    	; 0x10cc <__stack+0x7cd>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:893
							flag_Swith &= ~(FLAG_UpSwitch_bm);
						}
    1034:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <up_touch_chat>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:895
					if( !(flag_Swith & FLAG_UpSwitch_bm) )
					{
    1038:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <up_touch_prev>
    103c:	84 fd       	sbrc	r24, 4
    103e:	1b c3       	rjmp	.+1590   	; 0x1676 <__stack+0xd77>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:897
						flag_Swith |= FLAG_UpSwitch_bm;
						up_tim_base = 0; // clear sleep-timer while key is pressed.
    1040:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <up_tim_base>
    1044:	8f 5f       	subi	r24, 0xFF	; 255
    1046:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <up_tim_base>
    104a:	84 30       	cpi	r24, 0x04	; 4
    104c:	38 f0       	brcs	.+14     	; 0x105c <__stack+0x75d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:899
						
						switch(segment_mode)
    104e:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <up_tim_base>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:900
						{
    1052:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    1056:	8b 7f       	andi	r24, 0xFB	; 251
    1058:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:902
							case volt:
							
    105c:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    1060:	82 fd       	sbrc	r24, 2
    1062:	34 c0       	rjmp	.+104    	; 0x10cc <__stack+0x7cd>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:904
							break;
							
    1064:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    1068:	84 60       	ori	r24, 0x04	; 4
    106a:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:905
							case Appear_HighTemper:
    106e:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <up_tim_base>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:907
							fivesec_tmp = 0;
							hightemper = eeprom_read_word(HighTaddr);
    1072:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
    1076:	84 30       	cpi	r24, 0x04	; 4
    1078:	09 f4       	brne	.+2      	; 0x107c <__stack+0x77d>
    107a:	9c c2       	rjmp	.+1336   	; 0x15b4 <__stack+0xcb5>
    107c:	85 30       	cpi	r24, 0x05	; 5
    107e:	09 f4       	brne	.+2      	; 0x1082 <__stack+0x783>
    1080:	cc c2       	rjmp	.+1432   	; 0x161a <__stack+0xd1b>
    1082:	83 30       	cpi	r24, 0x03	; 3
    1084:	19 f5       	brne	.+70     	; 0x10cc <__stack+0x7cd>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:914
							else
							{
								++hightemper;
								hightemper = hightemper % 801;
							}
							eeprom_update_word(HighTaddr,hightemper);
    1086:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <fivesec_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:915
							break;
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    1092:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
    1096:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:916
							
    109a:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <hightemper>
    109e:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <hightemper+0x1>
    10a2:	8f 3b       	cpi	r24, 0xBF	; 191
    10a4:	91 05       	cpc	r25, r1
    10a6:	0c f0       	brlt	.+2      	; 0x10aa <__stack+0x7ab>
    10a8:	73 c2       	rjmp	.+1254   	; 0x1590 <__stack+0xc91>
    10aa:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <hightemper>
    10ae:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <hightemper+0x1>
    10b2:	0a 96       	adiw	r24, 0x0a	; 10
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:920
							case Appear_LowTemper:
							fivesec_tmp = 0;
							lowtemper = eeprom_read_word(lowTaddr);
							if(lowtemper <= 190) lowtemper = lowtemper + 10;
    10b4:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
    10b8:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:922
							else
							{
    10bc:	60 91 eb 01 	lds	r22, 0x01EB	; 0x8001eb <hightemper>
    10c0:	70 91 ec 01 	lds	r23, 0x01EC	; 0x8001ec <hightemper+0x1>
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:945
						}
						
					}
				}
				
				else
    10c8:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <eeprom_update_word>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:970
		
		down_touch_curr = PINC & (1<<DOWN_TOUCH_IN);
		if(down_touch_curr == down_touch_prev)
		{
			if(++down_touch_chat > N_CHAT_THRESH )
			{
    10cc:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    10d0:	83 ff       	sbrs	r24, 3
    10d2:	6f c0       	rjmp	.+222    	; 0x11b2 <__stack+0x8b3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:972
				down_touch_chat = 0;
				
    10d4:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    10d8:	87 7f       	andi	r24, 0xF7	; 247
    10da:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:974
				if( !(down_touch_prev & (1<<DOWN_TOUCH_IN)) )
				{
    10de:	86 b1       	in	r24, 0x06	; 6
    10e0:	80 72       	andi	r24, 0x20	; 32
    10e2:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <down_touch_curr>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:975
					if(++down_tim_base > N_button_push)
    10e6:	90 91 ca 01 	lds	r25, 0x01CA	; 0x8001ca <down_touch_curr>
    10ea:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <down_touch_prev>
    10ee:	98 13       	cpse	r25, r24
    10f0:	40 c3       	rjmp	.+1664   	; 0x1772 <__stack+0xe73>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:977
					{
						down_tim_base = 0;
    10f2:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <down_touch_chat>
    10f6:	8f 5f       	subi	r24, 0xFF	; 255
    10f8:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <down_touch_chat>
    10fc:	88 23       	and	r24, r24
    10fe:	09 f4       	brne	.+2      	; 0x1102 <__stack+0x803>
    1100:	58 c0       	rjmp	.+176    	; 0x11b2 <__stack+0x8b3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:979
						flag_Swith &= ~(FLAG_DownSwith_bm);
					}
    1102:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <down_touch_chat>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:981
					if( !(flag_Swith & FLAG_DownSwith_bm) )
					{
    1106:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <down_touch_prev>
    110a:	85 fd       	sbrc	r24, 5
    110c:	2c c3       	rjmp	.+1624   	; 0x1766 <__stack+0xe67>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:983
						flag_Swith |= FLAG_DownSwith_bm;
						down_tim_base = 0; // clear sleep-timer while key is pressed.
    110e:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <down_tim_base>
    1112:	8f 5f       	subi	r24, 0xFF	; 255
    1114:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <down_tim_base>
    1118:	84 30       	cpi	r24, 0x04	; 4
    111a:	38 f0       	brcs	.+14     	; 0x112a <__stack+0x82b>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:985
						
						switch(segment_mode)
    111c:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <down_tim_base>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:986
						{
    1120:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    1124:	87 7f       	andi	r24, 0xF7	; 247
    1126:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:988
							case volt:
							
    112a:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    112e:	83 fd       	sbrc	r24, 3
    1130:	40 c0       	rjmp	.+128    	; 0x11b2 <__stack+0x8b3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:990
							break;
							
    1132:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    1136:	88 60       	ori	r24, 0x08	; 8
    1138:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:991
							case Appear_HighTemper:
    113c:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <down_tim_base>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:993
							fivesec_tmp = 0;
							hightemper = eeprom_read_word(HighTaddr);
    1140:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
    1144:	84 30       	cpi	r24, 0x04	; 4
    1146:	09 f4       	brne	.+2      	; 0x114a <__stack+0x84b>
    1148:	ad c2       	rjmp	.+1370   	; 0x16a4 <__stack+0xda5>
    114a:	85 30       	cpi	r24, 0x05	; 5
    114c:	09 f4       	brne	.+2      	; 0x1150 <__stack+0x851>
    114e:	dd c2       	rjmp	.+1466   	; 0x170a <__stack+0xe0b>
    1150:	83 30       	cpi	r24, 0x03	; 3
    1152:	79 f5       	brne	.+94     	; 0x11b2 <__stack+0x8b3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1000
							{
								hightemper = hightemper - 10;
								if(hightemper < 0) hightemper = 800;
							}
							else --hightemper;
							eeprom_update_word(HighTaddr,hightemper);
    1154:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <fivesec_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1001
							break;
    1158:	81 e0       	ldi	r24, 0x01	; 1
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    1160:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
    1164:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1002
							
    1168:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <hightemper>
    116c:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <hightemper+0x1>
    1170:	89 3c       	cpi	r24, 0xC9	; 201
    1172:	91 05       	cpc	r25, r1
    1174:	0c f0       	brlt	.+2      	; 0x1178 <__stack+0x879>
    1176:	8c c2       	rjmp	.+1304   	; 0x1690 <__stack+0xd91>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1004
							case Appear_LowTemper:
							fivesec_tmp = 0;
    1178:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <hightemper>
    117c:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <hightemper+0x1>
    1180:	0a 97       	sbiw	r24, 0x0a	; 10
    1182:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
    1186:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1005
							lowtemper = eeprom_read_word(lowTaddr);
    118a:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <hightemper>
    118e:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <hightemper+0x1>
    1192:	97 ff       	sbrs	r25, 7
    1194:	06 c0       	rjmp	.+12     	; 0x11a2 <__stack+0x8a3>
    1196:	e0 e2       	ldi	r30, 0x20	; 32
    1198:	f3 e0       	ldi	r31, 0x03	; 3
    119a:	f0 93 ec 01 	sts	0x01EC, r31	; 0x8001ec <hightemper+0x1>
    119e:	e0 93 eb 01 	sts	0x01EB, r30	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1008
							if(lowtemper <= 200)
							{
								lowtemper =	lowtemper - 10;
    11a2:	60 91 eb 01 	lds	r22, 0x01EB	; 0x8001eb <hightemper>
    11a6:	70 91 ec 01 	lds	r23, 0x01EC	; 0x8001ec <hightemper+0x1>
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1031
						}
						
					}
				}
				
				else
    11ae:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <eeprom_update_word>
DoingTime():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:607
	
	if(temper_Doing++ > N_Temperature_period)
	{
		Volt_Detect = tem * 5.0 / 1024.0/ 0.2;
		
		temper_Doing = 0;
    11b2:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    11b6:	81 ff       	sbrs	r24, 1
    11b8:	17 c1       	rjmp	.+558    	; 0x13e8 <__stack+0xae9>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:608
		float R1 = 10000;
    11ba:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    11be:	8d 7f       	andi	r24, 0xFD	; 253
    11c0:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:611
		float logR2, R2, T;
		float c1 = 0.8697898208e-03, c2 = 2.587589263e-04, c3 = 1.292290871e-07;
		R2 = R1 * (1024.0 / (float)Vo - 1.0);
    11c4:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <temper_Doing>
    11c8:	90 91 e2 01 	lds	r25, 0x01E2	; 0x8001e2 <temper_Doing+0x1>
    11cc:	9c 01       	movw	r18, r24
    11ce:	2f 5f       	subi	r18, 0xFF	; 255
    11d0:	3f 4f       	sbci	r19, 0xFF	; 255
    11d2:	30 93 e2 01 	sts	0x01E2, r19	; 0x8001e2 <temper_Doing+0x1>
    11d6:	20 93 e1 01 	sts	0x01E1, r18	; 0x8001e1 <temper_Doing>
    11da:	06 97       	sbiw	r24, 0x06	; 6
    11dc:	08 f4       	brcc	.+2      	; 0x11e0 <__stack+0x8e1>
    11de:	7e c0       	rjmp	.+252    	; 0x12dc <__stack+0x9dd>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:613
		logR2 = log(R2);
		T = (1.0 / (c1 + c2*logR2 + c3*logR2*logR2*logR2));
    11e0:	60 91 fa 01 	lds	r22, 0x01FA	; 0x8001fa <tem>
    11e4:	70 91 fb 01 	lds	r23, 0x01FB	; 0x8001fb <tem+0x1>
    11e8:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <tem+0x2>
    11ec:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <tem+0x3>
    11f0:	20 e0       	ldi	r18, 0x00	; 0
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	40 ea       	ldi	r20, 0xA0	; 160
    11f6:	50 e4       	ldi	r21, 0x40	; 64
    11f8:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
    11fc:	20 e0       	ldi	r18, 0x00	; 0
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	40 e8       	ldi	r20, 0x80	; 128
    1202:	5a e3       	ldi	r21, 0x3A	; 58
    1204:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
    1208:	2d ec       	ldi	r18, 0xCD	; 205
    120a:	3c ec       	ldi	r19, 0xCC	; 204
    120c:	4c e4       	ldi	r20, 0x4C	; 76
    120e:	5e e3       	ldi	r21, 0x3E	; 62
    1210:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__divsf3>
    1214:	60 93 f6 01 	sts	0x01F6, r22	; 0x8001f6 <Volt_Detect>
    1218:	70 93 f7 01 	sts	0x01F7, r23	; 0x8001f7 <Volt_Detect+0x1>
    121c:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <Volt_Detect+0x2>
    1220:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <Volt_Detect+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:615
		CurrentTemperature = T - 273.15;
	}
    1224:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <temper_Doing+0x1>
    1228:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <temper_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:619
	
	float tmp = CurrentTemperature * 10.0;
	int Tempertmp = (int)tmp % 1000;
	
    122c:	20 91 fe 01 	lds	r18, 0x01FE	; 0x8001fe <Vo>
    1230:	30 91 ff 01 	lds	r19, 0x01FF	; 0x8001ff <Vo+0x1>
    1234:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <Vo+0x2>
    1238:	50 91 01 02 	lds	r21, 0x0201	; 0x800201 <Vo+0x3>
    123c:	60 e0       	ldi	r22, 0x00	; 0
    123e:	70 e0       	ldi	r23, 0x00	; 0
    1240:	80 e8       	ldi	r24, 0x80	; 128
    1242:	94 e4       	ldi	r25, 0x44	; 68
    1244:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__divsf3>
    1248:	20 e0       	ldi	r18, 0x00	; 0
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	40 e8       	ldi	r20, 0x80	; 128
    124e:	5f e3       	ldi	r21, 0x3F	; 63
    1250:	0e 94 96 0c 	call	0x192c	; 0x192c <__subsf3>
    1254:	20 e0       	ldi	r18, 0x00	; 0
    1256:	30 e4       	ldi	r19, 0x40	; 64
    1258:	4c e1       	ldi	r20, 0x1C	; 28
    125a:	56 e4       	ldi	r21, 0x46	; 70
    125c:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:620
	hightemper = eeprom_read_word(HighTaddr);
    1260:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <log>
    1264:	4b 01       	movw	r8, r22
    1266:	5c 01       	movw	r10, r24
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:621
	lowtemper = eeprom_read_word(lowTaddr);
    1268:	29 e3       	ldi	r18, 0x39	; 57
    126a:	32 ec       	ldi	r19, 0xC2	; 194
    126c:	4a e0       	ldi	r20, 0x0A	; 10
    126e:	54 e3       	ldi	r21, 0x34	; 52
    1270:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
    1274:	a5 01       	movw	r20, r10
    1276:	94 01       	movw	r18, r8
    1278:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
    127c:	a5 01       	movw	r20, r10
    127e:	94 01       	movw	r18, r8
    1280:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
    1284:	1b 01       	movw	r2, r22
    1286:	2c 01       	movw	r4, r24
    1288:	29 e0       	ldi	r18, 0x09	; 9
    128a:	3a ea       	ldi	r19, 0xAA	; 170
    128c:	47 e8       	ldi	r20, 0x87	; 135
    128e:	59 e3       	ldi	r21, 0x39	; 57
    1290:	c5 01       	movw	r24, r10
    1292:	b4 01       	movw	r22, r8
    1294:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
    1298:	2b e9       	ldi	r18, 0x9B	; 155
    129a:	32 e0       	ldi	r19, 0x02	; 2
    129c:	44 e6       	ldi	r20, 0x64	; 100
    129e:	5a e3       	ldi	r21, 0x3A	; 58
    12a0:	0e 94 97 0c 	call	0x192e	; 0x192e <__addsf3>
    12a4:	9b 01       	movw	r18, r22
    12a6:	ac 01       	movw	r20, r24
    12a8:	c2 01       	movw	r24, r4
    12aa:	b1 01       	movw	r22, r2
    12ac:	0e 94 97 0c 	call	0x192e	; 0x192e <__addsf3>
    12b0:	9b 01       	movw	r18, r22
    12b2:	ac 01       	movw	r20, r24
    12b4:	60 e0       	ldi	r22, 0x00	; 0
    12b6:	70 e0       	ldi	r23, 0x00	; 0
    12b8:	80 e8       	ldi	r24, 0x80	; 128
    12ba:	9f e3       	ldi	r25, 0x3F	; 63
    12bc:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__divsf3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:622
	timesetvalue = eeprom_read_word(timeTaddr);
    12c0:	23 e3       	ldi	r18, 0x33	; 51
    12c2:	33 e9       	ldi	r19, 0x93	; 147
    12c4:	48 e8       	ldi	r20, 0x88	; 136
    12c6:	53 e4       	ldi	r21, 0x43	; 67
    12c8:	0e 94 96 0c 	call	0x192c	; 0x192c <__subsf3>
    12cc:	60 93 f0 01 	sts	0x01F0, r22	; 0x8001f0 <CurrentTemperature>
    12d0:	70 93 f1 01 	sts	0x01F1, r23	; 0x8001f1 <CurrentTemperature+0x1>
    12d4:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <CurrentTemperature+0x2>
    12d8:	90 93 f3 01 	sts	0x01F3, r25	; 0x8001f3 <CurrentTemperature+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:625
	
	if(sys_mode == ON)
		{
    12dc:	80 90 f0 01 	lds	r8, 0x01F0	; 0x8001f0 <CurrentTemperature>
    12e0:	90 90 f1 01 	lds	r9, 0x01F1	; 0x8001f1 <CurrentTemperature+0x1>
    12e4:	a0 90 f2 01 	lds	r10, 0x01F2	; 0x8001f2 <CurrentTemperature+0x2>
    12e8:	b0 90 f3 01 	lds	r11, 0x01F3	; 0x8001f3 <CurrentTemperature+0x3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:628
			if(Tempertmp >= 650)
			{
				 PORTC |= (1<<LAMP_OUT);
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    12f4:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
    12f8:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:629
				 bz_mode = BZOFF;
    12fc:	8a e0       	ldi	r24, 0x0A	; 10
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    1304:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
    1308:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:630
				 PORTB |= B11101111;
    130c:	84 e1       	ldi	r24, 0x14	; 20
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    1314:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <timesetvalue+0x1>
    1318:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:632
				 PORTD &= ~(1<<PD2);
				 PORTD &= ~(1<<PD3);
    131c:	f0 90 e5 01 	lds	r15, 0x01E5	; 0x8001e5 <sys_mode>
    1320:	f1 e0       	ldi	r31, 0x01	; 1
    1322:	ff 12       	cpse	r15, r31
    1324:	5c c0       	rjmp	.+184    	; 0x13de <__stack+0xadf>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:625
	hightemper = eeprom_read_word(HighTaddr);
	lowtemper = eeprom_read_word(lowTaddr);
	timesetvalue = eeprom_read_word(timeTaddr);
	
	if(sys_mode == ON)
		{
    1326:	20 e0       	ldi	r18, 0x00	; 0
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	40 e2       	ldi	r20, 0x20	; 32
    132c:	51 e4       	ldi	r21, 0x41	; 65
    132e:	c5 01       	movw	r24, r10
    1330:	b4 01       	movw	r22, r8
    1332:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__mulsf3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:626
			if(Tempertmp >= 650)
    1336:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__fixsfsi>
    133a:	cb 01       	movw	r24, r22
    133c:	b6 01       	movw	r22, r12
    133e:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:634
				 bz_mode = BZOFF;
				 PORTB |= B11101111;
				 PORTD &= ~(1<<PD2);
				 PORTD &= ~(1<<PD3);
				 PORTD &= ~(1<<PD4);
				 BZ_Point = 1;
    1342:	8a 38       	cpi	r24, 0x8A	; 138
    1344:	22 e0       	ldi	r18, 0x02	; 2
    1346:	92 07       	cpc	r25, r18
    1348:	0c f4       	brge	.+2      	; 0x134c <__stack+0xa4d>
    134a:	1a c2       	rjmp	.+1076   	; 0x1780 <__stack+0xe81>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:636
				 sys_mode = OFF;
				 segment_mode = Appear_off;
    134c:	40 9a       	sbi	0x08, 0	; 8
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:637
			}
    134e:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <bz_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:638
			else if(Tempertmp >= 600 && Tempertmp < 650)
    1352:	25 b1       	in	r18, 0x05	; 5
    1354:	2f 6e       	ori	r18, 0xEF	; 239
    1356:	25 b9       	out	0x05, r18	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:639
			{
    1358:	5a 98       	cbi	0x0b, 2	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:640
				BZ_Point = 0;
    135a:	5b 98       	cbi	0x0b, 3	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:641
				bz_mode = BZON;
    135c:	5c 98       	cbi	0x0b, 4	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:642
				BZ_Doing = 0;
    135e:	f0 92 e6 01 	sts	0x01E6, r15	; 0x8001e6 <BZ_Point>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:643
			}
    1362:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <sys_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:644
			
    1366:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <segment_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:653
				{
					PORTC |= (1<<LAMP_OUT);
					bz_mode = BZOFF;
					PORTB |= B11101111;
					PORTD &= ~(1<<PD2);
					PORTD &= ~(1<<PD3);
    136a:	20 91 de 01 	lds	r18, 0x01DE	; 0x8001de <Time_tmp>
    136e:	21 11       	cpse	r18, r1
    1370:	36 c0       	rjmp	.+108    	; 0x13de <__stack+0xadf>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:655
				    PORTD &= ~(1<<PD4);
					BZ_Point = 1;
    1372:	70 91 dd 01 	lds	r23, 0x01DD	; 0x8001dd <time_Check>
    1376:	20 91 e7 01 	lds	r18, 0x01E7	; 0x8001e7 <timesetvalue>
    137a:	30 91 e8 01 	lds	r19, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
    137e:	2f 5f       	subi	r18, 0xFF	; 255
    1380:	3f 4f       	sbci	r19, 0xFF	; 255
    1382:	6c e0       	ldi	r22, 0x0C	; 12
    1384:	62 9f       	mul	r22, r18
    1386:	a0 01       	movw	r20, r0
    1388:	63 9f       	mul	r22, r19
    138a:	50 0d       	add	r21, r0
    138c:	11 24       	eor	r1, r1
    138e:	74 17       	cp	r23, r20
    1390:	15 06       	cpc	r1, r21
    1392:	0c f4       	brge	.+2      	; 0x1396 <__stack+0xa97>
    1394:	05 c2       	rjmp	.+1034   	; 0x17a0 <__stack+0xea1>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:657
					sys_mode = OFF;
					segment_mode = Appear_off;
    1396:	40 9a       	sbi	0x08, 0	; 8
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:658
				}
    1398:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <bz_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:659
				else if(time_Check < (timesetvalue + 1) * 12)
    139c:	85 b1       	in	r24, 0x05	; 5
    139e:	8f 6e       	ori	r24, 0xEF	; 239
    13a0:	85 b9       	out	0x05, r24	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:660
				{
    13a2:	5a 98       	cbi	0x0b, 2	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:661
					if(Tempertmp >= hightemper - 200)
    13a4:	5b 98       	cbi	0x0b, 3	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:662
					{
    13a6:	5c 98       	cbi	0x0b, 4	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:663
						if(++hightemper_Doing > N_Temperature_freq)
    13a8:	70 92 e6 01 	sts	0x01E6, r7	; 0x8001e6 <BZ_Point>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:664
						 {
    13ac:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <sys_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:665
							 hightemper_Doing = 0;
    13b0:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <segment_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:687
					++time_Check;
				}
			}	
		}
	if(sys_mode == OFF) PORTC |= (1<<LAMP_OUT);
	
    13b4:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <time_Doing>
    13b8:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <time_Doing+0x1>
    13bc:	01 96       	adiw	r24, 0x01	; 1
    13be:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <time_Doing+0x1>
    13c2:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <time_Doing>
    13c6:	8a 3a       	cpi	r24, 0xAA	; 170
    13c8:	9d 42       	sbci	r25, 0x2D	; 45
    13ca:	49 f4       	brne	.+18     	; 0x13de <__stack+0xadf>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:689
}

    13cc:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <time_Doing+0x1>
    13d0:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <time_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:690
void BZ_Control(void)
    13d4:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <time_Check>
    13d8:	8f 5f       	subi	r24, 0xFF	; 255
    13da:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <time_Check>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:694
{
	if(!(flag & FLAG_BZ_bm)) return;
	else flag &= ~(FLAG_BZ_bm);
	
    13de:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <sys_mode>
    13e2:	81 11       	cpse	r24, r1
    13e4:	01 c0       	rjmp	.+2      	; 0x13e8 <__stack+0xae9>
    13e6:	40 9a       	sbi	0x08, 0	; 8
fivesec_return():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:726
	if(segment_mode == Appear_HighTemper || segment_mode == Appear_LowTemper || segment_mode == Appear_Time)
		{
			if(++fivesec_tmp > N_5SEC) 
			{
				segment_mode = volt;
				fivesec_tmp = 0;
    13e8:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    13ec:	81 ff       	sbrs	r24, 1
    13ee:	1c c0       	rjmp	.+56     	; 0x1428 <__stack+0xb29>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:727
			}
    13f0:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    13f4:	8d 7f       	andi	r24, 0xFD	; 253
    13f6:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:729
		}
}
    13fa:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
    13fe:	83 30       	cpi	r24, 0x03	; 3
    1400:	41 f0       	breq	.+16     	; 0x1412 <__stack+0xb13>
    1402:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
    1406:	84 30       	cpi	r24, 0x04	; 4
    1408:	21 f0       	breq	.+8      	; 0x1412 <__stack+0xb13>
    140a:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <segment_mode>
    140e:	85 30       	cpi	r24, 0x05	; 5
    1410:	59 f4       	brne	.+22     	; 0x1428 <__stack+0xb29>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:731

void HandleTouchKeyInput(void)
    1412:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <fivesec_tmp>
    1416:	8f 5f       	subi	r24, 0xFF	; 255
    1418:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <fivesec_tmp>
    141c:	89 3c       	cpi	r24, 0xC9	; 201
    141e:	20 f0       	brcs	.+8      	; 0x1428 <__stack+0xb29>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:733
{
	//PWRSWITH
    1420:	70 92 f5 01 	sts	0x01F5, r7	; 0x8001f5 <segment_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:734
	if( flag & FLAG_PwrSwith_bm ) 
    1424:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <fivesec_tmp>
serialEventRun():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial.cpp:67
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	89 2b       	or	r24, r25
    142e:	09 f4       	brne	.+2      	; 0x1432 <__stack+0xb33>
    1430:	10 cb       	rjmp	.-2528   	; 0xa52 <__stack+0x153>
    1432:	0e 94 25 01 	call	0x24a	; 0x24a <Serial0_available()>
    1436:	88 23       	and	r24, r24
    1438:	09 f4       	brne	.+2      	; 0x143c <__stack+0xb3d>
    143a:	07 cb       	rjmp	.-2546   	; 0xa4a <__stack+0x14b>
    143c:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    1440:	04 cb       	rjmp	.-2552   	; 0xa4a <__stack+0x14b>
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:555
				tmpL /= 10;
				Set_7segment(2,tmpL % 10);
				_delay_ms(1);
				tmpL /= 10;
				Set_7segment(3,tmpL % 10);
				_delay_ms(1);
    1442:	b6 01       	movw	r22, r12
    1444:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
    1448:	4c 01       	movw	r8, r24
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:556
			}
    144a:	be 01       	movw	r22, r28
    144c:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
    1450:	5b 01       	movw	r10, r22
    1452:	bc 01       	movw	r22, r24
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
    145c:	8f e9       	ldi	r24, 0x9F	; 159
    145e:	9f e0       	ldi	r25, 0x0F	; 15
    1460:	01 97       	sbiw	r24, 0x01	; 1
    1462:	f1 f7       	brne	.-4      	; 0x1460 <__stack+0xb61>
    1464:	00 c0       	rjmp	.+0      	; 0x1466 <__stack+0xb67>
    1466:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:559
		}
	}
	
    1468:	c5 01       	movw	r24, r10
    146a:	be 01       	movw	r22, r28
    146c:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
    1470:	bc 01       	movw	r22, r24
    1472:	82 e0       	ldi	r24, 0x02	; 2
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
_delay_ms():
c:\users\dlcks\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
    147a:	ef e9       	ldi	r30, 0x9F	; 159
    147c:	ff e0       	ldi	r31, 0x0F	; 15
    147e:	31 97       	sbiw	r30, 0x01	; 1
    1480:	f1 f7       	brne	.-4      	; 0x147e <__stack+0xb7f>
    1482:	00 c0       	rjmp	.+0      	; 0x1484 <__stack+0xb85>
    1484:	00 00       	nop
loop():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:561
	if(segment_mode == Appear_Time)
	{
    1486:	c4 01       	movw	r24, r8
    1488:	b8 01       	movw	r22, r16
    148a:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:562
		unsigned char tmpT = timesetvalue + 1;
    148e:	83 e0       	ldi	r24, 0x03	; 3
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	0e 94 12 02 	call	0x424	; 0x424 <Set_7segment(int, int)>
    1496:	7f cc       	rjmp	.-1794   	; 0xd96 <__stack+0x497>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:585
	 {
		 PORTD &= ~(1<<PD2);
		 PORTD &= ~(1<<PD3);
		 PORTD &= ~(1<<PD4);
		 BZ_Point = 1;
		 bz_mode = BZOFF;
    1498:	2f e5       	ldi	r18, 0x5F	; 95
    149a:	e2 16       	cp	r14, r18
    149c:	f1 04       	cpc	r15, r1
    149e:	39 f4       	brne	.+14     	; 0x14ae <__stack+0xbaf>
    14a0:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <BZ_Point>
    14a4:	81 11       	cpse	r24, r1
    14a6:	14 cd       	rjmp	.-1496   	; 0xed0 <__stack+0x5d1>
    14a8:	70 92 f4 01 	sts	0x01F4, r7	; 0x8001f4 <bz_mode>
    14ac:	11 cd       	rjmp	.-1502   	; 0xed0 <__stack+0x5d1>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:587
		 sys_mode = OFF;
		 segment_mode = Appear_off;
    14ae:	8f e5       	ldi	r24, 0x5F	; 95
    14b0:	e8 16       	cp	r14, r24
    14b2:	f1 04       	cpc	r15, r1
    14b4:	0c f0       	brlt	.+2      	; 0x14b8 <__stack+0xbb9>
    14b6:	0c cd       	rjmp	.-1512   	; 0xed0 <__stack+0x5d1>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:589
		 PORTC |= (1<<LAMP_OUT);
	 }
    14b8:	5a 98       	cbi	0x0b, 2	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:590
	
    14ba:	5b 98       	cbi	0x0b, 3	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:591
	BZ_Control();
    14bc:	5c 98       	cbi	0x0b, 4	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:592
	HandleTouchKeyInput();
    14be:	70 92 e6 01 	sts	0x01E6, r7	; 0x8001e6 <BZ_Point>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:593
	DoingTime();
    14c2:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <bz_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:594
	fivesec_return();
    14c6:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <sys_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:595
  }
    14ca:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <segment_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:596

    14ce:	40 9a       	sbi	0x08, 0	; 8
    14d0:	ff cc       	rjmp	.-1538   	; 0xed0 <__stack+0x5d1>
BZ_Control():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:705
			if(BZ_Point == 0)
			{
				PORTB |= (1<<PB3); //bz
				if(++BZ_Doing > N_BZ_period)
				{
					PORTB &= ~(1<<PB3);
    14d2:	2b 98       	cbi	0x05, 3	; 5
    14d4:	0e cd       	rjmp	.-1508   	; 0xef2 <__stack+0x5f3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:708
					BZ_Point = 1;
					BZ_Doing = 0;
					bz_mode = BZOFF;
    14d6:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <BZ_Point>
    14da:	81 11       	cpse	r24, r1
    14dc:	0a cd       	rjmp	.-1516   	; 0xef2 <__stack+0x5f3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:710
				}
			}
    14de:	2b 9a       	sbi	0x05, 3	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:711
		
    14e0:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <BZ_Doing>
    14e4:	90 91 e0 01 	lds	r25, 0x01E0	; 0x8001e0 <BZ_Doing+0x1>
    14e8:	01 96       	adiw	r24, 0x01	; 1
    14ea:	90 93 e0 01 	sts	0x01E0, r25	; 0x8001e0 <BZ_Doing+0x1>
    14ee:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <BZ_Doing>
    14f2:	85 36       	cpi	r24, 0x65	; 101
    14f4:	91 05       	cpc	r25, r1
    14f6:	08 f4       	brcc	.+2      	; 0x14fa <__stack+0xbfb>
    14f8:	fc cc       	rjmp	.-1544   	; 0xef2 <__stack+0x5f3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:713
		break;
	}
    14fa:	2b 98       	cbi	0x05, 3	; 5
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:714
}
    14fc:	20 93 e6 01 	sts	0x01E6, r18	; 0x8001e6 <BZ_Point>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:715

    1500:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <BZ_Doing+0x1>
    1504:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <BZ_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:716
void fivesec_return(void)
    1508:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <bz_mode>
    150c:	f2 cc       	rjmp	.-1564   	; 0xef2 <__stack+0x5f3>
HandleTouchKeyInput():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:771
										PORTC |= (1<<LAMP_OUT);
										segmentdo = 1;
										PORTB |= B11101111;
										
										/*
										PORTD &= ~(1<<PD2);
    150e:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <BZ_Point>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:772
										PORTD &= ~(1<<PD3);
    1512:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <segment_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:773
										PORTD &= ~(1<<PD4);
    1516:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <bz_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:774
										*/
    151a:	40 9a       	sbi	0x08, 0	; 8
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:775
										break;
    151c:	70 92 00 01 	sts	0x0100, r7	; 0x800100 <__data_start>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:776
									}
    1520:	85 b1       	in	r24, 0x05	; 5
    1522:	8f 6e       	ori	r24, 0xEF	; 239
    1524:	85 b9       	out	0x05, r24	; 5
    1526:	2a cd       	rjmp	.-1452   	; 0xf7c <__stack+0x67d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:790
				}
			}
			else
			{
				touch_prev = touch_curr;
				touch_chat = 0;
    1528:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    152c:	8f 7d       	andi	r24, 0xDF	; 223
    152e:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
    1532:	24 cd       	rjmp	.-1464   	; 0xf7c <__stack+0x67d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:797
			}
	}
	
	//MODESWITH
	if( flag & FLAG_ModeSwith_bm )
	{
    1534:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <touch_curr>
    1538:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <touch_prev>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:798
		flag &= ~FLAG_ModeSwith_bm;
    153c:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <touch_chat>
    1540:	1d cd       	rjmp	.-1478   	; 0xf7c <__stack+0x67d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:823
								flag &= ~FLAG_Modename_bm;
								PORTD &= ~(1<<PD2);
								PORTD &= ~(1<<PD3);
								PORTD &= ~(1<<PD4);
							break;
							
    1542:	84 30       	cpi	r24, 0x04	; 4
    1544:	81 f0       	breq	.+32     	; 0x1566 <__stack+0xc67>
    1546:	85 30       	cpi	r24, 0x05	; 5
    1548:	09 f0       	breq	.+2      	; 0x154c <__stack+0xc4d>
    154a:	59 cd       	rjmp	.-1358   	; 0xffe <__stack+0x6ff>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:856
								PORTD &= ~(1<<PD3);
								PORTD &= ~(1<<PD4);
							break;
							
						}
						
    154c:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    1550:	8f 7b       	andi	r24, 0xBF	; 191
    1552:	0c c0       	rjmp	.+24     	; 0x156c <__stack+0xc6d>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:833
								PORTD &= ~(1<<PD4);
							break;
							
							case Appear_HighTemper:
								flag |= FLAG_Modename_bm;
								fivesec_tmp = 0;
    1554:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    1558:	8f 7b       	andi	r24, 0xBF	; 191
    155a:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:858
							break;
							
						}
						
					}
				}
    155e:	5a 98       	cbi	0x0b, 2	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:859
				
    1560:	5b 98       	cbi	0x0b, 3	; 11
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:860
				else
    1562:	5c 98       	cbi	0x0b, 4	; 11
    1564:	4c cd       	rjmp	.-1384   	; 0xffe <__stack+0x6ff>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:848
								PORTD &= ~(1<<PD3);
								PORTD &= ~(1<<PD4);
							break;
							
							case Appear_Time:
								flag &= ~FLAG_Modename_bm;
    1566:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <flag>
    156a:	80 64       	ori	r24, 0x40	; 64
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:856
								PORTD &= ~(1<<PD3);
								PORTD &= ~(1<<PD4);
							break;
							
						}
						
    156c:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <flag>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:857
					}
    1570:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <fivesec_tmp>
    1574:	f4 cf       	rjmp	.-24     	; 0x155e <__stack+0xc5f>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:870
			}
		}
		else
		{
			mode_touch_prev = mode_touch_curr;
			mode_touch_chat = 0;
    1576:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    157a:	8f 7e       	andi	r24, 0xEF	; 239
    157c:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
    1580:	3e cd       	rjmp	.-1412   	; 0xffe <__stack+0x6ff>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:877
		}
	}
	
	//UPSWITH
	if( flag & FLAG_UpSwitch_bm )
	{
    1582:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <mode_touch_curr>
    1586:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <mode_touch_prev>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:878
		flag &= ~FLAG_UpSwitch_bm;
    158a:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <mode_touch_chat>
    158e:	37 cd       	rjmp	.-1426   	; 0xffe <__stack+0x6ff>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:919
							eeprom_update_word(HighTaddr,hightemper);
							break;
							
							case Appear_LowTemper:
							fivesec_tmp = 0;
							lowtemper = eeprom_read_word(lowTaddr);
    1590:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <hightemper>
    1594:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <hightemper+0x1>
    1598:	01 96       	adiw	r24, 0x01	; 1
    159a:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
    159e:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:920
							if(lowtemper <= 190) lowtemper = lowtemper + 10;
    15a2:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <hightemper>
    15a6:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <hightemper+0x1>
    15aa:	61 e2       	ldi	r22, 0x21	; 33
    15ac:	73 e0       	ldi	r23, 0x03	; 3
    15ae:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
    15b2:	80 cd       	rjmp	.-1280   	; 0x10b4 <__stack+0x7b5>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:926
							else
							{
								++lowtemper;
								lowtemper = lowtemper % 801;
							}
							eeprom_update_word(lowTaddr,lowtemper);
    15b4:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <fivesec_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:927
							break;
    15b8:	8a e0       	ldi	r24, 0x0A	; 10
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    15c0:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
    15c4:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:928
							
    15c8:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <lowtemper>
    15cc:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <lowtemper+0x1>
    15d0:	8f 3b       	cpi	r24, 0xBF	; 191
    15d2:	91 05       	cpc	r25, r1
    15d4:	84 f4       	brge	.+32     	; 0x15f6 <__stack+0xcf7>
    15d6:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <lowtemper>
    15da:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <lowtemper+0x1>
    15de:	0a 96       	adiw	r24, 0x0a	; 10
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:932
							case Appear_Time:
							fivesec_tmp = 0;
							time_Check = 0; 
							Time_tmp = 0;
    15e0:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
    15e4:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:934
							time_Doing = 0;
							timesetvalue = eeprom_read_word(timeTaddr);
    15e8:	60 91 e9 01 	lds	r22, 0x01E9	; 0x8001e9 <lowtemper>
    15ec:	70 91 ea 01 	lds	r23, 0x01EA	; 0x8001ea <lowtemper+0x1>
    15f0:	8a e0       	ldi	r24, 0x0A	; 10
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	69 cd       	rjmp	.-1326   	; 0x10c8 <__stack+0x7c9>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:931
							eeprom_update_word(lowTaddr,lowtemper);
							break;
							
							case Appear_Time:
							fivesec_tmp = 0;
							time_Check = 0; 
    15f6:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <lowtemper>
    15fa:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <lowtemper+0x1>
    15fe:	01 96       	adiw	r24, 0x01	; 1
    1600:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
    1604:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:932
							Time_tmp = 0;
    1608:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <lowtemper>
    160c:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <lowtemper+0x1>
    1610:	61 e2       	ldi	r22, 0x21	; 33
    1612:	73 e0       	ldi	r23, 0x03	; 3
    1614:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
    1618:	e3 cf       	rjmp	.-58     	; 0x15e0 <__stack+0xce1>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:938
							time_Doing = 0;
							timesetvalue = eeprom_read_word(timeTaddr);
							++timesetvalue;
							timesetvalue = timesetvalue % 12;
							eeprom_update_word(timeTaddr,timesetvalue);
							break;
    161a:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <fivesec_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:939
							
    161e:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <time_Check>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:940
						}
    1622:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <Time_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:941
						
    1626:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <time_Doing+0x1>
    162a:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <time_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:942
					}
    162e:	84 e1       	ldi	r24, 0x14	; 20
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    1636:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <timesetvalue+0x1>
    163a:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:943
				}
    163e:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <timesetvalue>
    1642:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
    1646:	01 96       	adiw	r24, 0x01	; 1
    1648:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <timesetvalue+0x1>
    164c:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:944
				
    1650:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <timesetvalue>
    1654:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
    1658:	6c e0       	ldi	r22, 0x0C	; 12
    165a:	70 e0       	ldi	r23, 0x00	; 0
    165c:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__divmodhi4>
    1660:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <timesetvalue+0x1>
    1664:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:945
				else
    1668:	60 91 e7 01 	lds	r22, 0x01E7	; 0x8001e7 <timesetvalue>
    166c:	70 91 e8 01 	lds	r23, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
    1670:	84 e1       	ldi	r24, 0x14	; 20
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	29 cd       	rjmp	.-1454   	; 0x10c8 <__stack+0x7c9>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:955
			}
		}
		else
		{
			up_touch_prev = up_touch_curr;
			up_touch_chat = 0;
    1676:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    167a:	8b 7f       	andi	r24, 0xFB	; 251
    167c:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
    1680:	25 cd       	rjmp	.-1462   	; 0x10cc <__stack+0x7cd>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:962
		}
	}
	
	
	//DOWNSWITH
	if( flag & FLAG_DownSwith_bm )
    1682:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <up_touch_curr>
    1686:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <up_touch_prev>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:963
	{
    168a:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <up_touch_chat>
    168e:	1e cd       	rjmp	.-1476   	; 0x10cc <__stack+0x7cd>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1007
							
							case Appear_LowTemper:
							fivesec_tmp = 0;
							lowtemper = eeprom_read_word(lowTaddr);
							if(lowtemper <= 200)
							{
    1690:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <hightemper>
    1694:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <hightemper+0x1>
    1698:	01 97       	sbiw	r24, 0x01	; 1
    169a:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <hightemper+0x1>
    169e:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <hightemper>
    16a2:	7f cd       	rjmp	.-1282   	; 0x11a2 <__stack+0x8a3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1012
								lowtemper =	lowtemper - 10;
								if(lowtemper < 0) lowtemper = 800;
							}
							else --lowtemper;
							eeprom_update_word(lowTaddr,lowtemper);
    16a4:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <fivesec_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1013
							break;
    16a8:	8a e0       	ldi	r24, 0x0A	; 10
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    16b0:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
    16b4:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1014
							
    16b8:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <lowtemper>
    16bc:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <lowtemper+0x1>
    16c0:	89 3c       	cpi	r24, 0xC9	; 201
    16c2:	91 05       	cpc	r25, r1
    16c4:	e4 f4       	brge	.+56     	; 0x16fe <__stack+0xdff>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1016
							case Appear_Time:
							fivesec_tmp = 0;
    16c6:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <lowtemper>
    16ca:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <lowtemper+0x1>
    16ce:	0a 97       	sbiw	r24, 0x0a	; 10
    16d0:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
    16d4:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1017
							time_Check = 0; 
    16d8:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <lowtemper>
    16dc:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <lowtemper+0x1>
    16e0:	97 ff       	sbrs	r25, 7
    16e2:	06 c0       	rjmp	.+12     	; 0x16f0 <__stack+0xdf1>
    16e4:	80 e2       	ldi	r24, 0x20	; 32
    16e6:	93 e0       	ldi	r25, 0x03	; 3
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1019
							Time_tmp = 0;
							time_Doing = 0;
    16e8:	90 93 ea 01 	sts	0x01EA, r25	; 0x8001ea <lowtemper+0x1>
    16ec:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <lowtemper>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1020
							timesetvalue = eeprom_read_word(timeTaddr);
    16f0:	60 91 e9 01 	lds	r22, 0x01E9	; 0x8001e9 <lowtemper>
    16f4:	70 91 ea 01 	lds	r23, 0x01EA	; 0x8001ea <lowtemper+0x1>
    16f8:	8a e0       	ldi	r24, 0x0A	; 10
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	58 cd       	rjmp	.-1360   	; 0x11ae <__stack+0x8af>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1019
							
							case Appear_Time:
							fivesec_tmp = 0;
							time_Check = 0; 
							Time_tmp = 0;
							time_Doing = 0;
    16fe:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <lowtemper>
    1702:	90 91 ea 01 	lds	r25, 0x01EA	; 0x8001ea <lowtemper+0x1>
    1706:	01 97       	sbiw	r24, 0x01	; 1
    1708:	ef cf       	rjmp	.-34     	; 0x16e8 <__stack+0xde9>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1024
							timesetvalue = eeprom_read_word(timeTaddr);
							--timesetvalue;
							if(timesetvalue < 0) timesetvalue = 11;
							eeprom_update_word(timeTaddr,timesetvalue);
							break;
    170a:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <fivesec_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1025
							
    170e:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <time_Check>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1026
						}
    1712:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <Time_tmp>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1027
						
    1716:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <time_Doing+0x1>
    171a:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <time_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1028
					}
    171e:	84 e1       	ldi	r24, 0x14	; 20
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	0e 94 55 0c 	call	0x18aa	; 0x18aa <eeprom_read_word>
    1726:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <timesetvalue+0x1>
    172a:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1029
				}
    172e:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <timesetvalue>
    1732:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
    1736:	01 97       	sbiw	r24, 0x01	; 1
    1738:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <timesetvalue+0x1>
    173c:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1030
				
    1740:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <timesetvalue>
    1744:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
    1748:	97 ff       	sbrs	r25, 7
    174a:	06 c0       	rjmp	.+12     	; 0x1758 <__stack+0xe59>
    174c:	eb e0       	ldi	r30, 0x0B	; 11
    174e:	f0 e0       	ldi	r31, 0x00	; 0
    1750:	f0 93 e8 01 	sts	0x01E8, r31	; 0x8001e8 <timesetvalue+0x1>
    1754:	e0 93 e7 01 	sts	0x01E7, r30	; 0x8001e7 <timesetvalue>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1031
				else
    1758:	60 91 e7 01 	lds	r22, 0x01E7	; 0x8001e7 <timesetvalue>
    175c:	70 91 e8 01 	lds	r23, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
    1760:	84 e1       	ldi	r24, 0x14	; 20
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	24 cd       	rjmp	.-1464   	; 0x11ae <__stack+0x8af>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1041
			}
		}
		else
		{
			down_touch_prev = down_touch_curr;
			down_touch_chat = 0;
    1766:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <flag_Swith>
    176a:	87 7f       	andi	r24, 0xF7	; 247
    176c:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <flag_Swith>
    1770:	20 cd       	rjmp	.-1472   	; 0x11b2 <__stack+0x8b3>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1048
		}
	}
}

void timeisr()
{
    1772:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <down_touch_curr>
    1776:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <down_touch_prev>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:1049
	flag |= FLAG_BZ_bm;
    177a:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <down_touch_chat>
    177e:	19 cd       	rjmp	.-1486   	; 0x11b2 <__stack+0x8b3>
DoingTime():
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:646
				bz_mode = BZON;
				BZ_Doing = 0;
			}
			
			if(Time_tmp == 0)
			{
    1780:	9c 01       	movw	r18, r24
    1782:	28 55       	subi	r18, 0x58	; 88
    1784:	32 40       	sbci	r19, 0x02	; 2
    1786:	22 33       	cpi	r18, 0x32	; 50
    1788:	31 05       	cpc	r19, r1
    178a:	08 f0       	brcs	.+2      	; 0x178e <__stack+0xe8f>
    178c:	ee cd       	rjmp	.-1060   	; 0x136a <__stack+0xa6b>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:648
				if(time_Check >= (timesetvalue + 1) * 12) 
				{
    178e:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <BZ_Point>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:649
					PORTC |= (1<<LAMP_OUT);
    1792:	f0 92 f4 01 	sts	0x01F4, r15	; 0x8001f4 <bz_mode>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:650
					bz_mode = BZOFF;
    1796:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <BZ_Doing+0x1>
    179a:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <BZ_Doing>
    179e:	e5 cd       	rjmp	.-1078   	; 0x136a <__stack+0xa6b>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:667
					{
						if(++hightemper_Doing > N_Temperature_freq)
						 {
							 hightemper_Doing = 0;
							 PORTC |= (1<<LAMP_OUT); // off
						 }
    17a0:	70 91 dd 01 	lds	r23, 0x01DD	; 0x8001dd <time_Check>
    17a4:	20 91 e7 01 	lds	r18, 0x01E7	; 0x8001e7 <timesetvalue>
    17a8:	30 91 e8 01 	lds	r19, 0x01E8	; 0x8001e8 <timesetvalue+0x1>
    17ac:	2f 5f       	subi	r18, 0xFF	; 255
    17ae:	3f 4f       	sbci	r19, 0xFF	; 255
    17b0:	62 9f       	mul	r22, r18
    17b2:	a0 01       	movw	r20, r0
    17b4:	63 9f       	mul	r22, r19
    17b6:	50 0d       	add	r21, r0
    17b8:	11 24       	eor	r1, r1
    17ba:	74 17       	cp	r23, r20
    17bc:	15 06       	cpc	r1, r21
    17be:	0c f0       	brlt	.+2      	; 0x17c2 <__stack+0xec3>
    17c0:	f9 cd       	rjmp	.-1038   	; 0x13b4 <__stack+0xab5>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:669
					}
					else if(Tempertmp <= lowtemper - 200) 
    17c2:	20 91 eb 01 	lds	r18, 0x01EB	; 0x8001eb <hightemper>
    17c6:	30 91 ec 01 	lds	r19, 0x01EC	; 0x8001ec <hightemper+0x1>
    17ca:	28 5c       	subi	r18, 0xC8	; 200
    17cc:	31 09       	sbc	r19, r1
    17ce:	82 17       	cp	r24, r18
    17d0:	93 07       	cpc	r25, r19
    17d2:	94 f0       	brlt	.+36     	; 0x17f8 <__stack+0xef9>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:671
					{
						if(++lowtemper_Doing > N_Temperature_freq)
    17d4:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <hightemper_Doing>
    17d8:	90 91 dc 01 	lds	r25, 0x01DC	; 0x8001dc <hightemper_Doing+0x1>
    17dc:	01 96       	adiw	r24, 0x01	; 1
    17de:	90 93 dc 01 	sts	0x01DC, r25	; 0x8001dc <hightemper_Doing+0x1>
    17e2:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <hightemper_Doing>
    17e6:	4f 97       	sbiw	r24, 0x1f	; 31
    17e8:	08 f4       	brcc	.+2      	; 0x17ec <__stack+0xeed>
    17ea:	e4 cd       	rjmp	.-1080   	; 0x13b4 <__stack+0xab5>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:673
						{
							lowtemper_Doing = 0;
    17ec:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <hightemper_Doing+0x1>
    17f0:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <hightemper_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:674
							 if(Vo != 0) PORTC &= ~(1<<LAMP_OUT);// on
    17f4:	40 9a       	sbi	0x08, 0	; 8
    17f6:	de cd       	rjmp	.-1092   	; 0x13b4 <__stack+0xab5>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:677
						}
					}
				}
    17f8:	20 91 e9 01 	lds	r18, 0x01E9	; 0x8001e9 <lowtemper>
    17fc:	30 91 ea 01 	lds	r19, 0x01EA	; 0x8001ea <lowtemper+0x1>
    1800:	27 5c       	subi	r18, 0xC7	; 199
    1802:	31 09       	sbc	r19, r1
    1804:	82 17       	cp	r24, r18
    1806:	93 07       	cpc	r25, r19
    1808:	0c f0       	brlt	.+2      	; 0x180c <__stack+0xf0d>
    180a:	d4 cd       	rjmp	.-1112   	; 0x13b4 <__stack+0xab5>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:679
			
				if(++time_Doing == N_5MIN)
    180c:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <lowtemper_Doing>
    1810:	90 91 da 01 	lds	r25, 0x01DA	; 0x8001da <lowtemper_Doing+0x1>
    1814:	01 96       	adiw	r24, 0x01	; 1
    1816:	90 93 da 01 	sts	0x01DA, r25	; 0x8001da <lowtemper_Doing+0x1>
    181a:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <lowtemper_Doing>
    181e:	4f 97       	sbiw	r24, 0x1f	; 31
    1820:	08 f4       	brcc	.+2      	; 0x1824 <__stack+0xf25>
    1822:	c8 cd       	rjmp	.-1136   	; 0x13b4 <__stack+0xab5>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:681
				{
					time_Doing = 0;
    1824:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <lowtemper_Doing+0x1>
    1828:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <lowtemper_Doing>
C:\Users\dlcks\Documents\Arduino\test123/test123.ino:682
					++time_Check;
    182c:	60 91 fe 01 	lds	r22, 0x01FE	; 0x8001fe <Vo>
    1830:	70 91 ff 01 	lds	r23, 0x01FF	; 0x8001ff <Vo+0x1>
    1834:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Vo+0x2>
    1838:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Vo+0x3>
    183c:	20 e0       	ldi	r18, 0x00	; 0
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	a9 01       	movw	r20, r18
    1842:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__cmpsf2>
    1846:	88 23       	and	r24, r24
    1848:	09 f4       	brne	.+2      	; 0x184c <__stack+0xf4d>
    184a:	b4 cd       	rjmp	.-1176   	; 0x13b4 <__stack+0xab5>
    184c:	40 98       	cbi	0x08, 0	; 8
    184e:	b2 cd       	rjmp	.-1180   	; 0x13b4 <__stack+0xab5>

00001850 <_GLOBAL__sub_I___vector_18>:
_ZN5PrintC2Ev():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/Print.h:46
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    1850:	e4 e2       	ldi	r30, 0x24	; 36
    1852:	f1 e0       	ldi	r31, 0x01	; 1
    1854:	13 82       	std	Z+3, r1	; 0x03
    1856:	12 82       	std	Z+2, r1	; 0x02
_ZN6StreamC2Ev():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/Stream.h:63
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    1858:	88 ee       	ldi	r24, 0xE8	; 232
    185a:	93 e0       	ldi	r25, 0x03	; 3
    185c:	a0 e0       	ldi	r26, 0x00	; 0
    185e:	b0 e0       	ldi	r27, 0x00	; 0
    1860:	84 83       	std	Z+4, r24	; 0x04
    1862:	95 83       	std	Z+5, r25	; 0x05
    1864:	a6 83       	std	Z+6, r26	; 0x06
    1866:	b7 83       	std	Z+7, r27	; 0x07
_ZN14HardwareSerialC2EPVhS1_S1_S1_S1_S1_():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial_private.h:95
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    1868:	85 e0       	ldi	r24, 0x05	; 5
    186a:	91 e0       	ldi	r25, 0x01	; 1
    186c:	91 83       	std	Z+1, r25	; 0x01
    186e:	80 83       	st	Z, r24
    1870:	85 ec       	ldi	r24, 0xC5	; 197
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	95 87       	std	Z+13, r25	; 0x0d
    1876:	84 87       	std	Z+12, r24	; 0x0c
    1878:	84 ec       	ldi	r24, 0xC4	; 196
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	97 87       	std	Z+15, r25	; 0x0f
    187e:	86 87       	std	Z+14, r24	; 0x0e
    1880:	80 ec       	ldi	r24, 0xC0	; 192
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	91 8b       	std	Z+17, r25	; 0x11
    1886:	80 8b       	std	Z+16, r24	; 0x10
    1888:	81 ec       	ldi	r24, 0xC1	; 193
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	93 8b       	std	Z+19, r25	; 0x13
    188e:	82 8b       	std	Z+18, r24	; 0x12
    1890:	82 ec       	ldi	r24, 0xC2	; 194
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	95 8b       	std	Z+21, r25	; 0x15
    1896:	84 8b       	std	Z+20, r24	; 0x14
    1898:	86 ec       	ldi	r24, 0xC6	; 198
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	97 8b       	std	Z+23, r25	; 0x17
    189e:	86 8b       	std	Z+22, r24	; 0x16
    18a0:	11 8e       	std	Z+25, r1	; 0x19
    18a2:	12 8e       	std	Z+26, r1	; 0x1a
    18a4:	13 8e       	std	Z+27, r1	; 0x1b
    18a6:	14 8e       	std	Z+28, r1	; 0x1c
_GLOBAL__sub_I___vector_18():
c:\arduino-1.8.19-windows\arduino-1.8.19\hardware\arduino\avr\cores\arduino/HardwareSerial0.cpp:77

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
}
    18a8:	08 95       	ret

000018aa <eeprom_read_word>:
eeprom_read_word():
    18aa:	a8 e1       	ldi	r26, 0x18	; 24
    18ac:	b0 e0       	ldi	r27, 0x00	; 0
    18ae:	42 e0       	ldi	r20, 0x02	; 2
    18b0:	50 e0       	ldi	r21, 0x00	; 0
    18b2:	0c 94 68 0c 	jmp	0x18d0	; 0x18d0 <eeprom_read_blraw>

000018b6 <eeprom_update_word>:
eeprom_update_word():
    18b6:	01 96       	adiw	r24, 0x01	; 1
    18b8:	27 2f       	mov	r18, r23
    18ba:	0e 94 77 0c 	call	0x18ee	; 0x18ee <eeprom_update_r18>
    18be:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <eeprom_update_byte>

000018c2 <eeprom_write_word>:
eeprom_write_word():
    18c2:	0e 94 88 0c 	call	0x1910	; 0x1910 <eeprom_write_byte>
    18c6:	27 2f       	mov	r18, r23
    18c8:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <eeprom_write_r18>

000018cc <eeprom_read_block>:
eeprom_read_block():
    18cc:	dc 01       	movw	r26, r24
    18ce:	cb 01       	movw	r24, r22

000018d0 <eeprom_read_blraw>:
    18d0:	fc 01       	movw	r30, r24
    18d2:	f9 99       	sbic	0x1f, 1	; 31
    18d4:	fe cf       	rjmp	.-4      	; 0x18d2 <eeprom_read_blraw+0x2>
    18d6:	06 c0       	rjmp	.+12     	; 0x18e4 <eeprom_read_blraw+0x14>
    18d8:	f2 bd       	out	0x22, r31	; 34
    18da:	e1 bd       	out	0x21, r30	; 33
    18dc:	f8 9a       	sbi	0x1f, 0	; 31
    18de:	31 96       	adiw	r30, 0x01	; 1
    18e0:	00 b4       	in	r0, 0x20	; 32
    18e2:	0d 92       	st	X+, r0
    18e4:	41 50       	subi	r20, 0x01	; 1
    18e6:	50 40       	sbci	r21, 0x00	; 0
    18e8:	b8 f7       	brcc	.-18     	; 0x18d8 <eeprom_read_blraw+0x8>
    18ea:	08 95       	ret

000018ec <eeprom_update_byte>:
eeprom_update_byte():
    18ec:	26 2f       	mov	r18, r22

000018ee <eeprom_update_r18>:
    18ee:	f9 99       	sbic	0x1f, 1	; 31
    18f0:	fe cf       	rjmp	.-4      	; 0x18ee <eeprom_update_r18>
    18f2:	92 bd       	out	0x22, r25	; 34
    18f4:	81 bd       	out	0x21, r24	; 33
    18f6:	f8 9a       	sbi	0x1f, 0	; 31
    18f8:	01 97       	sbiw	r24, 0x01	; 1
    18fa:	00 b4       	in	r0, 0x20	; 32
    18fc:	02 16       	cp	r0, r18
    18fe:	39 f0       	breq	.+14     	; 0x190e <eeprom_update_r18+0x20>
    1900:	1f ba       	out	0x1f, r1	; 31
    1902:	20 bd       	out	0x20, r18	; 32
    1904:	0f b6       	in	r0, 0x3f	; 63
    1906:	f8 94       	cli
    1908:	fa 9a       	sbi	0x1f, 2	; 31
    190a:	f9 9a       	sbi	0x1f, 1	; 31
    190c:	0f be       	out	0x3f, r0	; 63
    190e:	08 95       	ret

00001910 <eeprom_write_byte>:
eeprom_write_byte():
    1910:	26 2f       	mov	r18, r22

00001912 <eeprom_write_r18>:
    1912:	f9 99       	sbic	0x1f, 1	; 31
    1914:	fe cf       	rjmp	.-4      	; 0x1912 <eeprom_write_r18>
    1916:	1f ba       	out	0x1f, r1	; 31
    1918:	92 bd       	out	0x22, r25	; 34
    191a:	81 bd       	out	0x21, r24	; 33
    191c:	20 bd       	out	0x20, r18	; 32
    191e:	0f b6       	in	r0, 0x3f	; 63
    1920:	f8 94       	cli
    1922:	fa 9a       	sbi	0x1f, 2	; 31
    1924:	f9 9a       	sbi	0x1f, 1	; 31
    1926:	0f be       	out	0x3f, r0	; 63
    1928:	01 96       	adiw	r24, 0x01	; 1
    192a:	08 95       	ret

0000192c <__subsf3>:
__subsf3():
    192c:	50 58       	subi	r21, 0x80	; 128

0000192e <__addsf3>:
    192e:	bb 27       	eor	r27, r27
    1930:	aa 27       	eor	r26, r26
    1932:	0e 94 ae 0c 	call	0x195c	; 0x195c <__addsf3x>
    1936:	0c 94 28 0e 	jmp	0x1c50	; 0x1c50 <__fp_round>
__addsf3():
    193a:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__fp_pscA>
    193e:	38 f0       	brcs	.+14     	; 0x194e <__addsf3+0x20>
    1940:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__fp_pscB>
    1944:	20 f0       	brcs	.+8      	; 0x194e <__addsf3+0x20>
    1946:	39 f4       	brne	.+14     	; 0x1956 <__addsf3+0x28>
    1948:	9f 3f       	cpi	r25, 0xFF	; 255
    194a:	19 f4       	brne	.+6      	; 0x1952 <__addsf3+0x24>
    194c:	26 f4       	brtc	.+8      	; 0x1956 <__addsf3+0x28>
    194e:	0c 94 17 0e 	jmp	0x1c2e	; 0x1c2e <__fp_nan>
    1952:	0e f4       	brtc	.+2      	; 0x1956 <__addsf3+0x28>
    1954:	e0 95       	com	r30
    1956:	e7 fb       	bst	r30, 7
    1958:	0c 94 11 0e 	jmp	0x1c22	; 0x1c22 <__fp_inf>

0000195c <__addsf3x>:
__addsf3x():
    195c:	e9 2f       	mov	r30, r25
    195e:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <__fp_split3>
    1962:	58 f3       	brcs	.-42     	; 0x193a <__addsf3+0xc>
    1964:	ba 17       	cp	r27, r26
    1966:	62 07       	cpc	r22, r18
    1968:	73 07       	cpc	r23, r19
    196a:	84 07       	cpc	r24, r20
    196c:	95 07       	cpc	r25, r21
    196e:	20 f0       	brcs	.+8      	; 0x1978 <__addsf3x+0x1c>
    1970:	79 f4       	brne	.+30     	; 0x1990 <__addsf3x+0x34>
    1972:	a6 f5       	brtc	.+104    	; 0x19dc <__addsf3x+0x80>
    1974:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_zero>
    1978:	0e f4       	brtc	.+2      	; 0x197c <__addsf3x+0x20>
    197a:	e0 95       	com	r30
    197c:	0b 2e       	mov	r0, r27
    197e:	ba 2f       	mov	r27, r26
    1980:	a0 2d       	mov	r26, r0
    1982:	0b 01       	movw	r0, r22
    1984:	b9 01       	movw	r22, r18
    1986:	90 01       	movw	r18, r0
    1988:	0c 01       	movw	r0, r24
    198a:	ca 01       	movw	r24, r20
    198c:	a0 01       	movw	r20, r0
    198e:	11 24       	eor	r1, r1
    1990:	ff 27       	eor	r31, r31
    1992:	59 1b       	sub	r21, r25
    1994:	99 f0       	breq	.+38     	; 0x19bc <__addsf3x+0x60>
    1996:	59 3f       	cpi	r21, 0xF9	; 249
    1998:	50 f4       	brcc	.+20     	; 0x19ae <__addsf3x+0x52>
    199a:	50 3e       	cpi	r21, 0xE0	; 224
    199c:	68 f1       	brcs	.+90     	; 0x19f8 <__addsf3x+0x9c>
    199e:	1a 16       	cp	r1, r26
    19a0:	f0 40       	sbci	r31, 0x00	; 0
    19a2:	a2 2f       	mov	r26, r18
    19a4:	23 2f       	mov	r18, r19
    19a6:	34 2f       	mov	r19, r20
    19a8:	44 27       	eor	r20, r20
    19aa:	58 5f       	subi	r21, 0xF8	; 248
    19ac:	f3 cf       	rjmp	.-26     	; 0x1994 <__addsf3x+0x38>
    19ae:	46 95       	lsr	r20
    19b0:	37 95       	ror	r19
    19b2:	27 95       	ror	r18
    19b4:	a7 95       	ror	r26
    19b6:	f0 40       	sbci	r31, 0x00	; 0
    19b8:	53 95       	inc	r21
    19ba:	c9 f7       	brne	.-14     	; 0x19ae <__addsf3x+0x52>
    19bc:	7e f4       	brtc	.+30     	; 0x19dc <__addsf3x+0x80>
    19be:	1f 16       	cp	r1, r31
    19c0:	ba 0b       	sbc	r27, r26
    19c2:	62 0b       	sbc	r22, r18
    19c4:	73 0b       	sbc	r23, r19
    19c6:	84 0b       	sbc	r24, r20
    19c8:	ba f0       	brmi	.+46     	; 0x19f8 <__addsf3x+0x9c>
    19ca:	91 50       	subi	r25, 0x01	; 1
    19cc:	a1 f0       	breq	.+40     	; 0x19f6 <__addsf3x+0x9a>
    19ce:	ff 0f       	add	r31, r31
    19d0:	bb 1f       	adc	r27, r27
    19d2:	66 1f       	adc	r22, r22
    19d4:	77 1f       	adc	r23, r23
    19d6:	88 1f       	adc	r24, r24
    19d8:	c2 f7       	brpl	.-16     	; 0x19ca <__addsf3x+0x6e>
    19da:	0e c0       	rjmp	.+28     	; 0x19f8 <__addsf3x+0x9c>
    19dc:	ba 0f       	add	r27, r26
    19de:	62 1f       	adc	r22, r18
    19e0:	73 1f       	adc	r23, r19
    19e2:	84 1f       	adc	r24, r20
    19e4:	48 f4       	brcc	.+18     	; 0x19f8 <__addsf3x+0x9c>
    19e6:	87 95       	ror	r24
    19e8:	77 95       	ror	r23
    19ea:	67 95       	ror	r22
    19ec:	b7 95       	ror	r27
    19ee:	f7 95       	ror	r31
    19f0:	9e 3f       	cpi	r25, 0xFE	; 254
    19f2:	08 f0       	brcs	.+2      	; 0x19f6 <__addsf3x+0x9a>
    19f4:	b0 cf       	rjmp	.-160    	; 0x1956 <__addsf3+0x28>
    19f6:	93 95       	inc	r25
    19f8:	88 0f       	add	r24, r24
    19fa:	08 f0       	brcs	.+2      	; 0x19fe <__addsf3x+0xa2>
    19fc:	99 27       	eor	r25, r25
    19fe:	ee 0f       	add	r30, r30
    1a00:	97 95       	ror	r25
    1a02:	87 95       	ror	r24
    1a04:	08 95       	ret

00001a06 <__cmpsf2>:
    1a06:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fp_cmp>
    1a0a:	08 f4       	brcc	.+2      	; 0x1a0e <__cmpsf2+0x8>
    1a0c:	81 e0       	ldi	r24, 0x01	; 1
    1a0e:	08 95       	ret

00001a10 <__divsf3>:
    1a10:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <__divsf3x>
    1a14:	0c 94 28 0e 	jmp	0x1c50	; 0x1c50 <__fp_round>
    1a18:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__fp_pscB>
    1a1c:	58 f0       	brcs	.+22     	; 0x1a34 <__divsf3+0x24>
    1a1e:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__fp_pscA>
    1a22:	40 f0       	brcs	.+16     	; 0x1a34 <__divsf3+0x24>
    1a24:	29 f4       	brne	.+10     	; 0x1a30 <__divsf3+0x20>
    1a26:	5f 3f       	cpi	r21, 0xFF	; 255
__divsf3():
    1a28:	29 f0       	breq	.+10     	; 0x1a34 <__divsf3+0x24>
    1a2a:	0c 94 11 0e 	jmp	0x1c22	; 0x1c22 <__fp_inf>
    1a2e:	51 11       	cpse	r21, r1
    1a30:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__fp_szero>
    1a34:	0c 94 17 0e 	jmp	0x1c2e	; 0x1c2e <__fp_nan>

00001a38 <__divsf3x>:
__divsf3x():
    1a38:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <__fp_split3>
    1a3c:	68 f3       	brcs	.-38     	; 0x1a18 <__divsf3+0x8>

00001a3e <__divsf3_pse>:
    1a3e:	99 23       	and	r25, r25
    1a40:	b1 f3       	breq	.-20     	; 0x1a2e <__divsf3+0x1e>
    1a42:	55 23       	and	r21, r21
    1a44:	91 f3       	breq	.-28     	; 0x1a2a <__divsf3+0x1a>
    1a46:	95 1b       	sub	r25, r21
    1a48:	55 0b       	sbc	r21, r21
    1a4a:	bb 27       	eor	r27, r27
    1a4c:	aa 27       	eor	r26, r26
    1a4e:	62 17       	cp	r22, r18
    1a50:	73 07       	cpc	r23, r19
    1a52:	84 07       	cpc	r24, r20
    1a54:	38 f0       	brcs	.+14     	; 0x1a64 <__divsf3_pse+0x26>
    1a56:	9f 5f       	subi	r25, 0xFF	; 255
    1a58:	5f 4f       	sbci	r21, 0xFF	; 255
    1a5a:	22 0f       	add	r18, r18
    1a5c:	33 1f       	adc	r19, r19
    1a5e:	44 1f       	adc	r20, r20
    1a60:	aa 1f       	adc	r26, r26
    1a62:	a9 f3       	breq	.-22     	; 0x1a4e <__divsf3_pse+0x10>
    1a64:	35 d0       	rcall	.+106    	; 0x1ad0 <__divsf3_pse+0x92>
    1a66:	0e 2e       	mov	r0, r30
    1a68:	3a f0       	brmi	.+14     	; 0x1a78 <__divsf3_pse+0x3a>
    1a6a:	e0 e8       	ldi	r30, 0x80	; 128
    1a6c:	32 d0       	rcall	.+100    	; 0x1ad2 <__divsf3_pse+0x94>
    1a6e:	91 50       	subi	r25, 0x01	; 1
    1a70:	50 40       	sbci	r21, 0x00	; 0
    1a72:	e6 95       	lsr	r30
    1a74:	00 1c       	adc	r0, r0
    1a76:	ca f7       	brpl	.-14     	; 0x1a6a <__divsf3_pse+0x2c>
    1a78:	2b d0       	rcall	.+86     	; 0x1ad0 <__divsf3_pse+0x92>
    1a7a:	fe 2f       	mov	r31, r30
    1a7c:	29 d0       	rcall	.+82     	; 0x1ad0 <__divsf3_pse+0x92>
    1a7e:	66 0f       	add	r22, r22
    1a80:	77 1f       	adc	r23, r23
    1a82:	88 1f       	adc	r24, r24
    1a84:	bb 1f       	adc	r27, r27
    1a86:	26 17       	cp	r18, r22
    1a88:	37 07       	cpc	r19, r23
    1a8a:	48 07       	cpc	r20, r24
    1a8c:	ab 07       	cpc	r26, r27
    1a8e:	b0 e8       	ldi	r27, 0x80	; 128
    1a90:	09 f0       	breq	.+2      	; 0x1a94 <__divsf3_pse+0x56>
    1a92:	bb 0b       	sbc	r27, r27
    1a94:	80 2d       	mov	r24, r0
    1a96:	bf 01       	movw	r22, r30
    1a98:	ff 27       	eor	r31, r31
    1a9a:	93 58       	subi	r25, 0x83	; 131
    1a9c:	5f 4f       	sbci	r21, 0xFF	; 255
    1a9e:	3a f0       	brmi	.+14     	; 0x1aae <__divsf3_pse+0x70>
    1aa0:	9e 3f       	cpi	r25, 0xFE	; 254
    1aa2:	51 05       	cpc	r21, r1
    1aa4:	78 f0       	brcs	.+30     	; 0x1ac4 <__divsf3_pse+0x86>
    1aa6:	0c 94 11 0e 	jmp	0x1c22	; 0x1c22 <__fp_inf>
    1aaa:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__fp_szero>
    1aae:	5f 3f       	cpi	r21, 0xFF	; 255
    1ab0:	e4 f3       	brlt	.-8      	; 0x1aaa <__divsf3_pse+0x6c>
    1ab2:	98 3e       	cpi	r25, 0xE8	; 232
    1ab4:	d4 f3       	brlt	.-12     	; 0x1aaa <__divsf3_pse+0x6c>
    1ab6:	86 95       	lsr	r24
    1ab8:	77 95       	ror	r23
    1aba:	67 95       	ror	r22
    1abc:	b7 95       	ror	r27
    1abe:	f7 95       	ror	r31
    1ac0:	9f 5f       	subi	r25, 0xFF	; 255
    1ac2:	c9 f7       	brne	.-14     	; 0x1ab6 <__divsf3_pse+0x78>
    1ac4:	88 0f       	add	r24, r24
    1ac6:	91 1d       	adc	r25, r1
    1ac8:	96 95       	lsr	r25
    1aca:	87 95       	ror	r24
    1acc:	97 f9       	bld	r25, 7
    1ace:	08 95       	ret
    1ad0:	e1 e0       	ldi	r30, 0x01	; 1
    1ad2:	66 0f       	add	r22, r22
    1ad4:	77 1f       	adc	r23, r23
    1ad6:	88 1f       	adc	r24, r24
    1ad8:	bb 1f       	adc	r27, r27
    1ada:	62 17       	cp	r22, r18
    1adc:	73 07       	cpc	r23, r19
    1ade:	84 07       	cpc	r24, r20
    1ae0:	ba 07       	cpc	r27, r26
    1ae2:	20 f0       	brcs	.+8      	; 0x1aec <__divsf3_pse+0xae>
    1ae4:	62 1b       	sub	r22, r18
    1ae6:	73 0b       	sbc	r23, r19
    1ae8:	84 0b       	sbc	r24, r20
    1aea:	ba 0b       	sbc	r27, r26
    1aec:	ee 1f       	adc	r30, r30
    1aee:	88 f7       	brcc	.-30     	; 0x1ad2 <__divsf3_pse+0x94>
    1af0:	e0 95       	com	r30
    1af2:	08 95       	ret

00001af4 <__fixsfsi>:
    1af4:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <__fixunssfsi>
    1af8:	68 94       	set
    1afa:	b1 11       	cpse	r27, r1
    1afc:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__fp_szero>
    1b00:	08 95       	ret

00001b02 <__fixunssfsi>:
    1b02:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <__fp_splitA>
    1b06:	88 f0       	brcs	.+34     	; 0x1b2a <__fixunssfsi+0x28>
    1b08:	9f 57       	subi	r25, 0x7F	; 127
    1b0a:	98 f0       	brcs	.+38     	; 0x1b32 <__fixunssfsi+0x30>
    1b0c:	b9 2f       	mov	r27, r25
    1b0e:	99 27       	eor	r25, r25
    1b10:	b7 51       	subi	r27, 0x17	; 23
    1b12:	b0 f0       	brcs	.+44     	; 0x1b40 <__fixunssfsi+0x3e>
__fixunssfsi():
    1b14:	e1 f0       	breq	.+56     	; 0x1b4e <__fixunssfsi+0x4c>
    1b16:	66 0f       	add	r22, r22
    1b18:	77 1f       	adc	r23, r23
    1b1a:	88 1f       	adc	r24, r24
    1b1c:	99 1f       	adc	r25, r25
    1b1e:	1a f0       	brmi	.+6      	; 0x1b26 <__fixunssfsi+0x24>
    1b20:	ba 95       	dec	r27
    1b22:	c9 f7       	brne	.-14     	; 0x1b16 <__fixunssfsi+0x14>
    1b24:	14 c0       	rjmp	.+40     	; 0x1b4e <__fixunssfsi+0x4c>
    1b26:	b1 30       	cpi	r27, 0x01	; 1
    1b28:	91 f0       	breq	.+36     	; 0x1b4e <__fixunssfsi+0x4c>
    1b2a:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__fp_zero>
    1b2e:	b1 e0       	ldi	r27, 0x01	; 1
    1b30:	08 95       	ret
    1b32:	0c 94 5b 0e 	jmp	0x1cb6	; 0x1cb6 <__fp_zero>
    1b36:	67 2f       	mov	r22, r23
    1b38:	78 2f       	mov	r23, r24
    1b3a:	88 27       	eor	r24, r24
    1b3c:	b8 5f       	subi	r27, 0xF8	; 248
    1b3e:	39 f0       	breq	.+14     	; 0x1b4e <__fixunssfsi+0x4c>
    1b40:	b9 3f       	cpi	r27, 0xF9	; 249
    1b42:	cc f3       	brlt	.-14     	; 0x1b36 <__fixunssfsi+0x34>
    1b44:	86 95       	lsr	r24
    1b46:	77 95       	ror	r23
    1b48:	67 95       	ror	r22
    1b4a:	b3 95       	inc	r27
    1b4c:	d9 f7       	brne	.-10     	; 0x1b44 <__fixunssfsi+0x42>
    1b4e:	3e f4       	brtc	.+14     	; 0x1b5e <__fixunssfsi+0x5c>
    1b50:	90 95       	com	r25
    1b52:	80 95       	com	r24
    1b54:	70 95       	com	r23
    1b56:	61 95       	neg	r22
    1b58:	7f 4f       	sbci	r23, 0xFF	; 255
    1b5a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b5e:	08 95       	ret

00001b60 <__floatunsisf>:
__floatunsisf():
    1b60:	e8 94       	clt
    1b62:	09 c0       	rjmp	.+18     	; 0x1b76 <__floatsisf+0x12>

00001b64 <__floatsisf>:
    1b64:	97 fb       	bst	r25, 7
    1b66:	3e f4       	brtc	.+14     	; 0x1b76 <__floatsisf+0x12>
    1b68:	90 95       	com	r25
    1b6a:	80 95       	com	r24
    1b6c:	70 95       	com	r23
    1b6e:	61 95       	neg	r22
    1b70:	7f 4f       	sbci	r23, 0xFF	; 255
    1b72:	8f 4f       	sbci	r24, 0xFF	; 255
    1b74:	9f 4f       	sbci	r25, 0xFF	; 255
    1b76:	99 23       	and	r25, r25
    1b78:	a9 f0       	breq	.+42     	; 0x1ba4 <__floatsisf+0x40>
    1b7a:	f9 2f       	mov	r31, r25
    1b7c:	96 e9       	ldi	r25, 0x96	; 150
    1b7e:	bb 27       	eor	r27, r27
    1b80:	93 95       	inc	r25
    1b82:	f6 95       	lsr	r31
    1b84:	87 95       	ror	r24
    1b86:	77 95       	ror	r23
    1b88:	67 95       	ror	r22
    1b8a:	b7 95       	ror	r27
    1b8c:	f1 11       	cpse	r31, r1
    1b8e:	f8 cf       	rjmp	.-16     	; 0x1b80 <__floatsisf+0x1c>
    1b90:	fa f4       	brpl	.+62     	; 0x1bd0 <__floatsisf+0x6c>
    1b92:	bb 0f       	add	r27, r27
    1b94:	11 f4       	brne	.+4      	; 0x1b9a <__floatsisf+0x36>
    1b96:	60 ff       	sbrs	r22, 0
    1b98:	1b c0       	rjmp	.+54     	; 0x1bd0 <__floatsisf+0x6c>
    1b9a:	6f 5f       	subi	r22, 0xFF	; 255
    1b9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b9e:	8f 4f       	sbci	r24, 0xFF	; 255
    1ba0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba2:	16 c0       	rjmp	.+44     	; 0x1bd0 <__floatsisf+0x6c>
    1ba4:	88 23       	and	r24, r24
    1ba6:	11 f0       	breq	.+4      	; 0x1bac <__floatsisf+0x48>
    1ba8:	96 e9       	ldi	r25, 0x96	; 150
    1baa:	11 c0       	rjmp	.+34     	; 0x1bce <__floatsisf+0x6a>
    1bac:	77 23       	and	r23, r23
    1bae:	21 f0       	breq	.+8      	; 0x1bb8 <__floatsisf+0x54>
    1bb0:	9e e8       	ldi	r25, 0x8E	; 142
    1bb2:	87 2f       	mov	r24, r23
    1bb4:	76 2f       	mov	r23, r22
    1bb6:	05 c0       	rjmp	.+10     	; 0x1bc2 <__floatsisf+0x5e>
    1bb8:	66 23       	and	r22, r22
    1bba:	71 f0       	breq	.+28     	; 0x1bd8 <__floatsisf+0x74>
    1bbc:	96 e8       	ldi	r25, 0x86	; 134
    1bbe:	86 2f       	mov	r24, r22
    1bc0:	70 e0       	ldi	r23, 0x00	; 0
    1bc2:	60 e0       	ldi	r22, 0x00	; 0
    1bc4:	2a f0       	brmi	.+10     	; 0x1bd0 <__floatsisf+0x6c>
    1bc6:	9a 95       	dec	r25
    1bc8:	66 0f       	add	r22, r22
    1bca:	77 1f       	adc	r23, r23
    1bcc:	88 1f       	adc	r24, r24
    1bce:	da f7       	brpl	.-10     	; 0x1bc6 <__floatsisf+0x62>
    1bd0:	88 0f       	add	r24, r24
    1bd2:	96 95       	lsr	r25
    1bd4:	87 95       	ror	r24
    1bd6:	97 f9       	bld	r25, 7
    1bd8:	08 95       	ret

00001bda <__fp_cmp>:
__fp_cmp():
    1bda:	99 0f       	add	r25, r25
    1bdc:	00 08       	sbc	r0, r0
    1bde:	55 0f       	add	r21, r21
    1be0:	aa 0b       	sbc	r26, r26
    1be2:	e0 e8       	ldi	r30, 0x80	; 128
    1be4:	fe ef       	ldi	r31, 0xFE	; 254
    1be6:	16 16       	cp	r1, r22
    1be8:	17 06       	cpc	r1, r23
    1bea:	e8 07       	cpc	r30, r24
    1bec:	f9 07       	cpc	r31, r25
    1bee:	c0 f0       	brcs	.+48     	; 0x1c20 <__fp_cmp+0x46>
    1bf0:	12 16       	cp	r1, r18
    1bf2:	13 06       	cpc	r1, r19
    1bf4:	e4 07       	cpc	r30, r20
    1bf6:	f5 07       	cpc	r31, r21
    1bf8:	98 f0       	brcs	.+38     	; 0x1c20 <__fp_cmp+0x46>
    1bfa:	62 1b       	sub	r22, r18
    1bfc:	73 0b       	sbc	r23, r19
    1bfe:	84 0b       	sbc	r24, r20
    1c00:	95 0b       	sbc	r25, r21
    1c02:	39 f4       	brne	.+14     	; 0x1c12 <__fp_cmp+0x38>
    1c04:	0a 26       	eor	r0, r26
    1c06:	61 f0       	breq	.+24     	; 0x1c20 <__fp_cmp+0x46>
    1c08:	23 2b       	or	r18, r19
    1c0a:	24 2b       	or	r18, r20
    1c0c:	25 2b       	or	r18, r21
    1c0e:	21 f4       	brne	.+8      	; 0x1c18 <__fp_cmp+0x3e>
    1c10:	08 95       	ret
    1c12:	0a 26       	eor	r0, r26
    1c14:	09 f4       	brne	.+2      	; 0x1c18 <__fp_cmp+0x3e>
    1c16:	a1 40       	sbci	r26, 0x01	; 1
    1c18:	a6 95       	lsr	r26
    1c1a:	8f ef       	ldi	r24, 0xFF	; 255
    1c1c:	81 1d       	adc	r24, r1
    1c1e:	81 1d       	adc	r24, r1
    1c20:	08 95       	ret

00001c22 <__fp_inf>:
__fp_inf():
    1c22:	97 f9       	bld	r25, 7
    1c24:	9f 67       	ori	r25, 0x7F	; 127
    1c26:	80 e8       	ldi	r24, 0x80	; 128
    1c28:	70 e0       	ldi	r23, 0x00	; 0
    1c2a:	60 e0       	ldi	r22, 0x00	; 0
    1c2c:	08 95       	ret

00001c2e <__fp_nan>:
__fp_nan():
    1c2e:	9f ef       	ldi	r25, 0xFF	; 255
    1c30:	80 ec       	ldi	r24, 0xC0	; 192
    1c32:	08 95       	ret

00001c34 <__fp_pscA>:
__fp_pscA():
    1c34:	00 24       	eor	r0, r0
    1c36:	0a 94       	dec	r0
    1c38:	16 16       	cp	r1, r22
    1c3a:	17 06       	cpc	r1, r23
    1c3c:	18 06       	cpc	r1, r24
    1c3e:	09 06       	cpc	r0, r25
    1c40:	08 95       	ret

00001c42 <__fp_pscB>:
__fp_pscB():
    1c42:	00 24       	eor	r0, r0
    1c44:	0a 94       	dec	r0
    1c46:	12 16       	cp	r1, r18
    1c48:	13 06       	cpc	r1, r19
    1c4a:	14 06       	cpc	r1, r20
    1c4c:	05 06       	cpc	r0, r21
    1c4e:	08 95       	ret

00001c50 <__fp_round>:
__fp_round():
    1c50:	09 2e       	mov	r0, r25
    1c52:	03 94       	inc	r0
    1c54:	00 0c       	add	r0, r0
    1c56:	11 f4       	brne	.+4      	; 0x1c5c <__fp_round+0xc>
    1c58:	88 23       	and	r24, r24
    1c5a:	52 f0       	brmi	.+20     	; 0x1c70 <__fp_round+0x20>
    1c5c:	bb 0f       	add	r27, r27
    1c5e:	40 f4       	brcc	.+16     	; 0x1c70 <__fp_round+0x20>
    1c60:	bf 2b       	or	r27, r31
    1c62:	11 f4       	brne	.+4      	; 0x1c68 <__fp_round+0x18>
    1c64:	60 ff       	sbrs	r22, 0
    1c66:	04 c0       	rjmp	.+8      	; 0x1c70 <__fp_round+0x20>
    1c68:	6f 5f       	subi	r22, 0xFF	; 255
    1c6a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c6c:	8f 4f       	sbci	r24, 0xFF	; 255
    1c6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c70:	08 95       	ret

00001c72 <__fp_split3>:
__fp_split3():
    1c72:	57 fd       	sbrc	r21, 7
    1c74:	90 58       	subi	r25, 0x80	; 128
    1c76:	44 0f       	add	r20, r20
    1c78:	55 1f       	adc	r21, r21
    1c7a:	59 f0       	breq	.+22     	; 0x1c92 <__fp_splitA+0x10>
    1c7c:	5f 3f       	cpi	r21, 0xFF	; 255
    1c7e:	71 f0       	breq	.+28     	; 0x1c9c <__fp_splitA+0x1a>
    1c80:	47 95       	ror	r20

00001c82 <__fp_splitA>:
    1c82:	88 0f       	add	r24, r24
    1c84:	97 fb       	bst	r25, 7
    1c86:	99 1f       	adc	r25, r25
    1c88:	61 f0       	breq	.+24     	; 0x1ca2 <__fp_splitA+0x20>
    1c8a:	9f 3f       	cpi	r25, 0xFF	; 255
    1c8c:	79 f0       	breq	.+30     	; 0x1cac <__fp_splitA+0x2a>
    1c8e:	87 95       	ror	r24
    1c90:	08 95       	ret
    1c92:	12 16       	cp	r1, r18
    1c94:	13 06       	cpc	r1, r19
    1c96:	14 06       	cpc	r1, r20
    1c98:	55 1f       	adc	r21, r21
    1c9a:	f2 cf       	rjmp	.-28     	; 0x1c80 <__fp_split3+0xe>
    1c9c:	46 95       	lsr	r20
    1c9e:	f1 df       	rcall	.-30     	; 0x1c82 <__fp_splitA>
    1ca0:	08 c0       	rjmp	.+16     	; 0x1cb2 <__fp_splitA+0x30>
    1ca2:	16 16       	cp	r1, r22
    1ca4:	17 06       	cpc	r1, r23
    1ca6:	18 06       	cpc	r1, r24
    1ca8:	99 1f       	adc	r25, r25
    1caa:	f1 cf       	rjmp	.-30     	; 0x1c8e <__fp_splitA+0xc>
    1cac:	86 95       	lsr	r24
    1cae:	71 05       	cpc	r23, r1
    1cb0:	61 05       	cpc	r22, r1
    1cb2:	08 94       	sec
    1cb4:	08 95       	ret

00001cb6 <__fp_zero>:
__fp_zero():
    1cb6:	e8 94       	clt

00001cb8 <__fp_szero>:
    1cb8:	bb 27       	eor	r27, r27
    1cba:	66 27       	eor	r22, r22
    1cbc:	77 27       	eor	r23, r23
    1cbe:	cb 01       	movw	r24, r22
    1cc0:	97 f9       	bld	r25, 7
    1cc2:	08 95       	ret

00001cc4 <__gesf2>:
__gesf2():
    1cc4:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fp_cmp>
    1cc8:	08 f4       	brcc	.+2      	; 0x1ccc <__gesf2+0x8>
    1cca:	8f ef       	ldi	r24, 0xFF	; 255
    1ccc:	08 95       	ret
    1cce:	16 f0       	brts	.+4      	; 0x1cd4 <__gesf2+0x10>
    1cd0:	0c 94 24 0f 	jmp	0x1e48	; 0x1e48 <__fp_mpack>
    1cd4:	0c 94 17 0e 	jmp	0x1c2e	; 0x1c2e <__fp_nan>
    1cd8:	68 94       	set
    1cda:	0c 94 11 0e 	jmp	0x1c22	; 0x1c22 <__fp_inf>

00001cde <log>:
log():
    1cde:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <__fp_splitA>
    1ce2:	a8 f3       	brcs	.-22     	; 0x1cce <__gesf2+0xa>
    1ce4:	99 23       	and	r25, r25
    1ce6:	c1 f3       	breq	.-16     	; 0x1cd8 <__gesf2+0x14>
    1ce8:	ae f3       	brts	.-22     	; 0x1cd4 <__gesf2+0x10>
    1cea:	df 93       	push	r29
    1cec:	cf 93       	push	r28
    1cee:	1f 93       	push	r17
    1cf0:	0f 93       	push	r16
    1cf2:	ff 92       	push	r15
    1cf4:	c9 2f       	mov	r28, r25
    1cf6:	dd 27       	eor	r29, r29
    1cf8:	88 23       	and	r24, r24
    1cfa:	2a f0       	brmi	.+10     	; 0x1d06 <log+0x28>
    1cfc:	21 97       	sbiw	r28, 0x01	; 1
    1cfe:	66 0f       	add	r22, r22
    1d00:	77 1f       	adc	r23, r23
    1d02:	88 1f       	adc	r24, r24
    1d04:	da f7       	brpl	.-10     	; 0x1cfc <log+0x1e>
    1d06:	20 e0       	ldi	r18, 0x00	; 0
    1d08:	30 e0       	ldi	r19, 0x00	; 0
    1d0a:	40 e8       	ldi	r20, 0x80	; 128
    1d0c:	5f eb       	ldi	r21, 0xBF	; 191
    1d0e:	9f e3       	ldi	r25, 0x3F	; 63
    1d10:	88 39       	cpi	r24, 0x98	; 152
    1d12:	20 f0       	brcs	.+8      	; 0x1d1c <log+0x3e>
    1d14:	80 3e       	cpi	r24, 0xE0	; 224
    1d16:	38 f0       	brcs	.+14     	; 0x1d26 <log+0x48>
    1d18:	21 96       	adiw	r28, 0x01	; 1
    1d1a:	8f 77       	andi	r24, 0x7F	; 127
    1d1c:	0e 94 97 0c 	call	0x192e	; 0x192e <__addsf3>
    1d20:	e8 e6       	ldi	r30, 0x68	; 104
    1d22:	f0 e0       	ldi	r31, 0x00	; 0
    1d24:	04 c0       	rjmp	.+8      	; 0x1d2e <log+0x50>
    1d26:	0e 94 97 0c 	call	0x192e	; 0x192e <__addsf3>
    1d2a:	e5 e9       	ldi	r30, 0x95	; 149
    1d2c:	f0 e0       	ldi	r31, 0x00	; 0
    1d2e:	0e 94 32 0f 	call	0x1e64	; 0x1e64 <__fp_powser>
    1d32:	8b 01       	movw	r16, r22
    1d34:	be 01       	movw	r22, r28
    1d36:	ec 01       	movw	r28, r24
    1d38:	fb 2e       	mov	r15, r27
    1d3a:	6f 57       	subi	r22, 0x7F	; 127
    1d3c:	71 09       	sbc	r23, r1
    1d3e:	75 95       	asr	r23
    1d40:	77 1f       	adc	r23, r23
    1d42:	88 0b       	sbc	r24, r24
    1d44:	99 0b       	sbc	r25, r25
    1d46:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__floatsisf>
    1d4a:	28 e1       	ldi	r18, 0x18	; 24
    1d4c:	32 e7       	ldi	r19, 0x72	; 114
    1d4e:	41 e3       	ldi	r20, 0x31	; 49
    1d50:	5f e3       	ldi	r21, 0x3F	; 63
    1d52:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__mulsf3x>
    1d56:	af 2d       	mov	r26, r15
    1d58:	98 01       	movw	r18, r16
    1d5a:	ae 01       	movw	r20, r28
    1d5c:	ff 90       	pop	r15
    1d5e:	0f 91       	pop	r16
    1d60:	1f 91       	pop	r17
    1d62:	cf 91       	pop	r28
    1d64:	df 91       	pop	r29
    1d66:	0e 94 ae 0c 	call	0x195c	; 0x195c <__addsf3x>
    1d6a:	0c 94 28 0e 	jmp	0x1c50	; 0x1c50 <__fp_round>

00001d6e <__mulsf3>:
    1d6e:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__mulsf3x>
    1d72:	0c 94 28 0e 	jmp	0x1c50	; 0x1c50 <__fp_round>
    1d76:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__fp_pscA>
    1d7a:	38 f0       	brcs	.+14     	; 0x1d8a <__mulsf3+0x1c>
    1d7c:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__fp_pscB>
__mulsf3():
    1d80:	20 f0       	brcs	.+8      	; 0x1d8a <__mulsf3+0x1c>
    1d82:	95 23       	and	r25, r21
    1d84:	11 f0       	breq	.+4      	; 0x1d8a <__mulsf3+0x1c>
    1d86:	0c 94 11 0e 	jmp	0x1c22	; 0x1c22 <__fp_inf>
    1d8a:	0c 94 17 0e 	jmp	0x1c2e	; 0x1c2e <__fp_nan>
    1d8e:	11 24       	eor	r1, r1
    1d90:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__fp_szero>

00001d94 <__mulsf3x>:
__mulsf3x():
    1d94:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <__fp_split3>
    1d98:	70 f3       	brcs	.-36     	; 0x1d76 <__mulsf3+0x8>

00001d9a <__mulsf3_pse>:
    1d9a:	95 9f       	mul	r25, r21
    1d9c:	c1 f3       	breq	.-16     	; 0x1d8e <__mulsf3+0x20>
    1d9e:	95 0f       	add	r25, r21
    1da0:	50 e0       	ldi	r21, 0x00	; 0
    1da2:	55 1f       	adc	r21, r21
    1da4:	62 9f       	mul	r22, r18
    1da6:	f0 01       	movw	r30, r0
    1da8:	72 9f       	mul	r23, r18
    1daa:	bb 27       	eor	r27, r27
    1dac:	f0 0d       	add	r31, r0
    1dae:	b1 1d       	adc	r27, r1
    1db0:	63 9f       	mul	r22, r19
    1db2:	aa 27       	eor	r26, r26
    1db4:	f0 0d       	add	r31, r0
    1db6:	b1 1d       	adc	r27, r1
    1db8:	aa 1f       	adc	r26, r26
    1dba:	64 9f       	mul	r22, r20
    1dbc:	66 27       	eor	r22, r22
    1dbe:	b0 0d       	add	r27, r0
    1dc0:	a1 1d       	adc	r26, r1
    1dc2:	66 1f       	adc	r22, r22
    1dc4:	82 9f       	mul	r24, r18
    1dc6:	22 27       	eor	r18, r18
    1dc8:	b0 0d       	add	r27, r0
    1dca:	a1 1d       	adc	r26, r1
    1dcc:	62 1f       	adc	r22, r18
    1dce:	73 9f       	mul	r23, r19
    1dd0:	b0 0d       	add	r27, r0
    1dd2:	a1 1d       	adc	r26, r1
    1dd4:	62 1f       	adc	r22, r18
    1dd6:	83 9f       	mul	r24, r19
    1dd8:	a0 0d       	add	r26, r0
    1dda:	61 1d       	adc	r22, r1
    1ddc:	22 1f       	adc	r18, r18
    1dde:	74 9f       	mul	r23, r20
    1de0:	33 27       	eor	r19, r19
    1de2:	a0 0d       	add	r26, r0
    1de4:	61 1d       	adc	r22, r1
    1de6:	23 1f       	adc	r18, r19
    1de8:	84 9f       	mul	r24, r20
    1dea:	60 0d       	add	r22, r0
    1dec:	21 1d       	adc	r18, r1
    1dee:	82 2f       	mov	r24, r18
    1df0:	76 2f       	mov	r23, r22
    1df2:	6a 2f       	mov	r22, r26
    1df4:	11 24       	eor	r1, r1
    1df6:	9f 57       	subi	r25, 0x7F	; 127
    1df8:	50 40       	sbci	r21, 0x00	; 0
    1dfa:	9a f0       	brmi	.+38     	; 0x1e22 <__mulsf3_pse+0x88>
    1dfc:	f1 f0       	breq	.+60     	; 0x1e3a <__mulsf3_pse+0xa0>
    1dfe:	88 23       	and	r24, r24
    1e00:	4a f0       	brmi	.+18     	; 0x1e14 <__mulsf3_pse+0x7a>
    1e02:	ee 0f       	add	r30, r30
    1e04:	ff 1f       	adc	r31, r31
    1e06:	bb 1f       	adc	r27, r27
    1e08:	66 1f       	adc	r22, r22
    1e0a:	77 1f       	adc	r23, r23
    1e0c:	88 1f       	adc	r24, r24
    1e0e:	91 50       	subi	r25, 0x01	; 1
    1e10:	50 40       	sbci	r21, 0x00	; 0
    1e12:	a9 f7       	brne	.-22     	; 0x1dfe <__mulsf3_pse+0x64>
    1e14:	9e 3f       	cpi	r25, 0xFE	; 254
    1e16:	51 05       	cpc	r21, r1
    1e18:	80 f0       	brcs	.+32     	; 0x1e3a <__mulsf3_pse+0xa0>
    1e1a:	0c 94 11 0e 	jmp	0x1c22	; 0x1c22 <__fp_inf>
    1e1e:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__fp_szero>
    1e22:	5f 3f       	cpi	r21, 0xFF	; 255
    1e24:	e4 f3       	brlt	.-8      	; 0x1e1e <__mulsf3_pse+0x84>
    1e26:	98 3e       	cpi	r25, 0xE8	; 232
    1e28:	d4 f3       	brlt	.-12     	; 0x1e1e <__mulsf3_pse+0x84>
    1e2a:	86 95       	lsr	r24
    1e2c:	77 95       	ror	r23
    1e2e:	67 95       	ror	r22
    1e30:	b7 95       	ror	r27
    1e32:	f7 95       	ror	r31
    1e34:	e7 95       	ror	r30
    1e36:	9f 5f       	subi	r25, 0xFF	; 255
    1e38:	c1 f7       	brne	.-16     	; 0x1e2a <__mulsf3_pse+0x90>
    1e3a:	fe 2b       	or	r31, r30
    1e3c:	88 0f       	add	r24, r24
    1e3e:	91 1d       	adc	r25, r1
    1e40:	96 95       	lsr	r25
    1e42:	87 95       	ror	r24
    1e44:	97 f9       	bld	r25, 7
    1e46:	08 95       	ret

00001e48 <__fp_mpack>:
    1e48:	9f 3f       	cpi	r25, 0xFF	; 255
    1e4a:	31 f0       	breq	.+12     	; 0x1e58 <__fp_mpack_finite+0xc>

00001e4c <__fp_mpack_finite>:
    1e4c:	91 50       	subi	r25, 0x01	; 1
    1e4e:	20 f4       	brcc	.+8      	; 0x1e58 <__fp_mpack_finite+0xc>
    1e50:	87 95       	ror	r24
    1e52:	77 95       	ror	r23
    1e54:	67 95       	ror	r22
    1e56:	b7 95       	ror	r27
    1e58:	88 0f       	add	r24, r24
    1e5a:	91 1d       	adc	r25, r1
    1e5c:	96 95       	lsr	r25
    1e5e:	87 95       	ror	r24
    1e60:	97 f9       	bld	r25, 7
    1e62:	08 95       	ret

00001e64 <__fp_powser>:
    1e64:	df 93       	push	r29
__fp_powser():
    1e66:	cf 93       	push	r28
    1e68:	1f 93       	push	r17
    1e6a:	0f 93       	push	r16
    1e6c:	ff 92       	push	r15
    1e6e:	ef 92       	push	r14
    1e70:	df 92       	push	r13
    1e72:	7b 01       	movw	r14, r22
    1e74:	8c 01       	movw	r16, r24
    1e76:	68 94       	set
    1e78:	06 c0       	rjmp	.+12     	; 0x1e86 <__fp_powser+0x22>
    1e7a:	da 2e       	mov	r13, r26
    1e7c:	ef 01       	movw	r28, r30
    1e7e:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__mulsf3x>
    1e82:	fe 01       	movw	r30, r28
    1e84:	e8 94       	clt
    1e86:	a5 91       	lpm	r26, Z+
    1e88:	25 91       	lpm	r18, Z+
    1e8a:	35 91       	lpm	r19, Z+
    1e8c:	45 91       	lpm	r20, Z+
    1e8e:	55 91       	lpm	r21, Z+
    1e90:	a6 f3       	brts	.-24     	; 0x1e7a <__fp_powser+0x16>
    1e92:	ef 01       	movw	r28, r30
    1e94:	0e 94 ae 0c 	call	0x195c	; 0x195c <__addsf3x>
    1e98:	fe 01       	movw	r30, r28
    1e9a:	97 01       	movw	r18, r14
    1e9c:	a8 01       	movw	r20, r16
    1e9e:	da 94       	dec	r13
    1ea0:	69 f7       	brne	.-38     	; 0x1e7c <__fp_powser+0x18>
    1ea2:	df 90       	pop	r13
    1ea4:	ef 90       	pop	r14
    1ea6:	ff 90       	pop	r15
    1ea8:	0f 91       	pop	r16
    1eaa:	1f 91       	pop	r17
    1eac:	cf 91       	pop	r28
    1eae:	df 91       	pop	r29
    1eb0:	08 95       	ret

00001eb2 <__udivmodqi4>:
__udivmodqi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1346
    1eb2:	99 1b       	sub	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1347
    1eb4:	79 e0       	ldi	r23, 0x09	; 9
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1348
    1eb6:	04 c0       	rjmp	.+8      	; 0x1ec0 <__udivmodqi4_ep>

00001eb8 <__udivmodqi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1350
    1eb8:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1351
    1eba:	96 17       	cp	r25, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1352
    1ebc:	08 f0       	brcs	.+2      	; 0x1ec0 <__udivmodqi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1353
    1ebe:	96 1b       	sub	r25, r22

00001ec0 <__udivmodqi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1355
    1ec0:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1356
    1ec2:	7a 95       	dec	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1357
    1ec4:	c9 f7       	brne	.-14     	; 0x1eb8 <__udivmodqi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1358
    1ec6:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1360
    1ec8:	08 95       	ret

00001eca <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    1eca:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    1ecc:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    1ece:	16 f4       	brtc	.+4      	; 0x1ed4 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    1ed0:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    1ed2:	07 d0       	rcall	.+14     	; 0x1ee2 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    1ed4:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    1ed6:	09 d0       	rcall	.+18     	; 0x1eea <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    1ed8:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    1edc:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    1ede:	05 d0       	rcall	.+10     	; 0x1eea <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    1ee0:	3e f4       	brtc	.+14     	; 0x1ef0 <__divmodhi4_exit>

00001ee2 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    1ee2:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    1ee4:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    1ee6:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    1ee8:	08 95       	ret

00001eea <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    1eea:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    1eec:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    1eee:	7f 4f       	sbci	r23, 0xFF	; 255

00001ef0 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    1ef0:	08 95       	ret

00001ef2 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    1ef2:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    1ef4:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    1ef6:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    1ef8:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    1efa:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    1efc:	09 94       	ijmp

00001efe <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    1efe:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    1f00:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    1f02:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    1f04:	07 c0       	rjmp	.+14     	; 0x1f14 <__udivmodhi4_ep>

00001f06 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    1f06:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    1f08:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    1f0a:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    1f0c:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    1f0e:	10 f0       	brcs	.+4      	; 0x1f14 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    1f10:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    1f12:	b7 0b       	sbc	r27, r23

00001f14 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    1f14:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    1f16:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    1f18:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    1f1a:	a9 f7       	brne	.-22     	; 0x1f06 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    1f1c:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    1f1e:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    1f20:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    1f22:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    1f24:	08 95       	ret

00001f26 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    1f26:	f8 94       	cli

00001f28 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr5/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    1f28:	ff cf       	rjmp	.-2      	; 0x1f28 <__stop_program>
